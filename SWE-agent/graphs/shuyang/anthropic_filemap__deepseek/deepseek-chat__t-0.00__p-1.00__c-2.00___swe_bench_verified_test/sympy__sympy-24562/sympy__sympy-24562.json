{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sympy__sympy-24562",
    "difficulty": "<15 min fix"
  },
  "nodes": [
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18493163702078164
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "from sympy import Rational\n\n# Test cases\nprint(Rational('0.5', '100'))  # Expected: 1/200, Actual: 1/100100\nprint(Rational(0.5, 100))      # Expected: 1/200, Actual: 1/200"
      },
      "phase": "verification",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        1.2058225341606885,
        0.4085364390630275,
        0.3974102579522878
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        1,
        8,
        10
      ],
      "id": "1:python"
    },
    {
      "label": "find",
      "execution_time": [
        4.523171602981165
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "*.py",
        "grep",
        "{}",
        ";"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "2:find"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22912640101276338
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/core/numbers.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.12033985089510679
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/sympy/core/numbers.py"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18161666905507445
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/core/numbers.py",
        "view_range": [
          1483,
          1600
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1896023591980338
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/core/numbers.py",
        "view_range": [
          1588,
          1650
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.21191952307708561
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/core/numbers.py",
        "old_str": "                if not isinstance(p, str):\n                    try:\n                        p = sympify(p)\n                    except (SympifyError, SyntaxError):\n                        pass  # error will raise below\n                else:\n                    if p.count('/') > 1:\n                        raise TypeError('invalid input: %s' % p)\n                    p = p.replace(' ', '')\n                    pq = p.rsplit('/', 1)\n                    if len(pq) == 2:\n                        p, q = pq\n                        fp = fractions.Fraction(p)\n                        fq = fractions.Fraction(q)\n                        p = fp/fq\n                    try:\n                        p = fractions.Fraction(p)\n                    except ValueError:\n                        pass  # error will raise below\n                    else:\n                        return Rational(p.numerator, p.denominator, 1)",
        "new_str": "                if not isinstance(p, str):\n                    try:\n                        p = sympify(p)\n                    except (SympifyError, SyntaxError):\n                        pass  # error will raise below\n                else:\n                    if p.count('/') > 1:\n                        raise TypeError('invalid input: %s' % p)\n                    p = p.replace(' ', '')\n                    pq = p.rsplit('/', 1)\n                    if len(pq) == 2:\n                        p, q = pq\n                        try:\n                            p = fractions.Fraction(p) / fractions.Fraction(q)\n                        except ValueError:\n                            pass  # error will raise below\n                        else:\n                            return Rational(p.numerator, p.denominator, 1)\n                    try:\n                        p = fractions.Fraction(p)\n                    except ValueError:\n                        pass  # error will raise below\n                    else:\n                        return Rational(p.numerator, p.denominator, 1)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.187888041138649
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/core/numbers.py",
        "old_str": "        if not isinstance(p, SYMPY_INTS):\n            p = Rational(p)\n            q *= p.q\n            p = p.p\n        else:\n            p = int(p)\n\n        if not isinstance(q, SYMPY_INTS):\n            q = Rational(q)\n            p *= q.q\n            q = q.p\n        else:\n            q = int(q)",
        "new_str": "        if not isinstance(p, SYMPY_INTS):\n            if isinstance(p, str) and isinstance(q, str):\n                p = fractions.Fraction(p) / fractions.Fraction(q)\n                return Rational(p.numerator, p.denominator, gcd)\n            p = Rational(p)\n            q *= p.q\n            p = p.p\n        else:\n            p = int(p)\n\n        if not isinstance(q, SYMPY_INTS):\n            q = Rational(q)\n            p *= q.q\n            q = q.p\n        else:\n            q = int(q)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.1859746091067791
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_edge_cases.py",
        "file_text": "from sympy import Rational\n\n# Test edge cases\nprint(Rational('1', '2'))  # Expected: 1/2\nprint(Rational('0.1', '10'))  # Expected: 1/100\nprint(Rational('1.5', '3'))  # Expected: 1/2"
      },
      "phase": "verification",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.3887219720054418
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_edge_cases.py"
      ],
      "phase": "verification",
      "step_indices": [
        12
      ],
      "id": "10:python"
    },
    {
      "label": "submit",
      "execution_time": [
        0.22705959412269294,
        0.22523728082887828
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        13,
        15
      ],
      "id": "11:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.12026013596914709
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py",
        "/testbed/test_edge_cases.py"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "12:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\ncreate",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:python",
      "target": "2:find",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "1:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "1:python",
      "target": "9:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:find",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\ncreate",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:python",
      "target": "11:submit",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "11:submit",
      "target": "12:rm",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:rm",
      "target": "11:submit",
      "key": 0
    }
  ]
}