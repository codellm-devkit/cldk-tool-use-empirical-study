{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "psf__requests-5414",
    "difficulty": "<15 min fix"
  },
  "nodes": [
    {
      "label": "echo",
      "execution_time": [
        0.13200624356977642
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import requests\nrequests.get(\"http://.example.com\")",
        ">",
        "reproduce_error.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:echo"
    },
    {
      "label": "python",
      "execution_time": [
        0.13200624356977642,
        0.2336967799346894,
        0.25962068187072873,
        0.2838695019017905,
        0.23894124501384795
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        0,
        4,
        8,
        11,
        13
      ],
      "id": "1:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1935448490548879
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/models.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17549487086944282
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/models.py",
        "view_range": [
          360,
          444
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18969089817255735
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/models.py",
        "old_str": "        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)",
        "new_str": "        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            if 'label empty or too long' in str(e):\n                raise InvalidURL('URL has an invalid label.')\n            raise InvalidURL(*e.args)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1879960319492966
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/adapters.py"
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1747268799226731
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/adapters.py",
        "view_range": [
          395,
          538
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18993601598776877
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/adapters.py",
        "old_str": "        try:\n            conn = self.get_connection(request.url, proxies)\n        except LocationValueError as e:\n            raise InvalidURL(e, request=request)",
        "new_str": "        try:\n            conn = self.get_connection(request.url, proxies)\n        except LocationValueError as e:\n            if 'label empty or too long' in str(e):\n                raise InvalidURL('URL has an invalid label.', request=request)\n            raise InvalidURL(e, request=request)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18069606320932508
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/adapters.py",
        "view_range": [
          293,
          318
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2171149170026183
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/adapters.py",
        "old_str": "        if proxy:\n            proxy = prepend_scheme_if_needed(proxy, 'http')\n            proxy_url = parse_url(proxy)\n            if not proxy_url.host:\n                raise InvalidProxyURL(\"Please check proxy URL. It is malformed\"\n                                      \" and could be missing the host.\")\n            proxy_manager = self.proxy_manager_for(proxy)\n            conn = proxy_manager.connection_from_url(url)\n        else:\n            # Only scheme should be lower case\n            parsed = urlparse(url)\n            url = parsed.geturl()\n            conn = self.poolmanager.connection_from_url(url)",
        "new_str": "        try:\n            if proxy:\n                proxy = prepend_scheme_if_needed(proxy, 'http')\n                proxy_url = parse_url(proxy)\n                if not proxy_url.host:\n                    raise InvalidProxyURL(\"Please check proxy URL. It is malformed\"\n                                          \" and could be missing the host.\")\n                proxy_manager = self.proxy_manager_for(proxy)\n                conn = proxy_manager.connection_from_url(url)\n            else:\n                # Only scheme should be lower case\n                parsed = urlparse(url)\n                url = parsed.geturl()\n                conn = self.poolmanager.connection_from_url(url)\n        except LocationValueError as e:\n            if 'label empty or too long' in str(e):\n                raise InvalidURL('URL has an invalid label.')\n            raise InvalidURL(e)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17358836415223777
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/models.py",
        "old_str": "        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            if 'label empty or too long' in str(e):\n                raise InvalidURL('URL has an invalid label.')\n            raise InvalidURL(*e.args)",
        "new_str": "        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            if 'label empty or too long' in str(e) or 'Failed to parse' in str(e):\n                raise InvalidURL('URL has an invalid label.')\n            raise InvalidURL(*e.args)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "11:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.19056045496836305,
        0.19683628086932003
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        15,
        17
      ],
      "id": "12:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11894950782880187
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "general",
      "step_indices": [
        16
      ],
      "id": "13:rm"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:echo",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:python",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:python",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "1:python",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "1:python",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "1:python",
      "target": "11:empty action",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "5:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "11:empty action",
      "target": "12:submit",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "12:submit",
      "target": "13:rm",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "13:rm",
      "target": "12:submit",
      "key": 0
    }
  ]
}