{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-15368",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20888909907080233
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.23484076489694417
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/query.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1848372749518603
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/query.py",
        "view_range": [
          650,
          700
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18653480196371675
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/query.py",
        "old_str": "if not isinstance(attr, Expression):\n                        attr = Value(attr, output_field=field)",
        "new_str": "if not isinstance(attr, (Expression, F)):\n                        attr = Value(attr, output_field=field)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19595599686726928
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_bulk_update_fix.py",
        "file_text": "from django.db import models, connection\nfrom django.db.models import F\n\nclass SelfRef(models.Model):\n    name = models.CharField(max_length=100)\n    c8 = models.CharField(max_length=100)\n\n# Create and save an instance\no = SelfRef.objects.create(name=\"test_name\", c8=\"initial_value\")\n\n# Assign F() expression to c8\no.c8 = F('name')\n\n# Perform bulk update\nSelfRef.objects.bulk_update([o], ['c8'])\n\n# Refresh and check the result\no.refresh_from_db()\nprint(f\"o.c8 after bulk_update: {o.c8}\")\n\n# Print the last SQL query\nprint(f\"Last SQL query: {connection.queries[-1]['sql']}\")"
      },
      "phase": "verification",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": [
        0.21538044954650104,
        0.21770649298559874
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        5,
        7
      ],
      "id": "5:cd"
    },
    {
      "label": "python",
      "execution_time": [
        0.21538044954650104,
        0.21770649298559874
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_bulk_update_fix.py"
      ],
      "phase": "verification",
      "step_indices": [
        5,
        7
      ],
      "id": "6:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.21339452103711665
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_bulk_update_fix.py",
        "old_str": "from django.db import models, connection\nfrom django.db.models import F\n\nclass SelfRef(models.Model):\n    name = models.CharField(max_length=100)\n    c8 = models.CharField(max_length=100)\n\n# Create and save an instance\no = SelfRef.objects.create(name=\"test_name\", c8=\"initial_value\")\n\n# Assign F() expression to c8\no.c8 = F('name')\n\n# Perform bulk update\nSelfRef.objects.bulk_update([o], ['c8'])\n\n# Refresh and check the result\no.refresh_from_db()\nprint(f\"o.c8 after bulk_update: {o.c8}\")\n\n# Print the last SQL query\nprint(f\"Last SQL query: {connection.queries[-1]['sql']}\")",
        "new_str": "import os\nimport django\nfrom django.conf import settings\n\n# Configure minimal Django settings\nsettings.configure(\n    INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n    ],\n    DATABASES={\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': ':memory:',\n        }\n    }\n)\n\ndjango.setup()\n\nfrom django.db import models, connection\nfrom django.db.models import F\n\nclass SelfRef(models.Model):\n    name = models.CharField(max_length=100)\n    c8 = models.CharField(max_length=100)\n\n    class Meta:\n        app_label = 'test_bulk_update'\n\n# Create the table\nwith connection.schema_editor() as schema_editor:\n    schema_editor.create_model(SelfRef)\n\n# Create and save an instance\no = SelfRef.objects.create(name=\"test_name\", c8=\"initial_value\")\n\n# Assign F() expression to c8\no.c8 = F('name')\n\n# Enable query logging\nconnection.queries_log.clear()\nconnection.force_debug_cursor = True\n\n# Perform bulk update\nSelfRef.objects.bulk_update([o], ['c8'])\n\n# Refresh and check the result\no.refresh_from_db()\nprint(f\"o.c8 after bulk_update: {o.c8}\")\n\n# Print the last SQL query\nprint(f\"Last SQL query: {connection.queries[-1]['sql']}\")",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.22966979793272913,
        0.2631904629524797
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        9,
        11
      ],
      "id": "9:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11787004698999226
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_bulk_update_fix.py"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "10:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\ncreate",
      "target": "5:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:cd",
      "target": "6:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:cd",
      "target": "6:python",
      "key": 1
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:python",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:python",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "5:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:submit",
      "target": "10:rm",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:rm",
      "target": "9:submit",
      "key": 0
    }
  ]
}