{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pytest-dev__pytest-10081",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.207075297832489
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1815777129959315
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18374957609921694
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/unittest.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17923915502615273
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/unittest.py",
        "old_str": "            # When --pdb is given, we want to postpone calling tearDown() otherwise\n            # when entering the pdb prompt, tearDown() would have probably cleaned up\n            # instance variables, which makes it difficult to debug.\n            # Arguably we could always postpone tearDown(), but this changes the moment where the\n            # TestCase instance interacts with the results object, so better to only do it\n            # when absolutely needed.\n            if self.config.getoption(\"usepdb\") and not _is_skipped(self.obj):\n                self._explicit_tearDown = self._testcase.tearDown\n                setattr(self._testcase, \"tearDown\", lambda *args: None)",
        "new_str": "            # When --pdb is given, we want to postpone calling tearDown() otherwise\n            # when entering the pdb prompt, tearDown() would have probably cleaned up\n            # instance variables, which makes it difficult to debug.\n            # Arguably we could always postpone tearDown(), but this changes the moment where the\n            # TestCase instance interacts with the results object, so better to only do it\n            # when absolutely needed.\n            if self.config.getoption(\"usepdb\"):\n                self._explicit_tearDown = self._testcase.tearDown\n                setattr(self._testcase, \"tearDown\", lambda *args: None)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": [
        1.4027970629977062,
        16.004031491582282,
        0.16328423656523228,
        15.996467487537302
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        4,
        6,
        7,
        8
      ],
      "id": "4:cd"
    },
    {
      "label": "pytest",
      "execution_time": [
        1.4027970629977062,
        16.004031491582282,
        15.996467487537302
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        4,
        6,
        8
      ],
      "id": "5:pytest"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.1949290509801358
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_repro_skip_class.py",
        "file_text": "import unittest\n\n@unittest.skip(\"hello\")\nclass MyTestCase(unittest.TestCase):\n    def setUp(self):\n        xxx\n    def test_one(self):\n        pass\n    def tearDown(self):\n        xxx"
      },
      "phase": "verification",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "pytest",
      "execution_time": [
        0.16328423656523228
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_repro_skip_class.py"
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "7:pytest"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "8:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.21304181101731956,
        0.19516764697618783
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        10,
        12
      ],
      "id": "9:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:cd",
      "target": "5:pytest",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "4:cd",
      "target": "5:pytest",
      "key": 1
    },
    {
      "label": "8",
      "type": "exec",
      "source": "4:cd",
      "target": "5:pytest",
      "key": 2
    },
    {
      "label": "7",
      "type": "exec",
      "source": "4:cd",
      "target": "7:pytest",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:pytest",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:pytest",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "5:pytest",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:pytest",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 1
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:submit",
      "target": "8:empty action",
      "key": 0
    }
  ]
}