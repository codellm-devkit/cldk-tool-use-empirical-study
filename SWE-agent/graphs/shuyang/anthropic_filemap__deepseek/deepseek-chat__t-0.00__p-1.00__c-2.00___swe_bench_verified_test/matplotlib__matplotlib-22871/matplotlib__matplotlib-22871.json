{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-22871",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20193296507932246
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19704656582325697
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21143995691090822
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/dates.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18753970600664616
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_bug.py",
        "file_text": "import matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom datetime import datetime, timedelta\n\n# Create time array\ninitial = datetime(2021, 2, 14, 0, 0, 0)\ntime_array = [initial + timedelta(days=x) for x in range(1, 200)]\n\n# Create data array\ndata = [-x**2 / 20000 for x in range(1, 200)]\n\n# Plot data\nfig, ax = plt.subplots()\nax.plot(time_array, data)\n\nlocator = mdates.AutoDateLocator()\nformatter = mdates.ConciseDateFormatter(locator)\n\nax.grid(True)\nax.set_ylabel(\"Temperature ($\\degree$C)\")\nax.xaxis.set_major_locator(locator)\nax.xaxis.set_major_formatter(formatter)\nfig.autofmt_xdate()  # Automatically makes the x-labels rotate\n\nplt.show()"
      },
      "phase": "verification",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        2.4344713571481407,
        0.6968192600179464
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_bug.py"
      ],
      "phase": "verification",
      "step_indices": [
        4,
        7
      ],
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18367478111758828
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/dates.py",
        "view_range": [
          712,
          800
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.24837387795560062
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/dates.py",
        "old_str": "        if offset_formats:\n            if len(offset_formats) != 6:\n                raise ValueError('offset_formats argument must be a list of '\n                                 '6 format strings (or None)')\n            self.offset_formats = offset_formats\n        else:\n            self.offset_formats = ['',\n                                   '%Y',\n                                   '%Y-%b',\n                                   '%Y-%b-%d',\n                                   '%Y-%b-%d',\n                                   '%Y-%b-%d %H:%M']",
        "new_str": "        if offset_formats:\n            if len(offset_formats) != 6:\n                raise ValueError('offset_formats argument must be a list of '\n                                 '6 format strings (or None)')\n            self.offset_formats = offset_formats\n        else:\n            self.offset_formats = ['%Y',  # Always include year for level 0\n                                   '%Y',  # Always include year for level 1\n                                   '%Y-%b',\n                                   '%Y-%b-%d',\n                                   '%Y-%b-%d',\n                                   '%Y-%b-%d %H:%M']",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "7:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.2317973410245031,
        0.23308023693971336
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        9,
        11
      ],
      "id": "8:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11832002294249833
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_bug.py"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "9:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "4:python",
      "target": "7:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:empty action",
      "target": "8:submit",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:submit",
      "target": "9:rm",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:rm",
      "target": "8:submit",
      "key": 0
    }
  ]
}