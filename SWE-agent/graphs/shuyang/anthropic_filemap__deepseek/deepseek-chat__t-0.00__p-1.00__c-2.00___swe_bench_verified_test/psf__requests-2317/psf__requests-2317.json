{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "psf__requests-2317",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19221510621719062
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/sessions.py"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1744826959911734
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/sessions.py",
        "view_range": [
          300,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1756822499446571
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/sessions.py",
        "view_range": [
          350,
          450
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2035303800366819
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/compat.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19107543886639178
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_issue.py",
        "file_text": "import requests\n\n# Simulate passing a binary string as the method\nmethod = b'GET'\nurl = 'http://httpbin.org/get'\n\n# Make the request\nresponse = requests.request(method, url)\nprint(response.status_code)"
      },
      "phase": "verification",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.2650044718757272,
        0.2163236360065639,
        0.2195309861563146,
        0.2868364730384201
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py"
      ],
      "phase": "verification",
      "step_indices": [
        5,
        7,
        10,
        12
      ],
      "id": "5:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19729200284928083
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/compat.py",
        "old_str": "    builtin_str = str\n    str = str\n    bytes = bytes\n    basestring = (str, bytes)\n    numeric_types = (int, float)",
        "new_str": "    def builtin_str(s):\n        if isinstance(s, bytes):\n            return s.decode('utf-8')\n        return str(s)\n    str = str\n    bytes = bytes\n    basestring = (str, bytes)\n    numeric_types = (int, float)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18147466494701803
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/compat.py",
        "old_str": "    def builtin_str(s):\n        if isinstance(s, bytes):\n            return s.decode('utf-8')\n        return str(s)\n    str = str\n    bytes = bytes\n    basestring = (str, bytes)\n    numeric_types = (int, float)",
        "new_str": "    def _builtin_str(s):\n        if isinstance(s, bytes):\n            return s.decode('utf-8')\n        return str(s)\n    builtin_str = str\n    str = str\n    bytes = bytes\n    basestring = (str, bytes)\n    numeric_types = (int, float)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17653821990825236
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/sessions.py",
        "old_str": "        method = builtin_str(method)",
        "new_str": "        method = _builtin_str(method)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17684991494752467
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/sessions.py",
        "old_str": "from .compat import cookielib, OrderedDict, urljoin, urlparse, builtin_str",
        "new_str": "from .compat import cookielib, OrderedDict, urljoin, urlparse, builtin_str, _builtin_str",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "10:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.20831841486506164,
        0.2077106270007789
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        14,
        17
      ],
      "id": "11:submit"
    },
    {
      "label": "str_replace_editor\nundo_edit",
      "execution_time": [
        0.17458685394376516
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_issue.py"
      },
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "12:str_replace_editor\nundo_edit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11951152910478413
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py"
      ],
      "phase": "general",
      "step_indices": [
        16
      ],
      "id": "13:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\ncreate",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "5:python",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "5:python",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "5:python",
      "target": "10:empty action",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:empty action",
      "target": "11:submit",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "11:submit",
      "target": "12:str_replace_editor\nundo_edit",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "12:str_replace_editor\nundo_edit",
      "target": "13:rm",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "13:rm",
      "target": "11:submit",
      "key": 0
    }
  ]
}