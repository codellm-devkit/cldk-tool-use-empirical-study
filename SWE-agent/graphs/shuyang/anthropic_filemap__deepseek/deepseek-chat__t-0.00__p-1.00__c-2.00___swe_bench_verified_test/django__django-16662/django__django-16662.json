{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-16662",
    "difficulty": "15 min - 1 hour"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2028298149816692
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19848756096325815
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19284891011193395
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/writer.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20639626285992563
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/writer.py",
        "old_str": "        # Sort imports by the package / module to be imported (the part after\n        # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n        items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"",
        "new_str": "        # Separate imports into \"import module\" and \"from module import objects\"\n        import_statements = []\n        from_statements = []\n        for statement in imports:\n            if statement.startswith(\"import \"):\n                import_statements.append(statement)\n            else:\n                from_statements.append(statement)\n        \n        # Sort each group alphabetically\n        sorted_imports = sorted(import_statements, key=lambda i: i.split()[1])\n        sorted_froms = sorted(from_statements, key=lambda i: i.split()[1])\n        \n        # Combine with \"import\" statements first\n        items[\"imports\"] = \"\\n\".join(sorted_imports + sorted_froms) + \"\\n\" if imports else \"\"",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.30698111094534397,
        0.23845441616140306
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        5,
        7
      ],
      "id": "5:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:empty action",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:empty action",
      "target": "5:submit",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "4:empty action",
      "target": "5:submit",
      "key": 1
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:submit",
      "target": "4:empty action",
      "key": 0
    }
  ]
}