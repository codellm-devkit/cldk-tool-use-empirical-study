{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-14539",
    "difficulty": "<15 min fix"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.217784017091617
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19005269091576338
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20523540303111076
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18330038688145578
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_urlize.py",
        "file_text": "from django.utils.html import urlize\n\n# Example from PR description\nresult = urlize('Search for google.com/?q=1&lt! and see.')\nprint(result)"
      },
      "phase": "verification",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.29809802188538015,
        0.2533989690709859
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_urlize.py"
      ],
      "phase": "verification",
      "step_indices": [
        4,
        6
      ],
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18197168805636466,
        0.186691242037341
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Unescape entities to avoid\n            # breaking them by removing ';'.\n            middle_unescaped = html.unescape(middle)\n            stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle_unescaped != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped) - len(middle_unescaped)]\n                trimmed_something = True",
        "new_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Do not unescape entities to preserve\n            # their structure.\n            stripped = middle.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped)]\n                trimmed_something = True",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        5,
        20
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.1772539559751749
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_edge_cases.py",
        "file_text": "from django.utils.html import urlize\n\n# Test cases\ntest_cases = [\n    ('Search for google.com/?q=1&amp! and see.', 'Search for <a href=\"http://google.com/?q=1%26\">google.com/?q=1&amp</a>! and see.'),\n    ('Visit example.com/?q=1&lt, now.', 'Visit <a href=\"http://example.com/?q=1%3C\">example.com/?q=1&lt</a>, now.'),\n    ('Check out example.com/?q=1&lt?', 'Check out <a href=\"http://example.com/?q=1%3C\">example.com/?q=1&lt</a>?')\n]\n\nfor input_str, expected in test_cases:\n    result = urlize(input_str)\n    assert result == expected, f\"Test failed for input '{input_str}':\\nExpected: {expected}\\nGot: {result}\"\n    print(f\"Test passed for input '{input_str}'\")\n\nprint(\"All edge case tests passed!\")"
      },
      "phase": "verification",
      "step_indices": [
        7
      ],
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.23093060706742108,
        0.2350887218490243,
        0.2702905060723424,
        0.2401237899903208,
        0.26191078685224056,
        0.2519781228620559,
        0.2828495630528778,
        0.2549830579664558,
        0.22442028298974037,
        0.24503810284659266,
        0.28014602698385715,
        0.270832858979702,
        0.26034375303424895,
        0.26426584692671895,
        0.2553471641149372,
        0.2586347779724747
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_edge_cases.py"
      ],
      "phase": "verification",
      "step_indices": [
        8,
        11,
        16,
        21,
        27,
        33,
        39,
        45,
        51,
        57,
        63,
        69,
        75,
        81,
        87,
        93
      ],
      "id": "7:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19777365191839635,
        0.18893626402132213,
        0.2004498210735619,
        0.20596631313674152,
        0.1932621211744845,
        0.22968231490813196,
        0.19028014689683914,
        0.1925155110657215,
        0.22580175194889307,
        0.19298391696065664,
        0.1967911950778216,
        0.20528754498809576,
        0.20731268892996013,
        0.20513511495664716,
        0.21014999994076788
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "def smart_urlquote(url):\n    \"\"\"Quote a URL if it isn't already quoted.\"\"\"\n    def unquote_quote(segment):\n        segment = unquote(segment)\n        # Tilde is part of RFC3986 Unreserved Characters\n        # https://tools.ietf.org/html/rfc3986#section-2.3\n        # See also https://bugs.python.org/issue16285\n        return quote(segment, safe=RFC3986_SUBDELIMS + RFC3986_GENDELIMS + '~')\n\n    # Handle IDN before quoting.\n    try:\n        scheme, netloc, path, query, fragment = urlsplit(url)\n    except ValueError:\n        # invalid IPv6 URL (normally square brackets in hostname part).\n        return unquote_quote(url)\n\n    try:\n        netloc = punycode(netloc)  # IDN -> ACE\n    except UnicodeError:  # invalid domain part\n        return unquote_quote(url)\n\n    if query:\n        # Separately unquoting key/value, so as to not mix querystring separators\n        # included in query values. See #22267.\n        query_parts = [(unquote(q[0]), unquote(q[1]))\n                       for q in parse_qsl(query, keep_blank_values=True)]\n        # urlencode will take care of quoting\n        query = urlencode(query_parts)\n\n    path = unquote_quote(path)\n    fragment = unquote_quote(fragment)\n\n    return urlunsplit((scheme, netloc, path, query, fragment))",
        "new_str": "def smart_urlquote(url):\n    \"\"\"Quote a URL if it isn't already quoted.\"\"\"\n    def unquote_quote(segment):\n        segment = unquote(segment)\n        # Tilde is part of RFC3986 Unreserved Characters\n        # https://tools.ietf.org/html/rfc3986#section-2.3\n        # See also https://bugs.python.org/issue16285\n        return quote(segment, safe=RFC3986_SUBDELIMS + RFC3986_GENDELIMS + '~')\n\n    # Handle IDN before quoting.\n    try:\n        scheme, netloc, path, query, fragment = urlsplit(url)\n    except ValueError:\n        # invalid IPv6 URL (normally square brackets in hostname part).\n        return unquote_quote(url)\n\n    try:\n        netloc = punycode(netloc)  # IDN -> ACE\n    except UnicodeError:  # invalid domain part\n        return unquote_quote(url)\n\n    if query:\n        # Separately unquoting key/value, so as to not mix querystring separators\n        # included in query values. See #22267.\n        query_parts = [(unquote(q[0]), unquote(q[1]))\n                       for q in parse_qsl(query, keep_blank_values=True)]\n        # urlencode will take care of quoting\n        query = urlencode(query_parts)\n\n    path = unquote_quote(path)\n    fragment = unquote_quote(fragment)\n\n    return urlunsplit((scheme, netloc, path, query, fragment))",
        "edit_status": "failure: no change"
      },
      "phase": "patch",
      "step_indices": [
        9,
        12,
        17,
        22,
        28,
        34,
        40,
        46,
        52,
        58,
        64,
        70,
        76,
        82,
        88
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18784550204873085,
        0.20315521210432053,
        0.19173156516626477,
        0.19111511413939297,
        0.202083335025236,
        0.1901985239237547,
        0.1925039531197399,
        0.18316271691583097,
        0.21334187709726393,
        0.1812412969302386,
        0.2041776431724429,
        0.18586962413974106,
        0.21508503798395395,
        0.19316376419737935
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(html.unescape(middle))\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % html.unescape(middle))",
        "new_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(middle)\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % middle)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10,
        15,
        26,
        32,
        38,
        44,
        50,
        56,
        62,
        68,
        74,
        80,
        86,
        92
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17360103479586542,
        0.18744567804969847,
        0.18757666111923754,
        0.18302779691293836,
        0.21329121408052742,
        0.19317446206696332,
        0.15524090616963804,
        0.18833572883158922,
        0.19426078698597848,
        0.18811468384228647,
        0.18762316182255745,
        0.19301662500947714,
        0.1898443449754268
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(middle)\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % middle)",
        "new_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(html.unescape(middle))\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % html.unescape(middle))",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13,
        23,
        29,
        35,
        41,
        47,
        53,
        59,
        65,
        71,
        77,
        83,
        89
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2005686650518328
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Do not unescape entities to preserve\n            # their structure.\n            stripped = middle.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped)]\n                trimmed_something = True",
        "new_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Unescape entities to avoid\n            # breaking them by removing ';'.\n            middle_unescaped = html.unescape(middle)\n            stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle_unescaped != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped) - len(middle_unescaped)]\n                trimmed_something = True",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17937254696153104
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(html.unescape(middle))\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % html.unescape(middle))",
        "new_str": "            if simple_url_re.match(middle):\n                url = smart_urlquote(middle)\n            elif simple_url_2_re.match(middle):\n                url = smart_urlquote('http://%s' % middle)",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19649110198952258
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "view_range": [
          310,
          330
        ]
      },
      "phase": "localization",
      "step_indices": [
        19
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18787664989940822,
        0.20264814794063568,
        0.19588551693595946,
        0.18379662884399295,
        0.1806775180157274,
        0.19797598803415895,
        0.1764936880208552,
        0.185695017920807,
        0.19160372507758439,
        0.19467259314842522,
        0.1968497249763459,
        0.18445867113769054
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "old_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Unescape entities to avoid\n            # breaking them by removing ';'.\n            middle_unescaped = html.unescape(middle)\n            stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle_unescaped != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped) - len(middle_unescaped)]\n                trimmed_something = True",
        "new_str": "            # Trim trailing punctuation (after trimming wrapping punctuation,\n            # as encoded entities contain ';'). Do not unescape entities to preserve\n            # their structure.\n            stripped = middle.rstrip(TRAILING_PUNCTUATION_CHARS)\n            if middle != stripped:\n                trail = middle[len(stripped):] + trail\n                middle = middle[:len(stripped)]\n                trimmed_something = True",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        24,
        30,
        36,
        42,
        48,
        54,
        60,
        66,
        72,
        78,
        84,
        90
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18423611903563142,
        0.18721376708708704,
        0.18147661304101348,
        0.18472467502579093,
        0.1805974030867219,
        0.17864085920155048,
        0.1633028679061681,
        0.17073916108347476,
        0.18519743322394788,
        0.17624802398495376,
        0.1919330630917102,
        0.1684235311113298
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/html.py",
        "view_range": [
          280,
          290
        ]
      },
      "phase": "localization",
      "step_indices": [
        25,
        31,
        37,
        43,
        49,
        55,
        61,
        67,
        73,
        79,
        85,
        91
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        94
      ],
      "id": "16:empty action"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "4:python",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 1
    },
    {
      "label": "17",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 2
    },
    {
      "label": "22",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 3
    },
    {
      "label": "28",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 4
    },
    {
      "label": "34",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 5
    },
    {
      "label": "40",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 6
    },
    {
      "label": "46",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 7
    },
    {
      "label": "52",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 8
    },
    {
      "label": "58",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 9
    },
    {
      "label": "64",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 10
    },
    {
      "label": "70",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 11
    },
    {
      "label": "76",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 12
    },
    {
      "label": "82",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 13
    },
    {
      "label": "88",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 14
    },
    {
      "label": "94",
      "type": "exec",
      "source": "7:python",
      "target": "16:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 1
    },
    {
      "label": "29",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 2
    },
    {
      "label": "35",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 3
    },
    {
      "label": "41",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 4
    },
    {
      "label": "47",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 5
    },
    {
      "label": "53",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 6
    },
    {
      "label": "59",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 7
    },
    {
      "label": "65",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 8
    },
    {
      "label": "71",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 9
    },
    {
      "label": "77",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 10
    },
    {
      "label": "83",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 11
    },
    {
      "label": "89",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 12
    },
    {
      "label": "18",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 1
    },
    {
      "label": "27",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 2
    },
    {
      "label": "33",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 3
    },
    {
      "label": "39",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 4
    },
    {
      "label": "45",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 5
    },
    {
      "label": "51",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 6
    },
    {
      "label": "57",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 7
    },
    {
      "label": "63",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 8
    },
    {
      "label": "69",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 9
    },
    {
      "label": "75",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 10
    },
    {
      "label": "81",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 11
    },
    {
      "label": "87",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 12
    },
    {
      "label": "93",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 13
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 1
    },
    {
      "label": "36",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 2
    },
    {
      "label": "42",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 3
    },
    {
      "label": "48",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 4
    },
    {
      "label": "54",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 5
    },
    {
      "label": "60",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 6
    },
    {
      "label": "66",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 7
    },
    {
      "label": "72",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 8
    },
    {
      "label": "78",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 9
    },
    {
      "label": "84",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 10
    },
    {
      "label": "90",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 11
    },
    {
      "label": "15",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "37",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 2
    },
    {
      "label": "43",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 3
    },
    {
      "label": "49",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 4
    },
    {
      "label": "55",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 5
    },
    {
      "label": "61",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 6
    },
    {
      "label": "67",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 7
    },
    {
      "label": "73",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 8
    },
    {
      "label": "79",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 9
    },
    {
      "label": "85",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 10
    },
    {
      "label": "91",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nview",
      "key": 11
    },
    {
      "label": "26",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 1
    },
    {
      "label": "38",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 2
    },
    {
      "label": "44",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 3
    },
    {
      "label": "50",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 4
    },
    {
      "label": "56",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 5
    },
    {
      "label": "62",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 6
    },
    {
      "label": "68",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 7
    },
    {
      "label": "74",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 8
    },
    {
      "label": "80",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 9
    },
    {
      "label": "86",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 10
    },
    {
      "label": "92",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 11
    }
  ]
}