{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sphinx-doc__sphinx-7910",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 3
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20157708902843297
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18706787191331387
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "import functools\n\ndef decorator(func):\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        return func(*args, **kwargs)\n    return wrapper\n\nclass MyClass:\n    @decorator\n    def __init__(self):\n        \"\"\"This is the docstring for __init__.\"\"\"\n        pass\n\n# Print the docstring to confirm it exists\nprint(\"Docstring:\", MyClass.__init__.__doc__)\n\n# Simulate Sphinx's behavior\ncls_path = \"MyClass\"\nobj = MyClass.__init__\n\ntry:\n    cls = obj.__globals__[cls_path]\n    print(\"Class found in __globals__:\", cls)\nexcept KeyError:\n    print(\"Class not found in __globals__. This is the issue!\")\n"
      },
      "phase": "verification",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.16719749406911433,
        0.15014100284315646,
        0.16675288300029933
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        2,
        4,
        11
      ],
      "id": "2:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1845746801700443
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "import functools\n\ndef decorator(func):\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        return func(*args, **kwargs)\n    return wrapper\n\nclass MyClass:\n    @decorator\n    def __init__(self):\n        \"\"\"This is the docstring for __init__.\"\"\"\n        pass\n\n# Print the docstring to confirm it exists\nprint(\"Docstring:\", MyClass.__init__.__doc__)\n\n# Simulate Sphinx's behavior\ncls_path = \"MyClass\"\nobj = MyClass.__init__\n\ntry:\n    cls = obj.__globals__[cls_path]\n    print(\"Class found in __globals__:\", cls)\nexcept KeyError:\n    print(\"Class not found in __globals__. This is the issue!\")\n",
        "new_str": "import functools\nimport sys\nimport os\n\n# Simulate Sphinx's module loading\nsys.path.insert(0, os.path.abspath('.'))\n\ndef decorator(func):\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        return func(*args, **kwargs)\n    return wrapper\n\nclass MyClass:\n    @decorator\n    def __init__(self):\n        \"\"\"This is the docstring for __init__.\"\"\"\n        pass\n\n# Print the docstring to confirm it exists\nprint(\"Docstring:\", MyClass.__init__.__doc__)\n\n# Simulate Sphinx's behavior\ncls_path = \"MyClass\"\nobj = MyClass.__init__\n\ntry:\n    cls = obj.__globals__[cls_path]\n    print(\"Class found in __globals__:\", cls)\nexcept KeyError:\n    print(\"Class not found in __globals__. This is the issue!\")\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18683488480746746
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/ext/autodoc"
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20415266184136271
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/ext/autodoc/__init__.py"
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.1215174829121679
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/sphinx/ext/autodoc/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "6:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17903011199086905
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/ext/autodoc/__init__.py",
        "view_range": [
          1691,
          1800
        ]
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1942690999712795
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/ext/autodoc/__init__.py",
        "view_range": [
          1706,
          1721
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19747878098860383
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/ext/autodoc/__init__.py",
        "old_str": "    def import_object(self) -> Any:\n        ret = super().import_object()\n        if not ret:\n            return ret\n\n        # to distinguish classmethod/staticmethod\n        obj = self.parent.__dict__.get(self.object_name)\n        if obj is None:\n            obj = self.object\n\n        if (inspect.isclassmethod(obj) or\n                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name)):\n            # document class and static members before ordinary ones\n            self.member_order = self.member_order - 1\n\n        return ret",
        "new_str": "    def import_object(self) -> Any:\n        ret = super().import_object()\n        if not ret:\n            return ret\n\n        # to distinguish classmethod/staticmethod\n        obj = self.parent.__dict__.get(self.object_name)\n        if obj is None:\n            obj = self.object\n\n        if (inspect.isclassmethod(obj) or\n                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name)):\n            # document class and static members before ordinary ones\n            self.member_order = self.member_order - 1\n\n        # Ensure decorated methods retain the class reference in __globals__\n        if hasattr(obj, '__wrapped__'):  # Check if the method is decorated\n            if not hasattr(obj, '__globals__') or self.parent.__name__ not in obj.__globals__:\n                obj.__globals__[self.parent.__name__] = self.parent\n\n        return ret",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "10:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.24331936798989773,
        0.23414728394709527
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        13,
        16
      ],
      "id": "11:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11945497710257769
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "12:rm"
    },
    {
      "label": "git",
      "execution_time": [
        0.1252257979940623
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "checkout",
        "/testbed/tox.ini"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "13:git"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\ncreate",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:python",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "2:python",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "2:python",
      "target": "10:empty action",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "5:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:grep",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:empty action",
      "target": "11:submit",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "11:submit",
      "target": "12:rm",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:rm",
      "target": "13:git",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "13:git",
      "target": "11:submit",
      "key": 0
    }
  ]
}