{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sphinx-doc__sphinx-11510",
    "difficulty": "1-4 hours",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "mkdir",
      "execution_time": [
        0.021557111176662147,
        7.692288224294316
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        0,
        1
      ],
      "id": "0:mkdir"
    },
    {
      "label": "echo",
      "execution_time": [
        0.021557111176662147,
        7.692288224294316
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nimport os\n\nsys.path.insert(0, os.path.abspath('.'))\n\nextensions = [\n        'my-extension'\n]",
        ">",
        "/testbed/conf.py"
      ],
      "phase": "general",
      "step_indices": [
        0,
        1
      ],
      "id": "1:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.021557111176662147
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "2:echo"
    },
    {
      "label": ", REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
      "execution_time": [
        0.021557111176662147
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        ">",
        "/testbed/my-extension.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "3:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )"
    },
    {
      "label": "sphinx-build",
      "execution_time": [
        0.021557111176662147,
        7.692288224294316,
        6.209157558972947,
        1.6246673504356295
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "/testbed/build"
      ],
      "phase": "general",
      "step_indices": [
        0,
        1,
        13,
        15
      ],
      "id": "4:sphinx-build"
    },
    {
      "label": "grep",
      "execution_time": [
        0.021557111176662147,
        7.692288224294316,
        6.209157558972947,
        1.6246673504356295
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/build/*.html"
      ],
      "phase": "general",
      "step_indices": [
        0,
        1,
        13,
        15
      ],
      "id": "5:grep"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "6:empty action"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18899972201325
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/conf.py",
        "file_text": "import sys\nimport os\n\nsys.path.insert(0, os.path.abspath('.'))\n\nextensions = [\n        'my-extension'\n]"
      },
      "phase": "verification",
      "step_indices": [
        3
      ],
      "id": "7:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1677678320556879
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/conf.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19051432912237942
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/index.rst"
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18453549314290285
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py"
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": ", REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )\n#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "execution_time": [
        0.09358600445557386
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "11:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )\n#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME"
    },
    {
      "label": ", REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "execution_time": [
        0.09358600445557386,
        0.18720320705324411
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        12,
        14
      ],
      "id": "12:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:mkdir",
      "target": "1:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "0:mkdir",
      "target": "1:echo",
      "key": 1
    },
    {
      "label": "0",
      "type": "exec",
      "source": "1:echo",
      "target": "2:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:echo",
      "target": "4:sphinx-build",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "2:echo",
      "target": "3:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "3:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
      "target": "4:sphinx-build",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "4:sphinx-build",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "4:sphinx-build",
      "target": "5:grep",
      "key": 1
    },
    {
      "label": "13",
      "type": "exec",
      "source": "4:sphinx-build",
      "target": "5:grep",
      "key": 2
    },
    {
      "label": "15",
      "type": "exec",
      "source": "4:sphinx-build",
      "target": "5:grep",
      "key": 3
    },
    {
      "label": "1",
      "type": "exec",
      "source": "5:grep",
      "target": "0:mkdir",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "5:grep",
      "target": "6:empty action",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "5:grep",
      "target": "6:empty action",
      "key": 1
    },
    {
      "label": "14",
      "type": "exec",
      "source": "5:grep",
      "target": "12:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "6:empty action",
      "target": "7:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "7:str_replace_editor\ncreate",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )\n#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )\n#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "target": "12:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "target": "4:sphinx-build",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('\"source-read\"', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )' --new_str '#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '\"1.0\"'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME",
      "target": "4:sphinx-build",
      "key": 1
    }
  ]
}