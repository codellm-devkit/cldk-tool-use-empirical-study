{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-13212",
    "difficulty": "1-4 hours"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21015351498499513
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20593646308407187
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21652519586496055,
        0.18643598398193717
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          209,
          228
        ]
      },
      "phase": "localization",
      "step_indices": [
        2,
        18
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19647696102038026
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "            raise ValidationError(self.message, code=self.code)",
        "new_str": "            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "failure: multiple occurrences"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19207869516685605
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "        if not value or '@' not in value:\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "        if not value or '@' not in value:\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18695342913269997
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "        if not self.user_regex.match(user_part):\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "        if not self.user_regex.match(user_part):\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.21436823718249798
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "                if self.validate_domain_part(domain_part):\n                    return\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "                if self.validate_domain_part(domain_part):\n                    return\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.16749029699712992,
        0.18303221790120006
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          101,
          142
        ]
      },
      "phase": "localization",
      "step_indices": [
        7,
        19
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.21013514697551727
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "        if not isinstance(value, str):\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "        if not isinstance(value, str):\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20153622119687498
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "        if scheme not in self.schemes:\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "        if scheme not in self.schemes:\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18530423613265157
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "                except ValueError:  # for example, \"Invalid IPv6 URL\"\n                    raise ValidationError(self.message, code=self.code)",
        "new_str": "                except ValueError:  # for example, \"Invalid IPv6 URL\"\n                    raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19701384892687201
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "                except ValidationError:\n                    raise ValidationError(self.message, code=self.code)",
        "new_str": "                except ValidationError:\n                    raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1985163709614426
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "        if len(urlsplit(value).netloc) > 253:\n            raise ValidationError(self.message, code=self.code)",
        "new_str": "        if len(urlsplit(value).netloc) > 253:\n            raise ValidationError(self.message, code=self.code, params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19736970798112452
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          271,
          275
        ]
      },
      "phase": "localization",
      "step_indices": [
        13
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1766028949059546
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          278,
          280
        ]
      },
      "phase": "localization",
      "step_indices": [
        14
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18360998597927392
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          256,
          261
        ]
      },
      "phase": "localization",
      "step_indices": [
        15
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2007360418792814
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "    except ValueError:\n        raise ValidationError(_('Enter a valid IPv4 address.'), code='invalid')",
        "new_str": "    except ValueError:\n        raise ValidationError(_('Enter a valid IPv4 address.'), code='invalid', params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        16
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1932851120363921
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "old_str": "    if not is_valid_ipv6_address(value):\n        raise ValidationError(_('Enter a valid IPv6 address.'), code='invalid')",
        "new_str": "    if not is_valid_ipv6_address(value):\n        raise ValidationError(_('Enter a valid IPv6 address.'), code='invalid', params={'value': value})",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        17
      ],
      "id": "17:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19381096307188272
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/core/validators.py",
        "view_range": [
          271,
          280
        ]
      },
      "phase": "localization",
      "step_indices": [
        20
      ],
      "id": "18:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        21
      ],
      "id": "19:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.27294707484543324,
        0.24903718498535454
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        22,
        24
      ],
      "id": "20:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "18:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "18:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "17:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:str_replace_editor\nstr_replace",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "18:str_replace_editor\nview",
      "target": "19:empty action",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "19:empty action",
      "target": "20:submit",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "19:empty action",
      "target": "20:submit",
      "key": 1
    },
    {
      "label": "23",
      "type": "exec",
      "source": "20:submit",
      "target": "19:empty action",
      "key": 0
    }
  ]
}