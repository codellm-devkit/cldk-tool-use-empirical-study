{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "astropy__astropy-14508",
    "difficulty": "15 min - 1 hour"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21561376983299851
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/io/fits/card.py"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1935325600206852
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/io/fits/card.py",
        "view_range": [
          1300,
          1305
        ]
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19506575306877494
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "from astropy.io import fits\n\n# Reproduce the issue\ntry:\n    c = fits.Card('HIERARCH ESO IFM CL RADIUS', 0.009125, '[m] radius around actuator to avoid')\n    print(f\"Original card: {c}\")\n    print(f\"Repr: {repr(c)}\")\n    print(f\"Str: {str(c)}\")\nexcept Exception as e:\n    print(f\"Error: {e}\")"
      },
      "phase": "verification",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.43950284202583134,
        0.3219121361616999,
        0.3421924370341003
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        3,
        5,
        7
      ],
      "id": "3:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18623200710862875
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/io/fits/card.py",
        "old_str": "def _format_float(value):\n    \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n    value_str = f\"{value:.16G}\"\n    if \".\" not in value_str and \"E\" not in value_str:\n        value_str += \".0\"\n    elif \"E\" in value_str:",
        "new_str": "def _format_float(value):\n    \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n    # First try the Python string representation\n    value_str = str(value)\n    if len(value_str) > 20 or (\".\" not in value_str and \"E\" not in value_str):\n        # Fall back to the current formatting if the string is too long or lacks a decimal point\n        value_str = f\"{value:.16G}\"\n        if \".\" not in value_str and \"E\" not in value_str:\n            value_str += \".0\"\n        elif \"E\" in value_str:",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19328099698759615
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/io/fits/card.py",
        "old_str": "def _format_float(value):\n    \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n    # First try the Python string representation\n    value_str = str(value)\n    if len(value_str) > 20 or (\".\" not in value_str and \"E\" not in value_str):\n        # Fall back to the current formatting if the string is too long or lacks a decimal point\n        value_str = f\"{value:.16G}\"\n        if \".\" not in value_str and \"E\" not in value_str:\n            value_str += \".0\"\n        elif \"E\" in value_str:",
        "new_str": "def _format_float(value):\n    \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n    # First try the Python string representation\n    value_str = str(value)\n    if len(value_str) > 20 or (\".\" not in value_str and \"E\" not in value_str):\n        # Fall back to the current formatting if the string is too long or lacks a decimal point\n        value_str = f\"{value:.16G}\"\n        if \".\" not in value_str and \"E\" not in value_str:\n            value_str += \".0\"\n        elif \"E\" in value_str:\n            # On some Windows builds of Python (and possibly other platforms?) the\n            # exponent is zero-padded out to, it seems, three digits.  Normalize\n            # the format to pad only to two digits.\n            significand, exponent = value_str.split(\"E\")\n            exponent = exponent.lstrip(\"+\")\n            if exponent.startswith(\"-\"):\n                sign = \"-\"\n                exponent = exponent[1:]\n            else:\n                sign = \"+\"\n            exponent = exponent.lstrip(\"0\")\n            if not exponent:\n                exponent = \"0\"\n            elif len(exponent) > 2:\n                exponent = exponent[:2]\n            value_str = f\"{significand}E{sign}{exponent}\"",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18209692393429577
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_edge_cases.py",
        "file_text": "from astropy.io import fits\n\n# Test edge cases\ntest_cases = [\n    (1.234567890123456789, \"Long decimal\"),\n    (1.23e-10, \"Small number\"),\n    (1.23e10, \"Large number\"),\n    (1234567890.123456789, \"Very long decimal\"),\n]\n\nfor value, comment in test_cases:\n    try:\n        c = fits.Card('TEST', value, comment)\n        print(f\"Value: {value}, Comment: {comment}\")\n        print(f\"Card: {c}\")\n    except Exception as e:\n        print(f\"Error for {value}: {e}\")"
      },
      "phase": "verification",
      "step_indices": [
        8
      ],
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.32724705105647445
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_edge_cases.py"
      ],
      "phase": "verification",
      "step_indices": [
        9
      ],
      "id": "7:python"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "8:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.24154272489249706,
        0.22062442381866276
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        11,
        13
      ],
      "id": "9:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\ncreate",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:python",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "3:python",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "3:python",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "7:python",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 1
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:submit",
      "target": "8:empty action",
      "key": 0
    }
  ]
}