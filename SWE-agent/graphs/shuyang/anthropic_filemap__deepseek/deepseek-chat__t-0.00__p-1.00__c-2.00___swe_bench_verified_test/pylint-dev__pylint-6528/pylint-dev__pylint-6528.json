{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pylint-dev__pylint-6528",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 2,
    "patch_difficulty": "medium",
    "files_change": 3
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1905216290615499
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:empty action"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19268605997785926
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.16960682603530586
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/run.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19771544192917645
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": [
        0.02537441300228238,
        0.02537441300228238
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        5,
        5
      ],
      "id": "5:mkdir"
    },
    {
      "label": "echo",
      "execution_time": [
        0.02537441300228238
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import re",
        ">",
        "/testbed/reproduce/foo.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "6:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.02537441300228238
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import re",
        ">",
        "/testbed/reproduce/bar.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "7:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.02537441300228238
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import re",
        ">",
        "/testbed/reproduce/.a/foo.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "8:echo"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19607738102786243
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_issue.py",
        "file_text": "import subprocess\n\n# Test cases\ntest_cases = [\n    \"pylint --recursive=y /testbed/reproduce\",\n    \"pylint --recursive=y --ignore=.a /testbed/reproduce\",\n    \"pylint --recursive=y --ignore-paths=.a /testbed/reproduce\",\n    \"pylint --recursive=y --ignore-patterns='^\\\\.a' /testbed/reproduce\",\n]\n\nfor cmd in test_cases:\n    print(f\"Running: {cmd}\")\n    result = subprocess.run(cmd.split(), capture_output=True, text=True)\n    print(result.stdout)\n    print(\"-----\")"
      },
      "phase": "verification",
      "step_indices": [
        6
      ],
      "id": "9:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        2.6664912630803883,
        2.5531320630107075,
        2.8116586122196168,
        2.579861796926707,
        2.7931401568930596,
        2.6240566801279783
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py"
      ],
      "phase": "verification",
      "step_indices": [
        7,
        11,
        13,
        15,
        29,
        33
      ],
      "id": "10:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19072827394120395
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):",
        "new_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18326306203380227
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/run.py",
        "view_range": [
          80,
          190
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18658054899424314
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/config/config_initialization.py"
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1813961819279939
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "def expand_modules(\n    files_or_modules: Sequence[str],\n    ignore_list: list[str],\n    ignore_list_re: list[Pattern[str]],\n    ignore_list_paths_re: list[Pattern[str]],\n) -> tuple[list[ModuleDescriptionDict], list[ErrorDescriptionDict]]:\n    \"\"\"Take a list of files/modules/packages and return the list of tuple\n    (file, module name) which have to be actually checked.\n    \"\"\"\n    result: list[ModuleDescriptionDict] = []\n    errors: list[ErrorDescriptionDict] = []\n    path = sys.path.copy()",
        "new_str": "def expand_modules(\n    files_or_modules: Sequence[str],\n    ignore_list: list[str],\n    ignore_list_re: list[Pattern[str]],\n    ignore_list_paths_re: list[Pattern[str]],\n) -> tuple[list[ModuleDescriptionDict], list[ErrorDescriptionDict]]:\n    \"\"\"Take a list of files/modules/packages and return the list of tuple\n    (file, module name) which have to be actually checked.\n    \"\"\"\n    print(f\"Debug: ignore_list = {ignore_list}\", file=sys.stderr)\n    print(f\"Debug: ignore_list_re = {ignore_list_re}\", file=sys.stderr)\n    print(f\"Debug: ignore_list_paths_re = {ignore_list_paths_re}\", file=sys.stderr)\n    result: list[ModuleDescriptionDict] = []\n    errors: list[ErrorDescriptionDict] = []\n    path = sys.path.copy()",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18687498779036105
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "    print(f\"Debug: ignore_list = {ignore_list}\", file=sys.stderr)\n    print(f\"Debug: ignore_list_re = {ignore_list_re}\", file=sys.stderr)\n    print(f\"Debug: ignore_list_paths_re = {ignore_list_paths_re}\", file=sys.stderr)",
        "new_str": "    sys.stderr.write(f\"Debug: ignore_list = {ignore_list}\\n\")\n    sys.stderr.write(f\"Debug: ignore_list_re = {[p.pattern for p in ignore_list_re]}\\n\")\n    sys.stderr.write(f\"Debug: ignore_list_paths_re = {[p.pattern for p in ignore_list_paths_re]}\\n\")",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.17243777704425156
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_expand_modules.py",
        "file_text": "import os\nimport re\nimport sys\nfrom pylint.lint.expand_modules import expand_modules\n\n# Test directory structure\nos.makedirs(\"/testbed/test_dir/.a\", exist_ok=True)\nwith open(\"/testbed/test_dir/foo.py\", \"w\") as f:\n    f.write(\"import re\")\nwith open(\"/testbed/test_dir/.a/foo.py\", \"w\") as f:\n    f.write(\"import re\")\n\n# Test cases\ntest_cases = [\n    (\"No ignore\", [], [], []),\n    (\"Ignore .a\", [\".a\"], [], []),\n    (\"Ignore-paths .a\", [], [], [re.compile(r\"^\\.a\")]),\n    (\"Ignore-patterns ^\\\\.a\", [], [re.compile(r\"^\\.a\")], []),\n]\n\nfor name, ignore_list, ignore_list_re, ignore_list_paths_re in test_cases:\n    print(f\"\\nTest case: {name}\")\n    modules, errors = expand_modules(\n        [\"/testbed/test_dir\"], ignore_list, ignore_list_re, ignore_list_paths_re\n    )\n    print(f\"Modules found: {[m['name'] for m in modules]}\")\n    print(f\"Errors: {errors}\")"
      },
      "phase": "verification",
      "step_indices": [
        16
      ],
      "id": "16:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.4721509669907391,
        0.48404146800749004,
        0.4886639481410384,
        0.4741484459955245,
        0.4569117350038141,
        0.4720415659248829
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_expand_modules.py"
      ],
      "phase": "verification",
      "step_indices": [
        17,
        19,
        21,
        23,
        25,
        27
      ],
      "id": "17:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2036869979929179
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n                    continue\n                if filepath == subfilepath:\n                    continue\n                if _is_in_ignore_list_re(\n                    os.path.basename(subfilepath), ignore_list_re\n                ) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n                    continue",
        "new_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if filepath == subfilepath:\n                    continue\n                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                ):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "18:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1826444340404123
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if filepath == subfilepath:\n                    continue\n                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                ):\n                    continue",
        "new_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if filepath == subfilepath:\n                    continue\n                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                ):\n                    continue\n                # Ensure the file is not in a directory matched by ignore_list_paths_re\n                parent_dir = os.path.dirname(subfilepath)\n                if _is_in_ignore_list_re(parent_dir, ignore_list_paths_re):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        20
      ],
      "id": "19:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19199673389084637
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "                # Ensure the file is not in a directory matched by ignore_list_paths_re\n                parent_dir = os.path.dirname(subfilepath)\n                if _is_in_ignore_list_re(parent_dir, ignore_list_paths_re):\n                    continue",
        "new_str": "                # Ensure the file is not matched by ignore_list_paths_re\n                if _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        22
      ],
      "id": "20:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19697845401242375
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if filepath == subfilepath:\n                    continue\n                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                ):\n                    continue",
        "new_str": "            for subfilepath in modutils.get_module_files(\n                os.path.dirname(filepath), ignore_list, list_all=is_namespace\n            ):\n                if filepath == subfilepath:\n                    continue\n                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                    or any(\n                        pattern.match(os.path.relpath(subfilepath, os.path.dirname(filepath)))\n                        for pattern in ignore_list_paths_re\n                    )\n                ):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        24
      ],
      "id": "21:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19544643815606833
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                    or any(\n                        pattern.match(os.path.relpath(subfilepath, os.path.dirname(filepath)))\n                        for pattern in ignore_list_paths_re\n                    )\n                ):\n                    continue",
        "new_str": "                if (\n                    _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n                    or any(\n                        pattern.match(os.path.relpath(subfilepath, os.path.dirname(filepath)))\n                        for pattern in ignore_list_paths_re + ignore_list_re\n                    )\n                ):\n                    continue",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        26
      ],
      "id": "22:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17385979695245624
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/expand_modules.py",
        "old_str": "    sys.stderr.write(f\"Debug: ignore_list = {ignore_list}\\n\")\n    sys.stderr.write(f\"Debug: ignore_list_re = {[p.pattern for p in ignore_list_re]}\\n\")\n    sys.stderr.write(f\"Debug: ignore_list_paths_re = {[p.pattern for p in ignore_list_paths_re]}\\n\")",
        "new_str": "",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        28
      ],
      "id": "23:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22710352996364236
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/pylinter.py"
      },
      "phase": "localization",
      "step_indices": [
        30
      ],
      "id": "24:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20509566087275743
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/pylinter.py",
        "view_range": [
          739,
          753
        ]
      },
      "phase": "localization",
      "step_indices": [
        31
      ],
      "id": "25:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1801959229633212
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/pylint/lint/pylinter.py",
        "old_str": "    def _expand_files(self, modules: Sequence[str]) -> list[ModuleDescriptionDict]:\n        \"\"\"Get modules and errors from a list of modules and handle errors.\"\"\"\n        result, errors = expand_modules(\n            modules,\n            self.config.ignore,\n            self.config.ignore_patterns,\n            self._ignore_paths,\n        )",
        "new_str": "    def _expand_files(self, modules: Sequence[str]) -> list[ModuleDescriptionDict]:\n        \"\"\"Get modules and errors from a list of modules and handle errors.\"\"\"\n        print(f\"Debug: ignore = {self.config.ignore}\", file=sys.stderr)\n        print(f\"Debug: ignore_patterns = {self.config.ignore_patterns}\", file=sys.stderr)\n        print(f\"Debug: _ignore_paths = {self._ignore_paths}\", file=sys.stderr)\n        result, errors = expand_modules(\n            modules,\n            self.config.ignore,\n            self.config.ignore_patterns,\n            self._ignore_paths,\n        )",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        32
      ],
      "id": "26:str_replace_editor\nstr_replace"
    },
    {
      "label": "submit",
      "execution_time": [
        0.3084922949783504,
        0.21836165408603847
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        35,
        37
      ],
      "id": "27:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.1204415918327868
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py",
        "/testbed/test_expand_modules.py"
      ],
      "phase": "general",
      "step_indices": [
        36
      ],
      "id": "28:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:empty action",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:empty action",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "1:empty action",
      "target": "27:submit",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:mkdir",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:mkdir",
      "target": "6:echo",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:mkdir",
      "target": "8:echo",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:echo",
      "target": "7:echo",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "7:echo",
      "target": "5:mkdir",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "8:echo",
      "target": "9:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "9:str_replace_editor\ncreate",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:python",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:python",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:python",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "10:python",
      "target": "16:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "10:python",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "10:python",
      "target": "1:empty action",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:str_replace_editor\ncreate",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:python",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "17:python",
      "target": "19:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "17:python",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "17:python",
      "target": "21:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "17:python",
      "target": "22:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "17:python",
      "target": "23:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "18:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "19:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "21:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "22:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "23:str_replace_editor\nstr_replace",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "24:str_replace_editor\nview",
      "target": "25:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "24:str_replace_editor\nview",
      "target": "25:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "32",
      "type": "exec",
      "source": "25:str_replace_editor\nview",
      "target": "26:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "26:str_replace_editor\nstr_replace",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "27:submit",
      "target": "28:rm",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "28:rm",
      "target": "27:submit",
      "key": 0
    }
  ]
}