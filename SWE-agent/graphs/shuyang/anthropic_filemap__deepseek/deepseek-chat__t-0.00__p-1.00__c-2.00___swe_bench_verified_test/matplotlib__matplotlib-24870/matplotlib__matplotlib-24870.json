{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-24870",
    "difficulty": "15 min - 1 hour"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20283475005999207,
        0.18604698800481856
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0,
        9
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1655525912065059
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22607389208860695
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/contour.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1909923441708088
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/contour.py",
        "view_range": [
          1386,
          1441
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17818820592947304
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/contour.py",
        "view_range": [
          1444,
          1466
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18319988809525967
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/contour.py",
        "view_range": [
          1121,
          1148
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.22526763286441565
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/contour.py",
        "old_str": "        \"\"\"\n        Determine the contour levels and store in self.levels.\n        \"\"\"\n        if self.levels is None:\n            if len(args) == 0:\n                levels_arg = 7  # Default, hard-wired.\n            else:\n                levels_arg = args[0]\n        else:\n            levels_arg = self.levels\n        if isinstance(levels_arg, Integral):\n            self.levels = self._autolev(levels_arg)\n        else:\n            self.levels = np.asarray(levels_arg, np.float64)",
        "new_str": "        \"\"\"\n        Determine the contour levels and store in self.levels.\n        \"\"\"\n        if self.levels is None:\n            if len(args) == 0:\n                # Check if the input array is boolean\n                if hasattr(self, 'z') and isinstance(self.z, np.ndarray) and self.z.dtype == bool:\n                    levels_arg = [0.5]  # Default for boolean arrays.\n                else:\n                    levels_arg = 7  # Default, hard-wired.\n            else:\n                levels_arg = args[0]\n        else:\n            levels_arg = self.levels\n        if isinstance(levels_arg, Integral):\n            self.levels = self._autolev(levels_arg)\n        else:\n            self.levels = np.asarray(levels_arg, np.float64)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.20264844386838377
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_contour_boolean.py",
        "file_text": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a boolean 2D array\nii, jj = np.ogrid[:100, :100]\nboolean_array = (ii + jj) % 20 < 10\n\n# Test contour with boolean array (should default to levels=[0.5])\nplt.figure(figsize=(10, 5))\nplt.subplot(121)\nplt.title(\"Boolean Array (default levels)\")\nplt.contour(boolean_array)\n\n# Test contour with non-boolean array (should use default 7 levels)\nnon_boolean_array = np.random.rand(100, 100)\nplt.subplot(122)\nplt.title(\"Non-Boolean Array (default levels)\")\nplt.contour(non_boolean_array)\n\nplt.tight_layout()\nplt.savefig(\"contour_test.png\")\nplt.show()"
      },
      "phase": "verification",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": [
        1.642989890417084
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:cd"
    },
    {
      "label": "python",
      "execution_time": [
        1.642989890417084
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_contour_boolean.py"
      ],
      "phase": "verification",
      "step_indices": [
        8
      ],
      "id": "9:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22123652999289334
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/contour_test.png"
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "11:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.2569145089946687,
        0.21393603715114295
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        12,
        14
      ],
      "id": "12:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11857395013794303
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_contour_boolean.py"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "13:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\ncreate",
      "target": "8:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:cd",
      "target": "9:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:python",
      "target": "0:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:empty action",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:empty action",
      "target": "12:submit",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:submit",
      "target": "13:rm",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:rm",
      "target": "12:submit",
      "key": 0
    }
  ]
}