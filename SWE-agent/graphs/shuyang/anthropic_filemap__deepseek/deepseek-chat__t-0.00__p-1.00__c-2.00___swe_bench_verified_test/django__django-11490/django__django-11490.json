{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-11490",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20254607708193362
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/compiler.py"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "find",
      "execution_time": [
        0.18276835209690034
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "compiler.py"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:find"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19726266409270465
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/compiler.py",
        "view_range": [
          428,
          433
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19625512091442943
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "from django.db import models\n\nclass ReservedName(models.Model):\n    name = models.CharField(max_length=100)\n    order = models.IntegerField()\n\n# Create a record\nReservedName.objects.create(name='a', order=2)\n\n# Query and reproduce the issue\nqs1 = ReservedName.objects.all()\nprint(qs1.union(qs1).values_list('name', 'order').get())  # Expected: ('a', 2)\nprint(qs1.union(qs1).values_list('order').get())  # Expected: (2,), but returns ('a', 2)"
      },
      "phase": "verification",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": [
        0.23805715900380164,
        0.2581129069440067,
        0.25997720495797694,
        0.25456742953974754,
        0.19465339952148497,
        0.27268923504743725,
        0.25486450851894915
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        4,
        6,
        8,
        10,
        12,
        15,
        17
      ],
      "id": "4:cd"
    },
    {
      "label": "python",
      "execution_time": [
        0.23805715900380164,
        0.2581129069440067,
        0.25997720495797694,
        0.25456742953974754,
        0.19465339952148497,
        0.27268923504743725,
        0.25486450851894915
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        4,
        6,
        8,
        10,
        12,
        15,
        17
      ],
      "id": "5:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19571872311644256
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "from django.db import models\n\nclass ReservedName(models.Model):\n    name = models.CharField(max_length=100)\n    order = models.IntegerField()\n\n# Create a record\nReservedName.objects.create(name='a', order=2)\n\n# Query and reproduce the issue\nqs1 = ReservedName.objects.all()\nprint(qs1.union(qs1).values_list('name', 'order').get())  # Expected: ('a', 2)\nprint(qs1.union(qs1).values_list('order').get())  # Expected: (2,), but returns ('a', 2)",
        "new_str": "import os\nimport django\nfrom django.conf import settings\n\n# Minimal Django settings\nsettings.configure(\n    INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n    ],\n    DATABASES={\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': ':memory:',\n        }\n    }\n)\ndjango.setup()\n\nfrom django.db import models\n\nclass ReservedName(models.Model):\n    name = models.CharField(max_length=100)\n    order = models.IntegerField()\n\n# Create tables\nfrom django.db import connection\nconnection.creation.create_test_db()\n\n# Create a record\nReservedName.objects.create(name='a', order=2)\n\n# Query and reproduce the issue\nqs1 = ReservedName.objects.all()\nprint(qs1.union(qs1).values_list('name', 'order').get())  # Expected: ('a', 2)\nprint(qs1.union(qs1).values_list('order').get())  # Expected: (2,), but returns ('a', 2)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19387506903149188
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "class ReservedName(models.Model):\n    name = models.CharField(max_length=100)\n    order = models.IntegerField()",
        "new_str": "class ReservedName(models.Model):\n    name = models.CharField(max_length=100)\n    order = models.IntegerField()\n\n    class Meta:\n        app_label = 'test_app'",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18635437497869134
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# Create tables\nfrom django.db import connection\nconnection.creation.create_test_db()",
        "new_str": "# Create tables\nfrom django.db import connection\nfrom django.core.management import call_command\n\n# Ensure the test database is created\nconnection.creation.create_test_db()\n\n# Run migrations for the test app\ncall_command('migrate', 'test_app', interactive=False)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19660618691705167
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n    ],",
        "new_str": "INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n        'test_app',\n    ],",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20529625588096678
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n        'test_app',\n    ],",
        "new_str": "INSTALLED_APPS=[\n        'django.contrib.contenttypes',\n        'django.contrib.auth',\n    ],",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17762833693996072
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# Create tables\nfrom django.db import connection\nfrom django.core.management import call_command\n\n# Ensure the test database is created\nconnection.creation.create_test_db()\n\n# Run migrations for the test app\ncall_command('migrate', 'test_app', interactive=False)",
        "new_str": "# Create tables\nfrom django.db import connection\n\n# Ensure the test database is created\nconnection.creation.create_test_db()\n\n# Create the table directly\nwith connection.schema_editor() as editor:\n    editor.create_model(ReservedName)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1900735350791365
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/compiler.py",
        "old_str": "if not compiler.query.values_select and self.query.values_select:\n                    compiler.query.set_values((\n                        *self.query.extra_select,\n                        *self.query.values_select,\n                        *self.query.annotation_select,\n                    ))",
        "new_str": "if self.query.values_select:\n                    compiler.query.set_values((\n                        *self.query.extra_select,\n                        *self.query.values_select,\n                        *self.query.annotation_select,\n                    ))\n                else:\n                    compiler.query.clear_values()",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        16
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        18
      ],
      "id": "13:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.2378995839972049,
        0.29303968511521816
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        19,
        21
      ],
      "id": "14:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11948922113515437
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "step_indices": [
        20
      ],
      "id": "15:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:find",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:find",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 1
    },
    {
      "label": "8",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 2
    },
    {
      "label": "10",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 3
    },
    {
      "label": "12",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 4
    },
    {
      "label": "15",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 5
    },
    {
      "label": "17",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 6
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:python",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "5:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "5:python",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "5:python",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "5:python",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "5:python",
      "target": "13:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "13:empty action",
      "target": "14:submit",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "14:submit",
      "target": "15:rm",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "15:rm",
      "target": "14:submit",
      "key": 0
    }
  ]
}