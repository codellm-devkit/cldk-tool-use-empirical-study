{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-23299",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19640803104266524
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_bug.py",
        "file_text": "import matplotlib.pyplot as plt\nfrom matplotlib import get_backend, rc_context\n\n# fig1 = plt.figure()  # <- UNCOMMENT THIS LINE AND IT WILL WORK\n# plt.ion()            # <- ALTERNATIVELY, UNCOMMENT THIS LINE AND IT WILL ALSO WORK\nwith rc_context():\n    fig2 = plt.figure()\nbefore = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\nget_backend()\nafter = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'\n\nassert before == after, '\\n' + before + '\\n' + after"
      },
      "phase": "verification",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        2.530863689025864,
        0.7040889288764447
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_bug.py"
      ],
      "phase": "verification",
      "step_indices": [
        1,
        10
      ],
      "id": "1:python"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "2:empty action"
    },
    {
      "label": "grep",
      "execution_time": [
        0.414721593959257,
        0.4193932961206883
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        3,
        7
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1992445681244135
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/__init__.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19013217487372458
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/__init__.py",
        "view_range": [
          1170,
          1178
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2149213079828769
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/__init__.py",
        "view_range": [
          1058,
          1098
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18691263091750443
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/_pylab_helpers.py"
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.21056545013561845
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/__init__.py",
        "old_str": "def get_backend():\n    \"\"\"\n    Return the name of the current backend.\n\n    See Also\n    --------\n    matplotlib.use\n    \"\"\"\n    return rcParams['backend']",
        "new_str": "def get_backend():\n    \"\"\"\n    Return the name of the current backend.\n\n    See Also\n    --------\n    matplotlib.use\n    \"\"\"\n    # Ensure backend query doesn't interfere with existing figures\n    from matplotlib._pylab_helpers import Gcf\n    figs = Gcf.figs.copy()  # Preserve the current figures\n    backend = rcParams['backend']\n    Gcf.figs = figs  # Restore the figures\n    return backend",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "submit",
      "execution_time": [
        0.24327756487764418,
        0.2158328969962895
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        12,
        14
      ],
      "id": "9:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.12017435114830732
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_bug.py"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "10:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\ncreate",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:python",
      "target": "2:empty action",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "1:python",
      "target": "2:empty action",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:empty action",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "2:empty action",
      "target": "9:submit",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "3:grep",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "9:submit",
      "target": "10:rm",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:rm",
      "target": "9:submit",
      "key": 0
    }
  ]
}