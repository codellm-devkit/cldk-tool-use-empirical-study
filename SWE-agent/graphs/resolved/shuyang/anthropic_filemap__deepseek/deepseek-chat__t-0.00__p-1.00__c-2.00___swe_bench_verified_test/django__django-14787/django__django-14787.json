{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-14787"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18267890508286655,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17818671418353915,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/decorators.py"
      },
      "phase": "localization",
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.21016330597922206,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/utils/decorators.py",
        "old_str": "    def _wrapper(self, *args, **kwargs):\n        # bound_method has the signature that 'decorator' expects i.e. no\n        # 'self' argument, but it's a closure over self so it can call\n        # 'func'. Also, wrap method.__get__() in a function because new\n        # attributes can't be set on bound method objects, only on functions.\n        bound_method = partial(method.__get__(self, type(self)))\n        for dec in decorators:\n            bound_method = dec(bound_method)\n        return bound_method(*args, **kwargs)",
        "new_str": "    def _wrapper(self, *args, **kwargs):\n        # bound_method has the signature that 'decorator' expects i.e. no\n        # 'self' argument, but it's a closure over self so it can call\n        # 'func'. Also, wrap method.__get__() in a function because new\n        # attributes can't be set on bound method objects, only on functions.\n        bound_method = partial(method.__get__(self, type(self)))\n        update_wrapper(bound_method, method)  # Propagate attributes to the partial object\n        for dec in decorators:\n            bound_method = dec(bound_method)\n        return bound_method(*args, **kwargs)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "2:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "3:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.2791058109141886,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "4:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "5:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.2342137808445841,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "6:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nstr_replace",
      "target": "3:empty action",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:empty action",
      "target": "4:submit",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:submit",
      "target": "5:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:empty action",
      "target": "6:submit",
      "key": 0
    }
  ]
}