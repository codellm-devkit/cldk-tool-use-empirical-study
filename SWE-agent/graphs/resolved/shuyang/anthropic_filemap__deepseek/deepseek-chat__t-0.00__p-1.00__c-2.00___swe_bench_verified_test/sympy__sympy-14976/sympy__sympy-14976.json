{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "sympy__sympy-14976"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19137429213151336
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1816931280773133
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2016879329457879
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/lambdify.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.19629966001957655
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_issue.py",
        "file_text": "from sympy import Eq, rf, S, lambdify, nsolve, Float\nfrom sympy.abc import x\nimport inspect\n\n# Reproduce the issue\neqn = Eq(rf(18, x), 77 + S(1)/3)\nf = lambdify(x, eqn.lhs - eqn.rhs, 'mpmath')\nprint(inspect.getsource(f))\n\n# Check precision\nx0 = nsolve(eqn, Float('1.5', 64), prec=64)\nprint(rf(18, x0).evalf(64))"
      },
      "phase": "verification",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        1.209449368994683,
        0.45349587011151016,
        0.4447382101789117
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py"
      ],
      "phase": "verification",
      "step_indices": [
        4,
        11,
        13
      ],
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18603960890322924
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/lambdify.py",
        "view_range": [
          654,
          688
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19102622801437974
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/lambdify.py",
        "view_range": [
          655,
          688
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1789720340166241
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/lambdify.py",
        "view_range": [
          627,
          787
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17602005996741354
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/printing/lambdarepr.py"
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2174378070048988
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/printing/pycode.py"
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18830544804222882
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/printing/pycode.py",
        "old_str": "    def _print_Float(self, e):\n        # XXX: This does not handle setting mpmath.mp.dps. It is assumed that\n        # the caller of the lambdified function will have set it to sufficient\n        # precision to match the Floats in the expression.\n\n        # Remove 'mpz' if gmpy is installed.\n        args = str(tuple(map(int, e._mpf_)))\n        return '{func}({args})'.format(func=self._module_format('mpmath.mpf'), args=args)",
        "new_str": "    def _print_Float(self, e):\n        # XXX: This does not handle setting mpmath.mp.dps. It is assumed that\n        # the caller of the lambdified function will have set it to sufficient\n        # precision to match the Floats in the expression.\n\n        # Remove 'mpz' if gmpy is installed.\n        args = str(tuple(map(int, e._mpf_)))\n        return '{func}({args})'.format(func=self._module_format('mpmath.mpf'), args=args)\n\n    def _print_Rational(self, e):\n        # Convert rational to float and wrap in mpmath.mpf\n        return '{func}({val})'.format(func=self._module_format('mpmath.mpf'), val=float(e))",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18323331186547875
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/printing/pycode.py",
        "old_str": "    def _print_Rational(self, e):\n        # Convert rational to float and wrap in mpmath.mpf\n        return '{func}({val})'.format(func=self._module_format('mpmath.mpf'), val=float(e))",
        "new_str": "    def _print_Rational(self, e):\n        # Perform division in mpmath to preserve precision\n        return '{func}({p})/{func}({q})'.format(\n            func=self._module_format('mpmath.mpf'),\n            p=e.p,\n            q=e.q)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "12:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.20936461188830435,
        0.22520324494689703
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        15,
        17
      ],
      "id": "13:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11814549285918474
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_issue.py"
      ],
      "phase": "general",
      "step_indices": [
        16
      ],
      "id": "14:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "4:python",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "4:python",
      "target": "12:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:empty action",
      "target": "13:submit",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "13:submit",
      "target": "14:rm",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "14:rm",
      "target": "13:submit",
      "key": 0
    }
  ]
}