{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-16612"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.21389925782568753,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/contrib/admin/sites.py"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17649277485907078,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/contrib/admin/sites.py",
        "view_range": [
          447,
          457
        ]
      },
      "phase": "localization",
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.17519684601575136,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_redirect.py",
        "file_text": "from django.http import HttpRequest, HttpResponsePermanentRedirect\nfrom django.conf import settings\n\ndef test_redirect():\n    request = HttpRequest()\n    request.path = \"/admin/auth/foo\"\n    request.path_info = \"/admin/auth/foo\"\n    request.META['QUERY_STRING'] = \"id=123\"\n    \n    if settings.APPEND_SLASH and not request.path.endswith(\"/\"):\n        return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n    \n    return \"No redirect\"\n\nprint(test_redirect())"
      },
      "phase": "verification",
      "id": "2:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": 0.2906400359934196,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "3:cd"
    },
    {
      "label": "python",
      "execution_time": 0.2906400359934196,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_redirect.py"
      ],
      "phase": "verification",
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19301657611504197,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_redirect.py",
        "old_str": "from django.http import HttpRequest, HttpResponsePermanentRedirect\nfrom django.conf import settings\n\ndef test_redirect():\n    request = HttpRequest()\n    request.path = \"/admin/auth/foo\"\n    request.path_info = \"/admin/auth/foo\"\n    request.META['QUERY_STRING'] = \"id=123\"\n    \n    if settings.APPEND_SLASH and not request.path.endswith(\"/\"):\n        return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n    \n    return \"No redirect\"\n\nprint(test_redirect())",
        "new_str": "from django.http import HttpRequest, HttpResponsePermanentRedirect\nfrom django.conf import settings\n\n# Minimal settings configuration\nsettings.configure(\n    APPEND_SLASH=True,\n    DEFAULT_CHARSET='utf-8'\n)\n\ndef test_redirect():\n    request = HttpRequest()\n    request.path = \"/admin/auth/foo\"\n    request.path_info = \"/admin/auth/foo\"\n    request.META['QUERY_STRING'] = \"id=123\"\n    \n    if settings.APPEND_SLASH and not request.path.endswith(\"/\"):\n        return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n    \n    return \"No redirect\"\n\nprint(test_redirect())",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.15891791798640043,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "6:cd"
    },
    {
      "label": "python",
      "execution_time": 0.15891791798640043,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_redirect.py"
      ],
      "phase": "verification",
      "id": "7:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19042970589362085,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/contrib/admin/sites.py",
        "old_str": "                if getattr(match.func, \"should_append_slash\", True):\n                    return HttpResponsePermanentRedirect(\"%s/\" % request.path)",
        "new_str": "                if getattr(match.func, \"should_append_slash\", True):\n                    query_string = request.META.get('QUERY_STRING', '')\n                    redirect_url = \"%s/\" % request.path\n                    if query_string:\n                        redirect_url += \"?\" + query_string\n                    return HttpResponsePermanentRedirect(redirect_url)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19718132796697319,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_redirect.py",
        "old_str": "    if settings.APPEND_SLASH and not request.path.endswith(\"/\"):\n        return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n    \n    return \"No redirect\"",
        "new_str": "    if settings.APPEND_SLASH and not request.path.endswith(\"/\"):\n        query_string = request.META.get('QUERY_STRING', '')\n        redirect_url = \"%s/\" % request.path\n        if query_string:\n            redirect_url += \"?\" + query_string\n        return HttpResponsePermanentRedirect(redirect_url)\n    \n    return \"No redirect\"",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.15690539800561965,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "10:cd"
    },
    {
      "label": "python",
      "execution_time": 0.15690539800561965,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_redirect.py"
      ],
      "phase": "verification",
      "id": "11:python"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "12:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.2499551430810243,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "13:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "14:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.24064307403750718,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "15:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\ncreate",
      "target": "3:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:cd",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:python",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:cd",
      "target": "11:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "11:python",
      "target": "12:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "12:empty action",
      "target": "13:submit",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "13:submit",
      "target": "14:empty action",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "14:empty action",
      "target": "15:submit",
      "key": 0
    }
  ]
}