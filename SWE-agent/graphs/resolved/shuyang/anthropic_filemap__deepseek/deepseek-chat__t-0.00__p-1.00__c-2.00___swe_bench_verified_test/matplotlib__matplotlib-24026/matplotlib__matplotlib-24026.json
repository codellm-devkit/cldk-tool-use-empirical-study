{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "matplotlib__matplotlib-24026"
  },
  "nodes": [
    {
      "label": "echo",
      "execution_time": 1.2607899430440739,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport numpy\n\nmy_data = numpy.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])\nfig, ax = plt.subplots()\nax.plot([1, 3], [1, 3], color=\"C0\")\nax.add_patch(Rectangle(xy=(1.5, 1.5), width=0.5, height=0.5, facecolor=\"C1\"))\nax.stackplot([1, 2, 3], my_data, colors=[\"C2\", \"C3\", \"C4\"])\nplt.show()",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "0:echo"
    },
    {
      "label": "python",
      "execution_time": 1.2607899430440739,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "1:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18114248593337834,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/stackplot.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.17568490095436573,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/stackplot.py",
        "old_str": "    labels = iter(labels)\n    if colors is not None:\n        axes.set_prop_cycle(color=colors)",
        "new_str": "    labels = iter(labels)\n    if colors is not None:\n        color_cycle = iter(colors)\n    else:\n        color_cycle = None",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.1833302068989724,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/stackplot.py",
        "old_str": "    # Color between x = 0 and the first array.\n    color = axes._get_lines.get_next_color()\n    coll = axes.fill_between(x, first_line, stack[0, :],\n                             facecolor=color, label=next(labels, None),\n                             **kwargs)\n    coll.sticky_edges.y[:] = [0]\n    r = [coll]\n\n    # Color between array i-1 and array i\n    for i in range(len(y) - 1):\n        color = axes._get_lines.get_next_color()\n        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n                                   facecolor=color, label=next(labels, None),\n                                   **kwargs))",
        "new_str": "    # Color between x = 0 and the first array.\n    if color_cycle is not None:\n        color = next(color_cycle)\n    else:\n        color = axes._get_lines.get_next_color()\n    coll = axes.fill_between(x, first_line, stack[0, :],\n                             facecolor=color, label=next(labels, None),\n                             **kwargs)\n    coll.sticky_edges.y[:] = [0]\n    r = [coll]\n\n    # Color between array i-1 and array i\n    for i in range(len(y) - 1):\n        if color_cycle is not None:\n            color = next(color_cycle)\n        else:\n            color = axes._get_lines.get_next_color()\n        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n                                   facecolor=color, label=next(labels, None),\n                                   **kwargs)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 0.4492764149326831,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "5:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.18067259807139635,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/stackplot.py",
        "old_str": "        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n                                   facecolor=color, label=next(labels, None),\n                                   **kwargs)",
        "new_str": "        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n                                   facecolor=color, label=next(labels, None),\n                                   **kwargs))",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 0.5316375221591443,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "7:python"
    },
    {
      "label": "echo",
      "execution_time": 0.2806621444178745,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import matplotlib.pyplot as plt\nimport numpy as np\n\nmy_data = np.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])\nfig, ax = plt.subplots()\n\n# Test with mixed valid and cycle colors\nax.stackplot([1, 2, 3], my_data, colors=[\"red\", \"C1\", \"blue\"])\nplt.show()",
        ">",
        "/testbed/edge_case_test.py"
      ],
      "phase": "general",
      "id": "8:echo"
    },
    {
      "label": "python",
      "execution_time": 0.2806621444178745,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/edge_case_test.py"
      ],
      "phase": "verification",
      "id": "9:python"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "10:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.22144552902318537,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "11:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "12:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.21583266416564584,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "13:submit"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:echo",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:python",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:python",
      "target": "8:echo",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:echo",
      "target": "9:python",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:python",
      "target": "10:empty action",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:empty action",
      "target": "11:submit",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:submit",
      "target": "12:empty action",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:empty action",
      "target": "13:submit",
      "key": 0
    }
  ]
}