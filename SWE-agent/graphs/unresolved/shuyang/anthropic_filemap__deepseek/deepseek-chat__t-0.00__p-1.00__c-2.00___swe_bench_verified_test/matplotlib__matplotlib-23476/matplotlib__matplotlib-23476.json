{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-23476"
  },
  "nodes": [
    {
      "label": "cat",
      "execution_time": [
        0.22894113115034997
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_bug.py",
        "import",
        "numpy",
        "as",
        "np",
        "import",
        "matplotlib",
        "import",
        "matplotlib.pyplot",
        "as",
        "plt",
        "import",
        "pickle",
        "import",
        "platform",
        "print(matplotlib.get_backend())",
        "print(Matplotlib ver:,",
        "matplotlib.__version__)",
        "print(Platform:,",
        "platform.platform())",
        "print(System:,",
        "platform.system())",
        "print(Release:,",
        "platform.release())",
        "print(Python ver:,",
        "platform.python_version())",
        "def",
        "dump_load_get_dpi(fig):",
        "with",
        "open(sinus.pickle,wb)",
        "as",
        "file:",
        "pickle.dump(fig,",
        "file)",
        "with",
        "open(sinus.pickle,",
        "rb)",
        "as",
        "blob:",
        "fig2",
        "=",
        "pickle.load(blob)",
        "return",
        "fig2,",
        "fig2.dpi",
        "def",
        "run():",
        "fig",
        "=",
        "plt.figure()",
        "x",
        "=",
        "np.linspace(0,2*np.pi)",
        "y",
        "=",
        "np.sin(x)",
        "for",
        "i",
        "in",
        "range(32):",
        "print(f{i}: {fig.dpi})",
        "fig,",
        "dpi",
        "=",
        "dump_load_get_dpi(fig)",
        "if",
        "__name__",
        "==",
        "__main__:",
        "run()",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:cat"
    },
    {
      "label": "python",
      "execution_time": [
        2.597731885034591,
        0.9496256581041962
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_bug.py"
      ],
      "phase": "verification",
      "step_indices": [
        1,
        9
      ],
      "id": "1:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1869373400695622
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/matplotlib/figure.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19798404490575194
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2313864747993648
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/figure.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.12117405002936721
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/lib/matplotlib/figure.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "5:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21082488493993878
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/figure.py",
        "view_range": [
          3035,
          3045
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1959248490165919
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/backends/backend_macosx.py"
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.22393206297419965
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/figure.py",
        "old_str": "    def __setstate__(self, state):\n        version = state.pop('__mpl_version__')\n        restore_to_pylab = state.pop('_restore_to_pylab', False)\n\n        if version != mpl.__version__:\n            _api.warn_external(\n                f\"This figure was saved with matplotlib version {version} and \"\n                f\"is unlikely to function correctly.\")\n\n        self.__dict__ = state",
        "new_str": "    def __setstate__(self, state):\n        version = state.pop('__mpl_version__')\n        restore_to_pylab = state.pop('_restore_to_pylab', False)\n\n        if version != mpl.__version__:\n            _api.warn_external(\n                f\"This figure was saved with matplotlib version {version} and \"\n                f\"is unlikely to function correctly.\")\n\n        # Save the original DPI before restoring the state\n        original_dpi = state.get('_dpi', None)\n        self.__dict__ = state\n        # Ensure the DPI is not altered by the backend\n        if original_dpi is not None:\n            self._dpi = original_dpi",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "9:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.26082621281966567,
        0.23389849485829473
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        11,
        13
      ],
      "id": "10:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:cat",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:python",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "1:python",
      "target": "9:empty action",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:grep",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:empty action",
      "target": "10:submit",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "9:empty action",
      "target": "10:submit",
      "key": 1
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:submit",
      "target": "9:empty action",
      "key": 0
    }
  ]
}