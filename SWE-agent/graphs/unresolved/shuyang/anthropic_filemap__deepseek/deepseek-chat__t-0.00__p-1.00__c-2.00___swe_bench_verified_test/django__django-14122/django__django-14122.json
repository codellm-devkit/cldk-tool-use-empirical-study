{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-14122"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19494707486592233
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1994705069810152
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20438127499073744
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22114877891726792
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/query.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.168234869139269
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/query.py",
        "view_range": [
          2009,
          2038
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "cat",
      "execution_time": [
        0.2362583780195564
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "ordering",
        "=",
        "[name]",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "5:cat"
    },
    {
      "label": "cd",
      "execution_time": [
        0.28713783505372703,
        0.25459067849442363,
        0.21535283792763948,
        0.20304547250270844,
        0.23245216044597328,
        0.20211401546839625,
        0.19758552650455385,
        0.20520082802977413,
        0.27378868556115776
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        6,
        8,
        10,
        12,
        14,
        16,
        19,
        21,
        26
      ],
      "id": "6:cd"
    },
    {
      "label": "python",
      "execution_time": [
        0.28713783505372703,
        0.25459067849442363,
        0.21535283792763948,
        0.20304547250270844,
        0.23245216044597328,
        0.20211401546839625,
        0.19758552650455385,
        0.20520082802977413,
        0.27378868556115776
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_group_by_issue.py"
      ],
      "phase": "verification",
      "step_indices": [
        6,
        8,
        10,
        12,
        14,
        16,
        19,
        21,
        26
      ],
      "id": "7:python"
    },
    {
      "label": "cat",
      "execution_time": [
        0.2353235890623182
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "ordering",
        "=",
        "[name]",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "8:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.2317985410336405
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "test_app,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "app_label",
        "=",
        "test_app",
        "ordering",
        "=",
        "[name]",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "9:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.23172755213454366
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "app_label",
        "=",
        "__package__",
        "ordering",
        "=",
        "[name]",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "10:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.231636059936136
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "app_label",
        "=",
        "None",
        "ordering",
        "=",
        "[name]",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "11:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.23446992109529674
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "django.db",
        "import",
        "models",
        "#",
        "Dynamically",
        "create",
        "an",
        "app",
        "from",
        "django.apps",
        "import",
        "apps",
        "from",
        "django.apps.config",
        "import",
        "AppConfig",
        "class",
        "TempAppConfig(AppConfig):",
        "name",
        "=",
        "temp_app",
        "apps.app_configs[temp_app]",
        "=",
        "TempAppConfig(temp_app,",
        "__name__)",
        "apps.app_configs[temp_app].models",
        "=",
        "{}",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "app_label",
        "=",
        "temp_app",
        "ordering",
        "=",
        "[name]",
        "#",
        "Register",
        "the",
        "model",
        "apps.app_configs[temp_app].models[testmodel]",
        "=",
        "TestModel",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "12:cat"
    },
    {
      "label": "mkdir",
      "execution_time": [
        0.1157424405682832
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "13:mkdir"
    },
    {
      "label": "cat",
      "execution_time": [
        0.1157424405682832
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/temp_app/models.py",
        "from",
        "django.db",
        "import",
        "models",
        "class",
        "TestModel(models.Model):",
        "name",
        "=",
        "models.CharField(max_length=100)",
        "value",
        "=",
        "models.IntegerField()",
        "class",
        "Meta:",
        "ordering",
        "=",
        "[name]",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "14:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.22966794879175723
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "temp_app,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "temp_app.models",
        "import",
        "TestModel",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "result",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(result.group_by)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        18
      ],
      "id": "15:cat"
    },
    {
      "label": "cat",
      "execution_time": [
        0.22936762496829033
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "<<",
        "EOF",
        ">",
        "/testbed/reproduce_group_by_issue.py",
        "import",
        "os",
        "import",
        "django",
        "from",
        "django.conf",
        "import",
        "settings",
        "#",
        "Minimal",
        "Django",
        "settings",
        "settings.configure(",
        "INSTALLED_APPS=[",
        "django.contrib.contenttypes,",
        "django.contrib.auth,",
        "temp_app,",
        "],",
        "DATABASES={",
        "default:",
        "{",
        "ENGINE:",
        "django.db.backends.sqlite3,",
        "NAME:",
        ":memory:,",
        "}",
        "}",
        ")",
        "django.setup()",
        "from",
        "temp_app.models",
        "import",
        "TestModel",
        "#",
        "Perform",
        "an",
        "aggregation",
        "query",
        "from",
        "django.db.models",
        "import",
        "Count",
        "query",
        "=",
        "TestModel.objects.values(value).annotate(count=Count(id)).query",
        "print(GROUP BY fields:,",
        "query.group_by)",
        "print(SELECT fields:,",
        "query.select)",
        "EOF"
      ],
      "phase": "general",
      "step_indices": [
        20
      ],
      "id": "16:cat"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18144809710793197
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/query.py",
        "view_range": [
          1900,
          2000
        ]
      },
      "phase": "localization",
      "step_indices": [
        22
      ],
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20401242282241583
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/compiler.py"
      },
      "phase": "localization",
      "step_indices": [
        23
      ],
      "id": "18:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1762823408935219
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/compiler.py",
        "view_range": [
          63,
          147
        ]
      },
      "phase": "localization",
      "step_indices": [
        24
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19311452587135136
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/models/sql/compiler.py",
        "old_str": "        for expr, (sql, params, is_ref) in order_by:\n            # Skip References to the select clause, as all expressions in the\n            # select clause are already part of the group by.\n            if not is_ref:\n                expressions.extend(expr.get_group_by_cols())",
        "new_str": "        # Skip Meta.ordering fields from being added to GROUP BY\n        meta_ordering_fields = set()\n        if hasattr(self.query.model._meta, 'ordering'):\n            for field_name in self.query.model._meta.ordering:\n                if field_name.startswith('-'):\n                    field_name = field_name[1:]\n                try:\n                    field = self.query.model._meta.get_field(field_name)\n                    meta_ordering_fields.add(field)\n                except FieldDoesNotExist:\n                    pass\n\n        for expr, (sql, params, is_ref) in order_by:\n            # Skip References to the select clause, as all expressions in the\n            # select clause are already part of the group by.\n            if not is_ref:\n                # Skip if the expression corresponds to a Meta.ordering field\n                if hasattr(expr, 'field') and expr.field in meta_ordering_fields:\n                    continue\n                expressions.extend(expr.get_group_by_cols())",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        25
      ],
      "id": "20:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        27
      ],
      "id": "21:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.26206846605055034,
        0.26857514888979495
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        28,
        30
      ],
      "id": "22:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.12018378800712526
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_group_by_issue.py",
        "/testbed/temp_app"
      ],
      "phase": "general",
      "step_indices": [
        29
      ],
      "id": "23:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "18:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:cat",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 2
    },
    {
      "label": "12",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 3
    },
    {
      "label": "14",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 4
    },
    {
      "label": "16",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 5
    },
    {
      "label": "19",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 6
    },
    {
      "label": "21",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 7
    },
    {
      "label": "26",
      "type": "exec",
      "source": "6:cd",
      "target": "7:python",
      "key": 8
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:python",
      "target": "8:cat",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:python",
      "target": "9:cat",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "7:python",
      "target": "10:cat",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "7:python",
      "target": "11:cat",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "7:python",
      "target": "12:cat",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "7:python",
      "target": "13:mkdir",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "7:python",
      "target": "16:cat",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "7:python",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "7:python",
      "target": "21:empty action",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "11:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "12:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "13:mkdir",
      "target": "14:cat",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "14:cat",
      "target": "15:cat",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "15:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "16:cat",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "18:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "18:str_replace_editor\nview",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "18:str_replace_editor\nview",
      "target": "19:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "25",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "21:empty action",
      "target": "22:submit",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "22:submit",
      "target": "23:rm",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "23:rm",
      "target": "22:submit",
      "key": 0
    }
  ]
}