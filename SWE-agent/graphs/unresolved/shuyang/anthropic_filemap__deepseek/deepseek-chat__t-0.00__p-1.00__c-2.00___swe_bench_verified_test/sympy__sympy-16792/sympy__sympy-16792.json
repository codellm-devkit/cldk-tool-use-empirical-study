{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sympy__sympy-16792"
  },
  "nodes": [
    {
      "label": "ls",
      "execution_time": 0.11828054580837488,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "0:ls"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "1:empty action"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1956279759760946,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "echo",
      "execution_time": 0.6919543704716489,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "3:echo"
    },
    {
      "label": "python",
      "execution_time": 0.6919543704716489,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "4:python"
    },
    {
      "label": "pip",
      "execution_time": 1.5585850039497018,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "install",
        "numpy"
      ],
      "phase": "general",
      "id": "5:pip"
    },
    {
      "label": "python",
      "execution_time": 1.5585850039497018,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "6:python"
    },
    {
      "label": "pip",
      "execution_time": 1.4208511180477217,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "install",
        "cython"
      ],
      "phase": "general",
      "id": "7:pip"
    },
    {
      "label": "python",
      "execution_time": 1.4208511180477217,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "8:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17432426498271525,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          439,
          450
        ]
      },
      "phase": "localization",
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.18750335182994604,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "old_str": "    def _prototype_arg(self, arg):\n        mat_dec = \"np.ndarray[{mtype}, ndim={ndim}] {name}\"\n        np_types = {'double': 'np.double_t',\n                    'int': 'np.int_t'}\n        t = arg.get_datatype('c')\n        if arg.dimensions:\n            self._need_numpy = True\n            ndim = len(arg.dimensions)\n            mtype = np_types[t]\n            return mat_dec.format(mtype=mtype, ndim=ndim, name=self._string_var(arg.name))\n        else:\n            return \"%s %s\" % (t, self._string_var(arg.name))",
        "new_str": "    def _prototype_arg(self, arg):\n        mat_dec = \"np.ndarray[{mtype}, ndim={ndim}] {name}\"\n        np_types = {'double': 'np.double_t',\n                    'int': 'np.int_t'}\n        t = arg.get_datatype('c')\n        if arg.dimensions:\n            self._need_numpy = True\n            ndim = len(arg.dimensions)\n            mtype = np_types[t]\n            return mat_dec.format(mtype=mtype, ndim=ndim, name=self._string_var(arg.name))\n        else:\n            # For array arguments, ensure the C type is a pointer (e.g., 'double *')\n            if isinstance(arg, (InputArgument, OutputArgument, InOutArgument)) and hasattr(arg, 'dimensions') and arg.dimensions:\n                return \"%s *%s\" % (t, self._string_var(arg.name))\n            return \"%s %s\" % (t, self._string_var(arg.name))",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 1.478126343106851,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "11:python"
    },
    {
      "label": "find",
      "execution_time": 0.12070849887095392,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/tmp",
        "*_sympy_compile*",
        "d"
      ],
      "phase": "general",
      "id": "12:find"
    },
    {
      "label": "echo",
      "execution_time": 0.7257287094835192,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "13:echo"
    },
    {
      "label": "python",
      "execution_time": 0.7257287094835192,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "14:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1697696540504694,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19906675606034696,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py"
      },
      "phase": "localization",
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18155009695328772,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19728938699699938,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "old_str": "    def get_prototype(self, routine):\n        \"\"\"Returns a string for the function prototype of the routine.\n\n        If the routine has multiple result objects, an CodeGenError is\n        raised.\n\n        See: https://en.wikipedia.org/wiki/Function_prototype\n\n        \"\"\"\n        if len(routine.results) > 1:\n            raise CodeGenError(\"C only supports a single or no return value.\")\n        elif len(routine.results) == 1:\n            ctype = routine.results[0].get_datatype('C')\n        else:\n            ctype = \"void\"\n\n        type_args = []\n        for arg in routine.arguments:\n            name = self.printer.doprint(arg.name)\n            if arg.dimensions or isinstance(arg, ResultBase):\n                type_args.append((arg.get_datatype('C'), \"*%s\" % name))\n            else:\n                type_args.append((arg.get_datatype('C'), name))\n        arguments = \", \".join([ \"%s %s\" % t for t in type_args])\n        return \"%s %s(%s)\" % (ctype, routine.name, arguments)",
        "new_str": "    def get_prototype(self, routine):\n        \"\"\"Returns a string for the function prototype of the routine.\n\n        If the routine has multiple result objects, an CodeGenError is\n        raised.\n\n        See: https://en.wikipedia.org/wiki/Function_prototype\n\n        \"\"\"\n        if len(routine.results) > 1:\n            raise CodeGenError(\"C only supports a single or no return value.\")\n        elif len(routine.results) == 1:\n            ctype = routine.results[0].get_datatype('C')\n        else:\n            ctype = \"void\"\n\n        type_args = []\n        for arg in routine.arguments:\n            name = self.printer.doprint(arg.name)\n            # Always treat array arguments (MatrixSymbol) as pointers\n            if arg.dimensions or isinstance(arg, (ResultBase, MatrixSymbol)):\n                type_args.append((arg.get_datatype('C'), \"*%s\" % name))\n            else:\n                type_args.append((arg.get_datatype('C'), name))\n        arguments = \", \".join([ \"%s %s\" % t for t in type_args])\n        return \"%s %s(%s)\" % (ctype, routine.name, arguments)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "18:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 1.4528207550756633,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "19:python"
    },
    {
      "label": "echo",
      "execution_time": 0.7497992590069771,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "20:echo"
    },
    {
      "label": "python",
      "execution_time": 0.7497992590069771,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "21:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17810603813268244,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "22:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.192399431951344,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "23:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.47822182967017096,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "24:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.47822182967017096,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "25:echo"
    },
    {
      "label": "python",
      "execution_time": 0.47822182967017096,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "26:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19074923708103597,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "27:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19206688296981156,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "28:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5503011520486325,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "29:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5503011520486325,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "30:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5503011520486325,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "31:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18480568192899227,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "32:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19850364606827497,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "33:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.516773896679903,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "34:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.516773896679903,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "35:echo"
    },
    {
      "label": "python",
      "execution_time": 0.516773896679903,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "36:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17389712994918227,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "37:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19215477793477476,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "38:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49288500170223415,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "39:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49288500170223415,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "40:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49288500170223415,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "41:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18157359608449042,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "42:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18919911910779774,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "43:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.05373847236235937,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "44:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.05373847236235937,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]]))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "45:echo"
    },
    {
      "label": "python",
      "execution_time": 0.05373847236235937,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "46:python"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5129454466514289,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "47:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5129454466514289,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "48:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5129454466514289,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "49:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18511672713793814,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "50:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18934041797183454,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "51:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.48285529436543584,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "52:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.48285529436543584,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "53:echo"
    },
    {
      "label": "python",
      "execution_time": 0.48285529436543584,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "54:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1744641240220517,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "55:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1861425789538771,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "56:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5000962609580407,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "57:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5000962609580407,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "58:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5000962609580407,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "59:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1784609709866345,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "60:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.21304475888609886,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "61:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5160608603619039,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "62:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5160608603619039,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "63:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5160608603619039,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "64:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.20742832496762276,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "65:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18190904497168958,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "66:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.48757117994440097,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "67:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.48757117994440097,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "68:echo"
    },
    {
      "label": "python",
      "execution_time": 0.48757117994440097,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "69:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19257328216917813,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "70:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17611035099253058,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "71:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.4945232976072778,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "72:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.4945232976072778,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "73:echo"
    },
    {
      "label": "python",
      "execution_time": 0.4945232976072778,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "74:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19157651998102665,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "75:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.185453733894974,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "76:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5043077350128442,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "77:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5043077350128442,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "78:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5043077350128442,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "79:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18930679303593934,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "80:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18265247694216669,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "81:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5982238583577176,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "82:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5982238583577176,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "83:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5982238583577176,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "84:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18432810483500361,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "85:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.183682668954134,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "86:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5196199523440251,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "87:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5196199523440251,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "88:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5196199523440251,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "89:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18995555001311004,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "90:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1781479800119996,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "91:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49351645827603835,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "92:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49351645827603835,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "93:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49351645827603835,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "94:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17486185114830732,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "95:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.16733411885797977,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "96:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49372978795630235,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "97:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49372978795630235,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "98:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49372978795630235,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "99:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17922572791576385,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "100:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.177162661915645,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "101:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5099024323280901,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "102:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5099024323280901,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "103:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5099024323280901,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "104:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1605211580172181,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "105:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19154036417603493,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "106:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.5103563859593123,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "107:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.5103563859593123,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "108:echo"
    },
    {
      "label": "python",
      "execution_time": 0.5103563859593123,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "109:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.16583408485166728,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "110:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.175233585992828,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "111:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.4980461100737254,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "112:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.4980461100737254,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "113:echo"
    },
    {
      "label": "python",
      "execution_time": 0.4980461100737254,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "114:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18590599903836846,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "115:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19366647792048752,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "116:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49329456500709057,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "117:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49329456500709057,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "118:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49329456500709057,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "119:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17461278894916177,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "120:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1789395259693265,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "121:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49637815534758073,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "122:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49637815534758073,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "123:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49637815534758073,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "124:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1772747258655727,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "125:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.17513147904537618,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/codegen.py",
        "view_range": [
          894,
          918
        ]
      },
      "phase": "localization",
      "id": "126:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": 0.49907255033031106,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "127:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.49907255033031106,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sympy.utilities.autowrap import autowrap\nfrom sympy import MatrixSymbol\nimport numpy as np\nimport os\n\nx = MatrixSymbol('x', 2, 1)\nexpr = 1.0\nf = autowrap(expr, args=(x,), backend='cython', tempdir='/testbed/temp')\n\nprint(f(np.array([[1.0, 2.0]])))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "128:echo"
    },
    {
      "label": "python",
      "execution_time": 0.49907255033031106,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "129:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1818862499203533,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sympy/utilities/autowrap.py",
        "view_range": [
          346,
          407
        ]
      },
      "phase": "localization",
      "id": "130:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "131:empty action"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:ls",
      "target": "1:empty action",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:empty action",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:echo",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "22:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "27:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "32:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "37:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "50:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "55:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "60:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "65:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "70:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "75:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "80:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "85:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "90:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "95:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "100:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "105:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "110:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "115:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "120:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "125:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "130:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:echo",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:python",
      "target": "5:pip",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:pip",
      "target": "6:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:python",
      "target": "7:pip",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "7:pip",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "8:python",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "11:python",
      "target": "12:find",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "12:find",
      "target": "13:echo",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "13:echo",
      "target": "14:python",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "14:python",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "38:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "43:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "51:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "56:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "61:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "66:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "71:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "76:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "81:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "86:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "91:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "96:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "101:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "106:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "111:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "116:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "121:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "126:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "18:str_replace_editor\nstr_replace",
      "target": "19:python",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "19:python",
      "target": "20:echo",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "20:echo",
      "target": "21:python",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "21:python",
      "target": "22:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "22:str_replace_editor\nview",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "23:str_replace_editor\nview",
      "target": "24:mkdir",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "24:mkdir",
      "target": "25:echo",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "25:echo",
      "target": "26:python",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "26:python",
      "target": "27:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "27:str_replace_editor\nview",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "28:str_replace_editor\nview",
      "target": "29:mkdir",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "29:mkdir",
      "target": "30:echo",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "30:echo",
      "target": "31:python",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "31:python",
      "target": "32:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "32:str_replace_editor\nview",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "33:str_replace_editor\nview",
      "target": "34:mkdir",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "34:mkdir",
      "target": "35:echo",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "35:echo",
      "target": "36:python",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "36:python",
      "target": "37:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "37:str_replace_editor\nview",
      "target": "38:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "38:str_replace_editor\nview",
      "target": "39:mkdir",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "39:mkdir",
      "target": "40:echo",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "40:echo",
      "target": "41:python",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "41:python",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "42:str_replace_editor\nview",
      "target": "43:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "43:str_replace_editor\nview",
      "target": "44:mkdir",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "44:mkdir",
      "target": "45:echo",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "45:echo",
      "target": "46:python",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "46:python",
      "target": "47:mkdir",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "47:mkdir",
      "target": "48:echo",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "48:echo",
      "target": "49:python",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "49:python",
      "target": "50:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "50:str_replace_editor\nview",
      "target": "51:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "51:str_replace_editor\nview",
      "target": "52:mkdir",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "52:mkdir",
      "target": "53:echo",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "53:echo",
      "target": "54:python",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "54:python",
      "target": "55:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "55:str_replace_editor\nview",
      "target": "56:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "56:str_replace_editor\nview",
      "target": "57:mkdir",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "57:mkdir",
      "target": "58:echo",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "58:echo",
      "target": "59:python",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "59:python",
      "target": "60:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "60:str_replace_editor\nview",
      "target": "61:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "61:str_replace_editor\nview",
      "target": "62:mkdir",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "62:mkdir",
      "target": "63:echo",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "63:echo",
      "target": "64:python",
      "key": 0
    },
    {
      "label": "42",
      "type": "exec",
      "source": "64:python",
      "target": "65:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "43",
      "type": "exec",
      "source": "65:str_replace_editor\nview",
      "target": "66:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "44",
      "type": "exec",
      "source": "66:str_replace_editor\nview",
      "target": "67:mkdir",
      "key": 0
    },
    {
      "label": "44",
      "type": "exec",
      "source": "67:mkdir",
      "target": "68:echo",
      "key": 0
    },
    {
      "label": "44",
      "type": "exec",
      "source": "68:echo",
      "target": "69:python",
      "key": 0
    },
    {
      "label": "45",
      "type": "exec",
      "source": "69:python",
      "target": "70:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "46",
      "type": "exec",
      "source": "70:str_replace_editor\nview",
      "target": "71:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "47",
      "type": "exec",
      "source": "71:str_replace_editor\nview",
      "target": "72:mkdir",
      "key": 0
    },
    {
      "label": "47",
      "type": "exec",
      "source": "72:mkdir",
      "target": "73:echo",
      "key": 0
    },
    {
      "label": "47",
      "type": "exec",
      "source": "73:echo",
      "target": "74:python",
      "key": 0
    },
    {
      "label": "48",
      "type": "exec",
      "source": "74:python",
      "target": "75:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "49",
      "type": "exec",
      "source": "75:str_replace_editor\nview",
      "target": "76:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "50",
      "type": "exec",
      "source": "76:str_replace_editor\nview",
      "target": "77:mkdir",
      "key": 0
    },
    {
      "label": "50",
      "type": "exec",
      "source": "77:mkdir",
      "target": "78:echo",
      "key": 0
    },
    {
      "label": "50",
      "type": "exec",
      "source": "78:echo",
      "target": "79:python",
      "key": 0
    },
    {
      "label": "51",
      "type": "exec",
      "source": "79:python",
      "target": "80:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "52",
      "type": "exec",
      "source": "80:str_replace_editor\nview",
      "target": "81:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "53",
      "type": "exec",
      "source": "81:str_replace_editor\nview",
      "target": "82:mkdir",
      "key": 0
    },
    {
      "label": "53",
      "type": "exec",
      "source": "82:mkdir",
      "target": "83:echo",
      "key": 0
    },
    {
      "label": "53",
      "type": "exec",
      "source": "83:echo",
      "target": "84:python",
      "key": 0
    },
    {
      "label": "54",
      "type": "exec",
      "source": "84:python",
      "target": "85:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "55",
      "type": "exec",
      "source": "85:str_replace_editor\nview",
      "target": "86:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "56",
      "type": "exec",
      "source": "86:str_replace_editor\nview",
      "target": "87:mkdir",
      "key": 0
    },
    {
      "label": "56",
      "type": "exec",
      "source": "87:mkdir",
      "target": "88:echo",
      "key": 0
    },
    {
      "label": "56",
      "type": "exec",
      "source": "88:echo",
      "target": "89:python",
      "key": 0
    },
    {
      "label": "57",
      "type": "exec",
      "source": "89:python",
      "target": "90:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "58",
      "type": "exec",
      "source": "90:str_replace_editor\nview",
      "target": "91:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "59",
      "type": "exec",
      "source": "91:str_replace_editor\nview",
      "target": "92:mkdir",
      "key": 0
    },
    {
      "label": "59",
      "type": "exec",
      "source": "92:mkdir",
      "target": "93:echo",
      "key": 0
    },
    {
      "label": "59",
      "type": "exec",
      "source": "93:echo",
      "target": "94:python",
      "key": 0
    },
    {
      "label": "60",
      "type": "exec",
      "source": "94:python",
      "target": "95:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "61",
      "type": "exec",
      "source": "95:str_replace_editor\nview",
      "target": "96:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "62",
      "type": "exec",
      "source": "96:str_replace_editor\nview",
      "target": "97:mkdir",
      "key": 0
    },
    {
      "label": "62",
      "type": "exec",
      "source": "97:mkdir",
      "target": "98:echo",
      "key": 0
    },
    {
      "label": "62",
      "type": "exec",
      "source": "98:echo",
      "target": "99:python",
      "key": 0
    },
    {
      "label": "63",
      "type": "exec",
      "source": "99:python",
      "target": "100:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "64",
      "type": "exec",
      "source": "100:str_replace_editor\nview",
      "target": "101:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "65",
      "type": "exec",
      "source": "101:str_replace_editor\nview",
      "target": "102:mkdir",
      "key": 0
    },
    {
      "label": "65",
      "type": "exec",
      "source": "102:mkdir",
      "target": "103:echo",
      "key": 0
    },
    {
      "label": "65",
      "type": "exec",
      "source": "103:echo",
      "target": "104:python",
      "key": 0
    },
    {
      "label": "66",
      "type": "exec",
      "source": "104:python",
      "target": "105:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "67",
      "type": "exec",
      "source": "105:str_replace_editor\nview",
      "target": "106:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "68",
      "type": "exec",
      "source": "106:str_replace_editor\nview",
      "target": "107:mkdir",
      "key": 0
    },
    {
      "label": "68",
      "type": "exec",
      "source": "107:mkdir",
      "target": "108:echo",
      "key": 0
    },
    {
      "label": "68",
      "type": "exec",
      "source": "108:echo",
      "target": "109:python",
      "key": 0
    },
    {
      "label": "69",
      "type": "exec",
      "source": "109:python",
      "target": "110:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "70",
      "type": "exec",
      "source": "110:str_replace_editor\nview",
      "target": "111:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "71",
      "type": "exec",
      "source": "111:str_replace_editor\nview",
      "target": "112:mkdir",
      "key": 0
    },
    {
      "label": "71",
      "type": "exec",
      "source": "112:mkdir",
      "target": "113:echo",
      "key": 0
    },
    {
      "label": "71",
      "type": "exec",
      "source": "113:echo",
      "target": "114:python",
      "key": 0
    },
    {
      "label": "72",
      "type": "exec",
      "source": "114:python",
      "target": "115:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "73",
      "type": "exec",
      "source": "115:str_replace_editor\nview",
      "target": "116:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "74",
      "type": "exec",
      "source": "116:str_replace_editor\nview",
      "target": "117:mkdir",
      "key": 0
    },
    {
      "label": "74",
      "type": "exec",
      "source": "117:mkdir",
      "target": "118:echo",
      "key": 0
    },
    {
      "label": "74",
      "type": "exec",
      "source": "118:echo",
      "target": "119:python",
      "key": 0
    },
    {
      "label": "75",
      "type": "exec",
      "source": "119:python",
      "target": "120:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "76",
      "type": "exec",
      "source": "120:str_replace_editor\nview",
      "target": "121:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "77",
      "type": "exec",
      "source": "121:str_replace_editor\nview",
      "target": "122:mkdir",
      "key": 0
    },
    {
      "label": "77",
      "type": "exec",
      "source": "122:mkdir",
      "target": "123:echo",
      "key": 0
    },
    {
      "label": "77",
      "type": "exec",
      "source": "123:echo",
      "target": "124:python",
      "key": 0
    },
    {
      "label": "78",
      "type": "exec",
      "source": "124:python",
      "target": "125:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "79",
      "type": "exec",
      "source": "125:str_replace_editor\nview",
      "target": "126:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "80",
      "type": "exec",
      "source": "126:str_replace_editor\nview",
      "target": "127:mkdir",
      "key": 0
    },
    {
      "label": "80",
      "type": "exec",
      "source": "127:mkdir",
      "target": "128:echo",
      "key": 0
    },
    {
      "label": "80",
      "type": "exec",
      "source": "128:echo",
      "target": "129:python",
      "key": 0
    },
    {
      "label": "81",
      "type": "exec",
      "source": "129:python",
      "target": "130:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "82",
      "type": "exec",
      "source": "130:str_replace_editor\nview",
      "target": "131:empty action",
      "key": 0
    }
  ]
}