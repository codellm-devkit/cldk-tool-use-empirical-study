{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "astropy__astropy-13398"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20679691201075912
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19080769596621394
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "2:empty action"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17632252909243107
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/itrs.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17893461207859218
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/altaz.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1963155830744654
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/hadec.py"
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.17707342212088406
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/icrs_observed_transforms.py"
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1788201502058655,
        0.2099209779407829
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py"
      },
      "phase": "localization",
      "step_indices": [
        7,
        9
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1929479050450027
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "from .icrs import ICRS\nfrom .gcrs import GCRS, PrecessedGeocentric\nfrom .cirs import CIRS\nfrom .itrs import ITRS\nfrom .equatorial import TEME, TETE\nfrom .utils import get_polar_motion, get_jd12, EARTH_CENTER",
        "new_str": "from .icrs import ICRS\nfrom .gcrs import GCRS, PrecessedGeocentric\nfrom .cirs import CIRS\nfrom .itrs import ITRS\nfrom .equatorial import TEME, TETE\nfrom .altaz import AltAz\nfrom .hadec import HADec\nfrom .utils import get_polar_motion, get_jd12, EARTH_CENTER, PIOVER2\nfrom astropy.coordinates.matrix_utilities import rotation_matrix",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19438222120516002
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "# # first define helper functions\n\n\ndef teme_to_itrs_mat(time):",
        "new_str": "# # first define helper functions\n\n\ndef itrs_to_observed_mat(observed_frame):\n    lon, lat, height = observed_frame.location.to_geodetic('WGS84')\n    elong = lon.to_value(u.radian)\n\n    if isinstance(observed_frame, AltAz):\n        # form ITRS to AltAz matrix\n        elat = lat.to_value(u.radian)\n        # AltAz frame is left handed\n        minus_x = np.eye(3)\n        minus_x[0][0] = -1.0\n        mat = (minus_x\n               @ rotation_matrix(PIOVER2 - elat, 'y', unit=u.radian)\n               @ rotation_matrix(elong, 'z', unit=u.radian))\n    else:\n        # form ITRS to HADec matrix\n        # HADec frame is left handed\n        minus_y = np.eye(3)\n        minus_y[1][1] = -1.0\n        mat = (minus_y\n               @ rotation_matrix(elong, 'z', unit=u.radian))\n    return mat\n\n\ndef teme_to_itrs_mat(time):",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2039956501685083
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "# now the actual transforms\n\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, GCRS, TETE)",
        "new_str": "# now the actual transforms\n\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, AltAz)\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, HADec)\ndef itrs_to_observed(itrs_coo, observed_frame):\n    # form the Topocentric ITRS position\n    topocentric_itrs_repr = (itrs_coo.cartesian\n                             - observed_frame.location.get_itrs().cartesian)\n    rep = topocentric_itrs_repr.transform(itrs_to_observed_mat(observed_frame))\n    return observed_frame.realize_frame(rep)\n\n\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, AltAz, ITRS)\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, HADec, ITRS)\ndef observed_to_itrs(observed_coo, itrs_frame):\n    # form the Topocentric ITRS position\n    topocentric_itrs_repr = observed_coo.cartesian.transform(matrix_transpose(\n                            itrs_to_observed_mat(observed_coo)))\n    # form the Geocentric ITRS position\n    rep = topocentric_itrs_repr + observed_coo.location.get_itrs().cartesian\n    return itrs_frame.realize_frame(rep)\n\n\n@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, GCRS, TETE)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1855682299938053
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "# Create loopback transformations\nframe_transform_graph._add_merged_transform(ITRS, CIRS, ITRS)\nframe_transform_graph._add_merged_transform(PrecessedGeocentric, GCRS, PrecessedGeocentric)\nframe_transform_graph._add_merged_transform(TEME, ITRS, TEME)\nframe_transform_graph._add_merged_transform(TETE, ICRS, TETE)",
        "new_str": "# Create loopback transformations\nframe_transform_graph._add_merged_transform(ITRS, CIRS, ITRS)\nframe_transform_graph._add_merged_transform(PrecessedGeocentric, GCRS, PrecessedGeocentric)\nframe_transform_graph._add_merged_transform(TEME, ITRS, TEME)\nframe_transform_graph._add_merged_transform(TETE, ICRS, TETE)\nframe_transform_graph._add_merged_transform(ITRS, AltAz, ITRS)\nframe_transform_graph._add_merged_transform(ITRS, HADec, ITRS)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.20161851705051959
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_itrs_transforms.py",
        "file_text": "#!/usr/bin/env python\n# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\nimport numpy as np\nfrom astropy import units as u\nfrom astropy.time import Time\nfrom astropy.coordinates import EarthLocation, AltAz, HADec, ITRS\n\n# Define a location (e.g., Greenwich Observatory)\nlocation = EarthLocation(lat=51.4779 * u.deg, lon=0 * u.deg, height=0 * u.m)\n\n# Define an observation time\nobstime = Time(\"2023-10-01 00:00:00\", scale=\"utc\")\n\n# Define an ITRS coordinate (e.g., a point directly above the location)\nitrs_coo = ITRS(x=location.x, y=location.y, z=location.z + 1000 * u.m, obstime=obstime)\n\n# Test ITRS -> AltAz\naltaz_frame = AltAz(location=location, obstime=obstime)\naltaz_coo = itrs_coo.transform_to(altaz_frame)\nprint(f\"ITRS -> AltAz: {altaz_coo}\")\n\n# Test AltAz -> ITRS\nitrs_coo_back = altaz_coo.transform_to(ITRS(obstime=obstime))\nprint(f\"AltAz -> ITRS: {itrs_coo_back}\")\nprint(f\"Original ITRS: {itrs_coo}\")\nprint(f\"Difference: {itrs_coo_back.cartesian - itrs_coo.cartesian}\")\n\n# Test ITRS -> HADec\nhadec_frame = HADec(location=location, obstime=obstime)\nhadec_coo = itrs_coo.transform_to(hadec_frame)\nprint(f\"ITRS -> HADec: {hadec_coo}\")\n\n# Test HADec -> ITRS\nitrs_coo_back = hadec_coo.transform_to(ITRS(obstime=obstime))\nprint(f\"HADec -> ITRS: {itrs_coo_back}\")\nprint(f\"Original ITRS: {itrs_coo}\")\nprint(f\"Difference: {itrs_coo_back.cartesian - itrs_coo.cartesian}\")"
      },
      "phase": "verification",
      "step_indices": [
        14
      ],
      "id": "12:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": [
        0.4656789544969797,
        0.26856665941886604,
        0.2558361629489809
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "step_indices": [
        15,
        17,
        19
      ],
      "id": "13:cd"
    },
    {
      "label": "python",
      "execution_time": [
        0.4656789544969797,
        0.26856665941886604,
        0.2558361629489809
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_itrs_transforms.py"
      ],
      "phase": "verification",
      "step_indices": [
        15,
        17,
        19
      ],
      "id": "14:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18262952310033143
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "# Create loopback transformations\nframe_transform_graph._add_merged_transform(ITRS, CIRS, ITRS)\nframe_transform_graph._add_merged_transform(PrecessedGeocentric, GCRS, PrecessedGeocentric)\nframe_transform_graph._add_merged_transform(TEME, ITRS, TEME)\nframe_transform_graph._add_merged_transform(TETE, ICRS, TETE)\nframe_transform_graph._add_merged_transform(ITRS, AltAz, ITRS)\nframe_transform_graph._add_merged_transform(ITRS, HADec, ITRS)",
        "new_str": "# Create loopback transformations\nframe_transform_graph._add_merged_transform(ITRS, CIRS, ITRS)\nframe_transform_graph._add_merged_transform(PrecessedGeocentric, GCRS, PrecessedGeocentric)\nframe_transform_graph._add_merged_transform(TEME, ITRS, TEME)\nframe_transform_graph._add_merged_transform(TETE, ICRS, TETE)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        16
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.16397649003192782
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/astropy/coordinates/builtin_frames/intermediate_rotation_transforms.py",
        "old_str": "import numpy as np\nimport erfa\n\nfrom astropy.coordinates.baseframe import frame_transform_graph",
        "new_str": "import numpy as np\nimport erfa\n\nfrom astropy import units as u\nfrom astropy.coordinates.baseframe import frame_transform_graph",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "submit",
      "execution_time": [
        0.23393752495758235,
        0.21117380098439753
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        20,
        22
      ],
      "id": "17:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.12016059900633991
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_itrs_transforms.py"
      ],
      "phase": "general",
      "step_indices": [
        21
      ],
      "id": "18:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:empty action",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:empty action",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "2:empty action",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "2:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:str_replace_editor\ncreate",
      "target": "13:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:cd",
      "target": "14:python",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "13:cd",
      "target": "14:python",
      "key": 1
    },
    {
      "label": "19",
      "type": "exec",
      "source": "13:cd",
      "target": "14:python",
      "key": 2
    },
    {
      "label": "16",
      "type": "exec",
      "source": "14:python",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "14:python",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "14:python",
      "target": "17:submit",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "13:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "13:cd",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "17:submit",
      "target": "18:rm",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "18:rm",
      "target": "17:submit",
      "key": 0
    }
  ]
}