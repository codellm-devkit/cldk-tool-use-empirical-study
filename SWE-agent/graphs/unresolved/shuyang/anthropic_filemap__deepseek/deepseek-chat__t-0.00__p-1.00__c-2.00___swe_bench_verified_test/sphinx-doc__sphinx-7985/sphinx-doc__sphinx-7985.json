{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sphinx-doc__sphinx-7985"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.2039280659519136,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1802446108777076,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders"
      },
      "phase": "localization",
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1957203431520611,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders/linkcheck.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19930743798613548,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders/linkcheck.py",
        "old_str": "            elif not uri.startswith(('http:', 'https:')):\n                return 'local', '', 0",
        "new_str": "            elif not uri.startswith(('http:', 'https:')):\n                # Check if the local link exists\n                if '#' in uri:\n                    target_file, anchor = uri.split('#', 1)\n                else:\n                    target_file, anchor = uri, None\n\n                # Resolve the target file path relative to the current document\n                docdir = path.dirname(self.env.doc2path(docname, None))\n                target_path = path.normpath(path.join(docdir, target_file))\n\n                if not path.exists(target_path):\n                    return 'broken', 'Local file does not exist', 0\n                elif anchor:\n                    # TODO: Add anchor validation logic (e.g., check for anchors in the target file)\n                    pass\n                return 'working', '', 0",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "mkdir",
      "execution_time": 0.11642132379347458,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [],
      "phase": "general",
      "id": "4:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.11642132379347458,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        "broken external-link_\nbroken local-link_\n\n.. _external-link: https://lkfqhlkghflkhs\n.. _local-link: doesntexist",
        ">",
        "/testbed/test_project/index.rst"
      ],
      "phase": "general",
      "id": "5:echo"
    },
    {
      "label": "cd",
      "execution_time": 0.11642132379347458,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        "/testbed/test_project"
      ],
      "phase": "general",
      "id": "6:cd"
    },
    {
      "label": "sphinx-build",
      "execution_time": 0.11642132379347458,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        ".",
        "_build"
      ],
      "phase": "general",
      "id": "7:sphinx-build"
    },
    {
      "label": "echo",
      "execution_time": 0.2432960596246024,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        "extensions = []",
        ">",
        "/testbed/test_project/conf.py"
      ],
      "phase": "general",
      "id": "8:echo"
    },
    {
      "label": "cd",
      "execution_time": 0.2432960596246024,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        "/testbed/test_project"
      ],
      "phase": "general",
      "id": "9:cd"
    },
    {
      "label": "sphinx-build",
      "execution_time": 0.2432960596246024,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": [
        ".",
        "_build"
      ],
      "phase": "general",
      "id": "10:sphinx-build"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "11:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.22441814513877034,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": {},
      "phase": "submit",
      "id": "12:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "13:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.2157237189821899,
      "state": {
        "working_dir": "/testbed/test_project"
      },
      "args": {},
      "phase": "submit",
      "id": "14:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:mkdir",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:mkdir",
      "target": "5:echo",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:echo",
      "target": "6:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "6:cd",
      "target": "7:sphinx-build",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "7:sphinx-build",
      "target": "8:echo",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "8:echo",
      "target": "9:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "9:cd",
      "target": "10:sphinx-build",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "10:sphinx-build",
      "target": "11:empty action",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "11:empty action",
      "target": "12:submit",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "12:submit",
      "target": "13:empty action",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "13:empty action",
      "target": "14:submit",
      "key": 0
    }
  ]
}