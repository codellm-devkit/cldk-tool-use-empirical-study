{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pytest-dev__pytest-10081"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.207075297832489,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1815777129959315,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest"
      },
      "phase": "localization",
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18374957609921694,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/unittest.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.17923915502615273,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/unittest.py",
        "old_str": "            # When --pdb is given, we want to postpone calling tearDown() otherwise\n            # when entering the pdb prompt, tearDown() would have probably cleaned up\n            # instance variables, which makes it difficult to debug.\n            # Arguably we could always postpone tearDown(), but this changes the moment where the\n            # TestCase instance interacts with the results object, so better to only do it\n            # when absolutely needed.\n            if self.config.getoption(\"usepdb\") and not _is_skipped(self.obj):\n                self._explicit_tearDown = self._testcase.tearDown\n                setattr(self._testcase, \"tearDown\", lambda *args: None)",
        "new_str": "            # When --pdb is given, we want to postpone calling tearDown() otherwise\n            # when entering the pdb prompt, tearDown() would have probably cleaned up\n            # instance variables, which makes it difficult to debug.\n            # Arguably we could always postpone tearDown(), but this changes the moment where the\n            # TestCase instance interacts with the results object, so better to only do it\n            # when absolutely needed.\n            if self.config.getoption(\"usepdb\"):\n                self._explicit_tearDown = self._testcase.tearDown\n                setattr(self._testcase, \"tearDown\", lambda *args: None)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 1.4027970629977062,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "4:cd"
    },
    {
      "label": "pytest",
      "execution_time": 1.4027970629977062,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "5:pytest"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.1949290509801358,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_repro_skip_class.py",
        "file_text": "import unittest\n\n@unittest.skip(\"hello\")\nclass MyTestCase(unittest.TestCase):\n    def setUp(self):\n        xxx\n    def test_one(self):\n        pass\n    def tearDown(self):\n        xxx"
      },
      "phase": "verification",
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": 16.004031491582282,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "7:cd"
    },
    {
      "label": "pytest",
      "execution_time": 16.004031491582282,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "8:pytest"
    },
    {
      "label": "cd",
      "execution_time": 0.16328423656523228,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "9:cd"
    },
    {
      "label": "pytest",
      "execution_time": 0.16328423656523228,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "test_repro_skip_class.py"
      ],
      "phase": "general",
      "id": "10:pytest"
    },
    {
      "label": "cd",
      "execution_time": 15.996467487537302,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "11:cd"
    },
    {
      "label": "pytest",
      "execution_time": 15.996467487537302,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "12:pytest"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "13:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.21304181101731956,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "14:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "15:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.19516764697618783,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "16:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:cd",
      "target": "5:pytest",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:pytest",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:cd",
      "target": "8:pytest",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:pytest",
      "target": "9:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "9:cd",
      "target": "10:pytest",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:pytest",
      "target": "11:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "11:cd",
      "target": "12:pytest",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "12:pytest",
      "target": "13:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "13:empty action",
      "target": "14:submit",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "14:submit",
      "target": "15:empty action",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "15:empty action",
      "target": "16:submit",
      "key": 0
    }
  ]
}