{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sphinx-doc__sphinx-11510"
  },
  "nodes": [
    {
      "label": "mkdir",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "0:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nimport os\n\nsys.path.insert(0, os.path.abspath('.'))\n\nextensions = [\n        'my-extension'\n]",
        ">",
        "/testbed/conf.py"
      ],
      "phase": "general",
      "id": "1:echo"
    },
    {
      "label": "echo",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "This is a test\n==============\n\n.. include:: something-to-include.rst\n\n&REPLACE_ME;",
        ">",
        "/testbed/index.rst"
      ],
      "phase": "general",
      "id": "2:echo"
    },
    {
      "label": "echo",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "Testing\n=======\n\n&REPLACE_ME;",
        ">",
        "/testbed/something-to-include.rst"
      ],
      "phase": "general",
      "id": "3:echo"
    },
    {
      "label": "echo",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(&REPLACE_ME;, REPLACED)\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        ">",
        "/testbed/my-extension.py"
      ],
      "phase": "general",
      "id": "4:echo"
    },
    {
      "label": "sphinx-build",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "/testbed/build"
      ],
      "phase": "general",
      "id": "5:sphinx-build"
    },
    {
      "label": "grep",
      "execution_time": 0.018477523865710412,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/build/*.html"
      ],
      "phase": "general",
      "id": "6:grep"
    },
    {
      "label": "mkdir",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "id": "7:mkdir"
    },
    {
      "label": "echo",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nimport os\n\nsys.path.insert(0, os.path.abspath('.'))\n\nextensions = [\n        'my-extension'\n]",
        ">",
        "/testbed/conf.py"
      ],
      "phase": "general",
      "id": "8:echo"
    },
    {
      "label": "echo",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "This is a test\n==============\n\n.. include:: something-to-include.rst\n\n&REPLACE_ME;",
        ">",
        "/testbed/index.rst"
      ],
      "phase": "general",
      "id": "9:echo"
    },
    {
      "label": "echo",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "Testing\n=======\n\n&REPLACE_ME;",
        ">",
        "/testbed/something-to-include.rst"
      ],
      "phase": "general",
      "id": "10:echo"
    },
    {
      "label": "echo",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        ">",
        "/testbed/my-extension.py"
      ],
      "phase": "general",
      "id": "11:echo"
    },
    {
      "label": "sphinx-build",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "/testbed/build"
      ],
      "phase": "general",
      "id": "12:sphinx-build"
    },
    {
      "label": "grep",
      "execution_time": 4.395593271025324,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/build/*.html"
      ],
      "phase": "general",
      "id": "13:grep"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "14:empty action"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.18899972201325,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/conf.py",
        "file_text": "import sys\nimport os\n\nsys.path.insert(0, os.path.abspath('.'))\n\nextensions = [\n        'my-extension'\n]"
      },
      "phase": "verification",
      "id": "15:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1677678320556879,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/conf.py"
      },
      "phase": "localization",
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.17630218993872404,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/index.rst",
        "file_text": "This is a test\n==============\n\n.. include:: something-to-include.rst\n\n&REPLACE_ME;"
      },
      "phase": "verification",
      "id": "17:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19051432912237942,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/index.rst"
      },
      "phase": "localization",
      "id": "18:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.19927176693454385,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/something-to-include.rst",
        "file_text": "Testing\n=======\n\n&REPLACE_ME;"
      },
      "phase": "verification",
      "id": "19:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.182831565849483,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py",
        "file_text": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )"
      },
      "phase": "verification",
      "id": "20:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18453549314290285,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py"
      },
      "phase": "localization",
      "id": "21:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19611207186244428,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py",
        "old_str": "",
        "new_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "edit_status": "failure: unknown"
      },
      "phase": "patch",
      "id": "22:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ninsert",
      "execution_time": 0.19423685688525438,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py",
        "new_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "insert_line": 0
      },
      "phase": "general",
      "id": "23:str_replace_editor\ninsert"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.1871720089111477,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py",
        "old_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )\n#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "new_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "24:str_replace_editor\nstr_replace"
    },
    {
      "label": "sphinx-build",
      "execution_time": 6.209157558972947,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "/testbed/build"
      ],
      "phase": "general",
      "id": "25:sphinx-build"
    },
    {
      "label": "grep",
      "execution_time": 6.209157558972947,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/build/*.html"
      ],
      "phase": "general",
      "id": "26:grep"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.18720320705324411,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/my-extension.py",
        "old_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n\ndef setup(app: Sphinx):\n\n    app.connect('source-read', subst_vars_replace)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "new_str": "#!/usr/bin/env python3\n\nfrom sphinx.application import Sphinx\n\n\n__version__ = '1.0'\n\n\ndef subst_vars_replace(app: Sphinx, docname, source):\n    result = source[0]\n    result = result.replace(\"&REPLACE_ME;\", \"REPLACED\")\n    source[0] = result\n\n    # Ensure the modified content is used in the final output\n    app.env.temp_data['modified_content'] = result\n\n\ndef setup(app: Sphinx):\n    app.connect('source-read', subst_vars_replace)\n\n    # Ensure the modified content is used when building the final output\n    app.connect('doctree-read', lambda app, doctree: None)\n\n    return dict(\n        version=__version__,\n        parallel_read_safe=True,\n        parallel_write_safe=True\n    )",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "27:str_replace_editor\nstr_replace"
    },
    {
      "label": "sphinx-build",
      "execution_time": 1.6246673504356295,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "/testbed/build"
      ],
      "phase": "general",
      "id": "28:sphinx-build"
    },
    {
      "label": "grep",
      "execution_time": 1.6246673504356295,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/build/*.html"
      ],
      "phase": "general",
      "id": "29:grep"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "30:empty action"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:mkdir",
      "target": "1:echo",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "1:echo",
      "target": "2:echo",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "2:echo",
      "target": "3:echo",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "3:echo",
      "target": "4:echo",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "4:echo",
      "target": "5:sphinx-build",
      "key": 0
    },
    {
      "label": "0",
      "type": "exec",
      "source": "5:sphinx-build",
      "target": "6:grep",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "6:grep",
      "target": "7:mkdir",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "7:mkdir",
      "target": "8:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "8:echo",
      "target": "9:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "9:echo",
      "target": "10:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "10:echo",
      "target": "11:echo",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "11:echo",
      "target": "12:sphinx-build",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "12:sphinx-build",
      "target": "13:grep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "13:grep",
      "target": "14:empty action",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "14:empty action",
      "target": "15:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "15:str_replace_editor\ncreate",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "17:str_replace_editor\ncreate",
      "target": "18:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "18:str_replace_editor\nview",
      "target": "19:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "19:str_replace_editor\ncreate",
      "target": "20:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "20:str_replace_editor\ncreate",
      "target": "21:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "21:str_replace_editor\nview",
      "target": "22:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "22:str_replace_editor\nstr_replace",
      "target": "23:str_replace_editor\ninsert",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "23:str_replace_editor\ninsert",
      "target": "24:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "24:str_replace_editor\nstr_replace",
      "target": "25:sphinx-build",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "25:sphinx-build",
      "target": "26:grep",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "26:grep",
      "target": "27:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "27:str_replace_editor\nstr_replace",
      "target": "28:sphinx-build",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "28:sphinx-build",
      "target": "29:grep",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "29:grep",
      "target": "30:empty action",
      "key": 0
    }
  ]
}