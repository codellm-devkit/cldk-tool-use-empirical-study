{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pytest-dev__pytest-7324"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.19057044479995966,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1909333849325776,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest"
      },
      "phase": "localization",
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1833168901503086,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/mark/expression.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.17930594901554286,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "from _pytest.mark.expression import Expression\n\n# Reproduce the error\nExpression.compile(\"False\")"
      },
      "phase": "verification",
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": 0.26015232619829476,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19916293094865978,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/src/_pytest/mark/expression.py",
        "old_str": "    ident = s.accept(TokenType.IDENT)\n    if ident:\n        return ast.Name(ident.value, ast.Load())\n    s.reject((TokenType.NOT, TokenType.LPAREN, TokenType.IDENT))",
        "new_str": "    ident = s.accept(TokenType.IDENT)\n    if ident:\n        if ident.value in (\"True\", \"False\", \"None\"):\n            return ast.NameConstant(eval(ident.value))\n        return ast.Name(ident.value, ast.Load())\n    s.reject((TokenType.NOT, TokenType.LPAREN, TokenType.IDENT))",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 0.22132625989615917,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "6:python"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "7:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.20216786302626133,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "8:submit"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "9:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.19564686994999647,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "10:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "6:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:python",
      "target": "7:empty action",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:empty action",
      "target": "8:submit",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:submit",
      "target": "9:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:empty action",
      "target": "10:submit",
      "key": 0
    }
  ]
}