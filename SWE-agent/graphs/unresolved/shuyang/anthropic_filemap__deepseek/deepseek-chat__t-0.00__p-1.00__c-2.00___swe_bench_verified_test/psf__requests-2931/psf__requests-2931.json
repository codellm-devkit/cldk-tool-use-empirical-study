{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "psf__requests-2931"
  },
  "nodes": [
    {
      "label": "echo",
      "execution_time": 0.11977308848872781,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import requests\nrequests.put(\"http://httpbin.org/put\", data=u\"\u00f6\u00f6\u00f6\".encode(\"utf-8\"))",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "0:echo"
    },
    {
      "label": "python",
      "execution_time": 0.11977308848872781,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "1:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.18894070200622082,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/utils.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.1938262260518968,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/utils.py",
        "view_range": [
          686,
          702
        ]
      },
      "phase": "localization",
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.19486641604453325,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/requests/utils.py",
        "old_str": "def to_native_string(string, encoding='ascii'):\n    \"\"\"\n    Given a string object, regardless of type, returns a representation of that\n    string in the native string type, encoding and decoding where necessary.\n    This assumes ASCII unless told otherwise.\n    \"\"\"\n    out = None\n\n    if isinstance(string, builtin_str):\n        out = string\n    else:\n        if is_py2:\n            out = string.encode(encoding)\n        else:\n            out = string.decode(encoding)\n\n    return out",
        "new_str": "def to_native_string(string, encoding='utf-8'):\n    \"\"\"\n    Given a string object, regardless of type, returns a representation of that\n    string in the native string type, encoding and decoding where necessary.\n    This assumes UTF-8 unless told otherwise.\n    \"\"\"\n    if isinstance(string, builtin_str):\n        return string\n    try:\n        if is_py2:\n            return string.encode(encoding)\n        else:\n            return string.decode(encoding)\n    except (UnicodeDecodeError, AttributeError):\n        return string",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": 0.2929260649252683,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "id": "5:python"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "6:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.19209216814488173,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "7:submit"
    },
    {
      "label": "rm",
      "execution_time": 0.11925011314451694,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "id": "8:rm"
    },
    {
      "label": "submit",
      "execution_time": 0.18763096304610372,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "9:submit"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:echo",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:python",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:python",
      "target": "6:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:empty action",
      "target": "7:submit",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:submit",
      "target": "8:rm",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:rm",
      "target": "9:submit",
      "key": 0
    }
  ]
}