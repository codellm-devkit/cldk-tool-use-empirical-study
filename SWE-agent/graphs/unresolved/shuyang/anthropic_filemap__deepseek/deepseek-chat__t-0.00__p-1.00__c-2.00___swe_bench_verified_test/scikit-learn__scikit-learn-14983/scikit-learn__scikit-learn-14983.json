{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "scikit-learn__scikit-learn-14983"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20086293993517756
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1990542239509523
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.22261287597939372
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.11798341595567763,
        0.12200647592544556,
        0.12226904602721334
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/sklearn/model_selection/_split.py"
      ],
      "phase": "general",
      "step_indices": [
        3,
        4,
        7
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19386331317946315
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py",
        "view_range": [
          1160,
          1180
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.21661810809746385
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py",
        "view_range": [
          1220,
          1240
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18931020004674792
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py",
        "view_range": [
          1060,
          1080
        ]
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19334426801651716
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py",
        "view_range": [
          1066,
          1167
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.19830429391004145
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/model_selection/_split.py",
        "old_str": "class _RepeatedSplits(metaclass=ABCMeta):\n    \"\"\"Repeated splits for an arbitrary randomized CV splitter.\n\n    Repeats splits for cross-validators n times with different randomization\n    in each repetition.\n\n    Parameters\n    ----------\n    cv : callable\n        Cross-validator class.\n\n    n_repeats : int, default=10\n        Number of times cross-validator needs to be repeated.\n\n    random_state : int, RandomState instance or None, optional, default=None\n        If int, random_state is the seed used by the random number generator;\n        If RandomState instance, random_state is the random number generator;\n        If None, the random number generator is the RandomState instance used\n        by `np.random`.\n\n    **cvargs : additional params\n        Constructor parameters for cv. Must not contain random_state\n        and shuffle.\n    \"\"\"\n    def __init__(self, cv, n_repeats=10, random_state=None, **cvargs):\n        if not isinstance(n_repeats, numbers.Integral):\n            raise ValueError(\"Number of repetitions must be of Integral type.\")\n\n        if n_repeats <= 0:\n            raise ValueError(\"Number of repetitions must be greater than 0.\")\n\n        if any(key in cvargs for key in ('random_state', 'shuffle')):\n            raise ValueError(\n                \"cvargs must not contain random_state or shuffle.\")\n\n        self.cv = cv\n        self.n_repeats = n_repeats\n        self.random_state = random_state\n        self.cvargs = cvargs",
        "new_str": "class _RepeatedSplits(metaclass=ABCMeta):\n    \"\"\"Repeated splits for an arbitrary randomized CV splitter.\n\n    Repeats splits for cross-validators n times with different randomization\n    in each repetition.\n\n    Parameters\n    ----------\n    cv : callable\n        Cross-validator class.\n\n    n_repeats : int, default=10\n        Number of times cross-validator needs to be repeated.\n\n    random_state : int, RandomState instance or None, optional, default=None\n        If int, random_state is the seed used by the random number generator;\n        If RandomState instance, random_state is the random number generator;\n        If None, the random number generator is the RandomState instance used\n        by `np.random`.\n\n    **cvargs : additional params\n        Constructor parameters for cv. Must not contain random_state\n        and shuffle.\n    \"\"\"\n    def __init__(self, cv, n_repeats=10, random_state=None, **cvargs):\n        if not isinstance(n_repeats, numbers.Integral):\n            raise ValueError(\"Number of repetitions must be of Integral type.\")\n\n        if n_repeats <= 0:\n            raise ValueError(\"Number of repetitions must be greater than 0.\")\n\n        if any(key in cvargs for key in ('random_state', 'shuffle')):\n            raise ValueError(\n                \"cvargs must not contain random_state or shuffle.\")\n\n        self.cv = cv\n        self.n_repeats = n_repeats\n        self.random_state = random_state\n        self.cvargs = cvargs\n\n    def __repr__(self):\n        return \"{}(n_splits={}, n_repeats={}, random_state={})\".format(\n            self.__class__.__name__,\n            self.cvargs.get('n_splits', 5),\n            self.n_repeats,\n            self.random_state\n        )",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18642615200951695
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_repr.py",
        "file_text": "from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\n\n# Test RepeatedKFold\nrkf = RepeatedKFold(n_splits=5, n_repeats=10, random_state=42)\nprint(\"RepeatedKFold:\", repr(rkf))\n\n# Test RepeatedStratifiedKFold\nrskf = RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=42)\nprint(\"RepeatedStratifiedKFold:\", repr(rskf))"
      },
      "phase": "verification",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.5765187630895525
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_repr.py"
      ],
      "phase": "verification",
      "step_indices": [
        12
      ],
      "id": "10:python"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "11:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.22675181785598397,
        0.21468931599520147
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        14,
        16
      ],
      "id": "12:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11916134413331747
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_repr.py"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "13:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:grep",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "3:grep",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\ncreate",
      "target": "10:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:python",
      "target": "11:empty action",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "11:empty action",
      "target": "12:submit",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:submit",
      "target": "13:rm",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "13:rm",
      "target": "12:submit",
      "key": 0
    }
  ]
}