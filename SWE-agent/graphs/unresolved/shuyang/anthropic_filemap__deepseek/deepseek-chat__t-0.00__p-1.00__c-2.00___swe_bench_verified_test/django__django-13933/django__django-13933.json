{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-13933"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1918420409783721
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20165369985625148
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/forms/models.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1647961789276451
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/forms/models.py",
        "view_range": [
          1186,
          1194
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17587858415208757
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/forms/models.py",
        "old_str": "'invalid_choice': _('Select a valid choice. That choice is not one of'\n                            ' the available choices.'),",
        "new_str": "'invalid_choice': _('Select a valid choice. %(value)s is not one of'\n                            ' the available choices.'),",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.1928811320103705
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_modelchoicefield.py",
        "file_text": "from django import forms\nfrom django.core.exceptions import ValidationError\n\nclass TestModelChoiceField(forms.ModelChoiceField):\n    def clean(self, value):\n        raise ValidationError(self.error_messages['invalid_choice'], params={'value': 'invalid_value'})\n\n# Test the field\nfield = TestModelChoiceField(queryset=None)\ntry:\n    field.clean('invalid_value')\nexcept ValidationError as e:\n    print(e)"
      },
      "phase": "verification",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        0.41636843886226416,
        0.31535240286029875,
        0.3534959750249982
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_modelchoicefield.py"
      ],
      "phase": "verification",
      "step_indices": [
        5,
        7,
        9
      ],
      "id": "5:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2001105439849198
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_modelchoicefield.py",
        "old_str": "from django import forms\nfrom django.core.exceptions import ValidationError\n\nclass TestModelChoiceField(forms.ModelChoiceField):\n    def clean(self, value):\n        raise ValidationError(self.error_messages['invalid_choice'], params={'value': 'invalid_value'})\n\n# Test the field\nfield = TestModelChoiceField(queryset=None)\ntry:\n    field.clean('invalid_value')\nexcept ValidationError as e:\n    print(e)",
        "new_str": "import os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\n\nfrom django import forms\nfrom django.core.exceptions import ValidationError\nfrom django.conf import settings\n\nsettings.configure()\n\nclass TestModelChoiceField(forms.ModelChoiceField):\n    def clean(self, value):\n        raise ValidationError(self.error_messages['invalid_choice'], params={'value': 'invalid_value'})\n\n# Test the field\nfield = TestModelChoiceField(queryset=None)\ntry:\n    field.clean('invalid_value')\nexcept ValidationError as e:\n    print(e)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.185851656133309
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/test_modelchoicefield.py",
        "old_str": "import os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\n\nfrom django import forms\nfrom django.core.exceptions import ValidationError\nfrom django.conf import settings\n\nsettings.configure()\n\nclass TestModelChoiceField(forms.ModelChoiceField):\n    def clean(self, value):\n        raise ValidationError(self.error_messages['invalid_choice'], params={'value': 'invalid_value'})\n\n# Test the field\nfield = TestModelChoiceField(queryset=None)\ntry:\n    field.clean('invalid_value')\nexcept ValidationError as e:\n    print(e)",
        "new_str": "from django import forms\nfrom django.core.exceptions import ValidationError\n\nclass TestModelChoiceField(forms.ModelChoiceField):\n    default_error_messages = {\n        'invalid_choice': 'Select a valid choice. %(value)s is not one of the available choices.',\n    }\n    def clean(self, value):\n        raise ValidationError(self.error_messages['invalid_choice'], params={'value': 'invalid_value'})\n\n# Test the field\nfield = TestModelChoiceField(queryset=None)\ntry:\n    field.clean('invalid_value')\nexcept ValidationError as e:\n    print(e)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "8:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.2810394219122827,
        0.2350553588476032
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        11,
        13
      ],
      "id": "9:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.1204766200389713
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/test_modelchoicefield.py"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "10:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\ncreate",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "5:python",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "5:python",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:submit",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:submit",
      "target": "10:rm",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:rm",
      "target": "9:submit",
      "key": 0
    }
  ]
}