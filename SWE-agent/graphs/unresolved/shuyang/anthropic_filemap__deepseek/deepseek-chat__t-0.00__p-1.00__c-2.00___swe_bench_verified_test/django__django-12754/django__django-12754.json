{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-12754"
  },
  "nodes": [
    {
      "label": "echo",
      "execution_time": [
        0.11767439101822674
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.db import models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.11790548590943217
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.db import models\nclass Readable(models.Model):\n    pass\nclass Book(Readable):\n    title = models.CharField(max_length=200)\n",
        ">>",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:echo"
    },
    {
      "label": "python",
      "execution_time": [
        0.46232120506465435,
        0.5085881480481476,
        0.42986520286649466,
        0.434652493102476,
        0.43347447202540934,
        0.5190598389599472,
        0.4252354691270739,
        0.5264235630165786,
        0.4913531388156116,
        0.4951508950907737,
        0.4853360000997782,
        0.5544755519367754,
        0.4904275389853865
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce.py"
      ],
      "phase": "verification",
      "step_indices": [
        2,
        5,
        8,
        10,
        14,
        19,
        21,
        23,
        29,
        33,
        37,
        39,
        41
      ],
      "id": "2:python"
    },
    {
      "label": "echo",
      "execution_time": [
        0.11943309311755002
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "3:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.11804160289466381
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "class Readable(models.Model):\n    pass\nclass Book(Readable):\n    title = models.CharField(max_length=200)\n",
        ">>",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.12211949611082673
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "5:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.11799575504846871,
        0.11962368409149349,
        0.11933253705501556
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "class Readable(models.Model):\n    pass\n    class Meta:\n        app_label = 'testapp'\nclass Book(Readable):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n",
        ">>",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        7,
        12,
        17
      ],
      "id": "6:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.117476416984573,
        0.11360865691676736,
        0.12021619500592351
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.core.management import call_command\ncall_command('makemigrations', 'testapp', interactive=False)\ncall_command('migrate', interactive=False)\n",
        ">>",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        9,
        13,
        18
      ],
      "id": "7:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.12070639594458044
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "8:echo"
    },
    {
      "label": "mkdir",
      "execution_time": [
        0.06194746645633131
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "9:mkdir"
    },
    {
      "label": "touch",
      "execution_time": [
        0.06194746645633131
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/testapp/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "10:touch"
    },
    {
      "label": "echo",
      "execution_time": [
        0.12174214003607631
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nsys.path.append('/testbed')\nfrom django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        16
      ],
      "id": "11:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.12685949308797717
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nsys.path.append('/testbed')\nfrom django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\n\n# Initial models\nclass Readable(models.Model):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n\n# Generate initial migration\nfrom django.core.management import call_command\ncall_command('makemigrations', 'testapp', interactive=False)\ncall_command('migrate', interactive=False)\n\n# Update models to move 'title' to Book\nclass Readable(models.Model):\n    pass\n    class Meta:\n        app_label = 'testapp'\n\nclass Book(Readable):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n\n# Generate migration for the change\ncall_command('makemigrations', 'testapp', interactive=False)\ncall_command('migrate', interactive=False)\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        20
      ],
      "id": "12:echo"
    },
    {
      "label": "echo",
      "execution_time": [
        0.12373645114712417
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nsys.path.append('/testbed')\nfrom django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.db import models\n\n# Initial state: No models\n\n# Final state: Readable without title, Book with title\nclass Readable(models.Model):\n    pass\n    class Meta:\n        app_label = 'testapp'\n\nclass Book(Readable):\n    title = models.CharField(max_length=200)\n    class Meta:\n        app_label = 'testapp'\n\n# Generate migration\nfrom django.core.management import call_command\ncall_command('makemigrations', 'testapp', interactive=False)\ncall_command('migrate', interactive=False)\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        22
      ],
      "id": "13:echo"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.20659906091168523
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py",
        "file_text": "from django.db import migrations, models\n\nclass Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),\n            ],\n        ),\n    ]"
      },
      "phase": "verification",
      "step_indices": [
        24
      ],
      "id": "14:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.194120435975492
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py"
      },
      "phase": "localization",
      "step_indices": [
        25
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18768777092918754
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py",
        "old_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "new_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n    ]",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        26
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "execution_time": [
        0.14634783403016627
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/manage.py",
        "migrate"
      ],
      "phase": "verification",
      "step_indices": [
        27
      ],
      "id": "17:python"
    },
    {
      "label": "echo",
      "execution_time": [
        0.1199715391267091
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "import sys\nsys.path.append('/testbed')\nfrom django.conf import settings\nsettings.configure(\n    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp'],\n    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}\n)\nimport django\ndjango.setup()\nfrom django.core.management import call_command\ncall_command('migrate', interactive=False)\n",
        ">",
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        28
      ],
      "id": "18:echo"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.23107804800383747
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/autodetector.py"
      },
      "phase": "localization",
      "step_indices": [
        30
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19943636213429272
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/autodetector.py",
        "view_range": [
          850,
          900
        ]
      },
      "phase": "localization",
      "step_indices": [
        31
      ],
      "id": "20:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2206759878899902
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/autodetector.py",
        "old_str": "    def generate_removed_fields(self):\n        \"\"\"Make RemoveField operations.\"\"\"\n        for app_label, model_name, field_name in sorted(self.old_field_keys - self.new_field_keys):\n            self._generate_removed_field(app_label, model_name, field_name)\n\n    def _generate_removed_field(self, app_label, model_name, field_name):\n        self.add_operation(\n            app_label,\n            operations.RemoveField(\n                model_name=model_name,\n                name=field_name,\n            ),\n            # We might need to depend on the removal of an\n            # order_with_respect_to or index/unique_together operation;\n            # this is safely ignored if there isn't one\n            dependencies=[",
        "new_str": "    def generate_removed_fields(self):\n        \"\"\"Make RemoveField operations.\"\"\"\n        # Prioritize RemoveField operations for fields moved to a subclass\n        moved_fields = []\n        other_fields = []\n        for app_label, model_name, field_name in sorted(self.old_field_keys - self.new_field_keys):\n            old_model = self.old_apps.get_model(app_label, model_name)\n            new_model = self.new_apps.get_model(app_label, model_name)\n            # Check if the field is moved to a subclass\n            for new_model_name in self.new_apps.get_models():\n                if new_model_name._meta.get_field(field_name, None) and issubclass(new_model_name, old_model.__class__):\n                    moved_fields.append((app_label, model_name, field_name))\n                    break\n            else:\n                other_fields.append((app_label, model_name, field_name))\n        # Process moved fields first\n        for app_label, model_name, field_name in moved_fields:\n            self._generate_removed_field(app_label, model_name, field_name)\n        # Process other fields\n        for app_label, model_name, field_name in other_fields:\n            self._generate_removed_field(app_label, model_name, field_name)\n\n    def _generate_removed_field(self, app_label, model_name, field_name):\n        self.add_operation(\n            app_label,\n            operations.RemoveField(\n                model_name=model_name,\n                name=field_name,\n            ),\n            # We might need to depend on the removal of an\n            # order_with_respect_to or index/unique_together operation;\n            # this is safely ignored if there isn't one\n            dependencies=[",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        32
      ],
      "id": "21:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19151476304978132
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/executor.py",
        "view_range": [
          100,
          150
        ]
      },
      "phase": "localization",
      "step_indices": [
        34
      ],
      "id": "22:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.1941284209024161
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/django/db/migrations/executor.py",
        "view_range": [
          200,
          250
        ]
      },
      "phase": "localization",
      "step_indices": [
        35
      ],
      "id": "23:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2102371791843325
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py",
        "old_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n    ]",
        "new_str": "    operations = [\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        36
      ],
      "id": "24:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20059231715276837
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py",
        "old_str": "    operations = [\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "new_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n            ],\n        ),\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        38
      ],
      "id": "25:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20588008197955787
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/testapp/migrations/0001_initial.py",
        "old_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n            ],\n        ),\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "new_str": "    operations = [\n        migrations.CreateModel(\n            name='Readable',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),\n            ],\n        ),\n        migrations.RemoveField(\n            model_name='readable',\n            name='title',\n        ),\n        migrations.CreateModel(\n            name='Book',\n            fields=[\n                ('readable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testapp.readable')),\n                ('title', models.CharField(max_length=200)),\n            ],\n            bases=('testapp.readable',),\n        ),\n    ]",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        40
      ],
      "id": "26:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        42
      ],
      "id": "27:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.6782121709547937,
        0.2865301880519837
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        43,
        45
      ],
      "id": "28:submit"
    },
    {
      "label": "rm",
      "execution_time": [
        0.11976591218262911
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce.py"
      ],
      "phase": "general",
      "step_indices": [
        44
      ],
      "id": "29:rm"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:echo",
      "target": "1:echo",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:python",
      "target": "3:echo",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "2:python",
      "target": "5:echo",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "2:python",
      "target": "7:echo",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "2:python",
      "target": "8:echo",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "2:python",
      "target": "9:mkdir",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "2:python",
      "target": "12:echo",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "2:python",
      "target": "13:echo",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "2:python",
      "target": "14:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "2:python",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "2:python",
      "target": "22:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "2:python",
      "target": "25:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "2:python",
      "target": "26:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "42",
      "type": "exec",
      "source": "2:python",
      "target": "27:empty action",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:echo",
      "target": "4:echo",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:echo",
      "target": "6:echo",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "6:echo",
      "target": "7:echo",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "6:echo",
      "target": "7:echo",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "7:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "7:echo",
      "target": "2:python",
      "key": 1
    },
    {
      "label": "19",
      "type": "exec",
      "source": "7:echo",
      "target": "2:python",
      "key": 2
    },
    {
      "label": "12",
      "type": "exec",
      "source": "8:echo",
      "target": "6:echo",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "9:mkdir",
      "target": "10:touch",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "10:touch",
      "target": "11:echo",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "11:echo",
      "target": "6:echo",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "12:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "13:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "14:str_replace_editor\ncreate",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "17:python",
      "target": "18:echo",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "18:echo",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "32",
      "type": "exec",
      "source": "20:str_replace_editor\nview",
      "target": "21:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "21:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "22:str_replace_editor\nview",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "23:str_replace_editor\nview",
      "target": "24:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "24:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "25:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "26:str_replace_editor\nstr_replace",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "43",
      "type": "exec",
      "source": "27:empty action",
      "target": "28:submit",
      "key": 0
    },
    {
      "label": "44",
      "type": "exec",
      "source": "28:submit",
      "target": "29:rm",
      "key": 0
    },
    {
      "label": "45",
      "type": "exec",
      "source": "29:rm",
      "target": "28:submit",
      "key": 0
    }
  ]
}