{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-22865"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19640892115421593
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2363659399561584
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.23693461995571852
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/colorbar.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.12090746290050447
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/lib/matplotlib/colorbar.py"
      ],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "3:grep"
    },
    {
      "label": "grep",
      "execution_time": [
        0.11850074701942503
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/lib/matplotlib/colorbar.py",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:grep"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": [
        0.18529189191758633
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_colorbar_issue.py",
        "file_text": "import matplotlib as mpl\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import from_levels_and_colors\n\nmy_cmap = mpl.cm.viridis\nbounds = np.arange(10)\nnb_colors = len(bounds) + 1\ncolors = my_cmap(np.linspace(100, 255, nb_colors).astype(int))\nmy_cmap, my_norm = from_levels_and_colors(bounds, colors, extend='both')\n\nplt.figure(figsize=(5, 1))\nax = plt.subplot(111)\ncbar = mpl.colorbar.ColorbarBase(ax, cmap=my_cmap, norm=my_norm, orientation='horizontal', drawedges=True)\nplt.subplots_adjust(left=0.05, bottom=0.4, right=0.95, top=0.9)\nplt.show()"
      },
      "phase": "verification",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "execution_time": [
        2.8354416869115084,
        0.6751562531571835
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_colorbar_issue.py"
      ],
      "phase": "verification",
      "step_indices": [
        6,
        9
      ],
      "id": "6:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18124656518921256
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/colorbar.py",
        "view_range": [
          633,
          656
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.20677243801765144
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/lib/matplotlib/colorbar.py",
        "old_str": "        self.dividers.set_segments(\n            np.dstack([X, Y])[1:-1] if self.drawedges else [])",
        "new_str": "        if self.drawedges:\n            segments = np.dstack([X, Y])\n            if self.extend in ['min', 'both']:\n                segments = np.concatenate([segments[:1], segments])\n            if self.extend in ['max', 'both']:\n                segments = np.concatenate([segments, segments[-1:]])\n            self.dividers.set_segments(segments)\n        else:\n            self.dividers.set_segments([])",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "9:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.24422357301227748,
        0.22602647403255105
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        11,
        13
      ],
      "id": "10:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:grep",
      "target": "4:grep",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:grep",
      "target": "5:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\ncreate",
      "target": "6:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:python",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "6:python",
      "target": "9:empty action",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "6:python",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:empty action",
      "target": "10:submit",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "9:empty action",
      "target": "10:submit",
      "key": 1
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:submit",
      "target": "9:empty action",
      "key": 0
    }
  ]
}