{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-13128"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.2143719899468124,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "find",
      "execution_time": 7.834147333167493,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed",
        "*.py",
        "grep",
        "{}",
        ";"
      ],
      "phase": "general",
      "id": "1:find"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": 0.20388641394674778,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/tests/expressions/models.py"
      },
      "phase": "localization",
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.1973539348691702,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "file_text": "# reproduce_error.py\nimport datetime\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)"
      },
      "phase": "verification",
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": 0.27579277544282377,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "4:cd"
    },
    {
      "label": "python",
      "execution_time": 0.27579277544282377,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "5:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.1952600320801139,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# reproduce_error.py\nimport datetime\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "new_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.settings')\nimport django\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.2002738144947216,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "7:cd"
    },
    {
      "label": "python",
      "execution_time": 0.2002738144947216,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "8:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.20481825317256153,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.settings')\nimport django\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "new_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\nimport django\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.1918892510002479,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "10:cd"
    },
    {
      "label": "python",
      "execution_time": 0.1918892510002479,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "11:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.20674167782999575,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\nimport django\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "new_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.22887702146545053,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "13:cd"
    },
    {
      "label": "python",
      "execution_time": 0.22887702146545053,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "14:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.20753504801541567,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()))\nprint(queryset)",
        "new_str": "# Attempt to annotate the delta field\nfrom django.db.models import ExpressionWrapper\n\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(datetime.timedelta()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.20798033208120614,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "16:cd"
    },
    {
      "label": "python",
      "execution_time": 0.20798033208120614,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "17:python"
    },
    {
      "label": "str_replace_editor\ncreate",
      "execution_time": 0.2222614351194352,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/setup_database.py",
        "file_text": "# setup_database.py\nimport os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.core.management import call_command\ncall_command('migrate', verbosity=0)"
      },
      "phase": "verification",
      "id": "18:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "execution_time": 0.2212374610826373,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "19:cd"
    },
    {
      "label": "python",
      "execution_time": 0.2212374610826373,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "setup_database.py"
      ],
      "phase": "verification",
      "id": "20:python"
    },
    {
      "label": "cd",
      "execution_time": 0.20814191550016403,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "21:cd"
    },
    {
      "label": "python",
      "execution_time": 0.20814191550016403,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "22:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.20080329407937825,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/setup_database.py",
        "old_str": "# setup_database.py\nimport os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.core.management import call_command\ncall_command('migrate', verbosity=0)",
        "new_str": "# setup_database.py\nimport os\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.db import connection\nfrom django.db.backends.base.creation import BaseDatabaseCreation\n\n# Create the database tables manually\nwith connection.schema_editor() as schema_editor:\n    from tests.expressions.models import Experiment\n    schema_editor.create_model(Experiment)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "23:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.20871227199677378,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "24:cd"
    },
    {
      "label": "python",
      "execution_time": 0.20871227199677378,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "setup_database.py"
      ],
      "phase": "verification",
      "id": "25:python"
    },
    {
      "label": "cd",
      "execution_time": 0.20767289656214416,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "26:cd"
    },
    {
      "label": "python",
      "execution_time": 0.20767289656214416,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "27:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.1939565350767225,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.db.models import F, Value\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nfrom django.db.models import ExpressionWrapper\n\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(datetime.timedelta()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "new_str": "# reproduce_error.py\nimport os\nimport datetime\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_error_settings')\nimport django\nfrom django.conf import settings\n\nif not settings.configured:\n    settings.configure(\n        SECRET_KEY='dummy',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:',\n            }\n        },\n        INSTALLED_APPS=[\n            'tests.expressions',\n        ],\n    )\n\ndjango.setup()\n\nfrom django.db import connection\nfrom django.db.backends.base.creation import BaseDatabaseCreation\n\n# Create the database tables manually\nwith connection.schema_editor() as schema_editor:\n    from tests.expressions.models import Experiment\n    schema_editor.create_model(Experiment)\n\nfrom django.db.models import F, Value, ExpressionWrapper\nfrom django.db.models.fields import DurationField\nfrom tests.expressions.models import Experiment\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(datetime.timedelta()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "28:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.22054249700158834,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "29:cd"
    },
    {
      "label": "python",
      "execution_time": 0.22054249700158834,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "30:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.1874925431329757,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(datetime.timedelta()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "new_str": "# Convert timedelta to a string for SQLite\ntimedelta_str = str(datetime.timedelta())\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(timedelta_str, output_field=DurationField()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "31:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.21486863493919373,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "32:cd"
    },
    {
      "label": "python",
      "execution_time": 0.21486863493919373,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "33:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": 0.21205209894105792,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/reproduce_error.py",
        "old_str": "# Convert timedelta to a string for SQLite\ntimedelta_str = str(datetime.timedelta())\n\n# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(timedelta_str, output_field=DurationField()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "new_str": "# Attempt to annotate the delta field\nqueryset = Experiment.objects.annotate(\n    delta=ExpressionWrapper(\n        F('end') - F('start') + Value(datetime.timedelta(), output_field=DurationField()),\n        output_field=DurationField()\n    )\n)\nprint(queryset)",
        "edit_status": "success"
      },
      "phase": "patch",
      "id": "34:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "execution_time": 0.19269187899772078,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed"
      ],
      "phase": "general",
      "id": "35:cd"
    },
    {
      "label": "python",
      "execution_time": 0.19269187899772078,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "reproduce_error.py"
      ],
      "phase": "verification",
      "id": "36:python"
    },
    {
      "label": "empty action",
      "execution_time": 0.0,
      "state": {},
      "args": {},
      "phase": "general",
      "id": "37:empty action"
    },
    {
      "label": "submit",
      "execution_time": 0.2757668939884752,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "38:submit"
    },
    {
      "label": "rm",
      "execution_time": 0.12020997214131057,
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py",
        "/testbed/setup_database.py"
      ],
      "phase": "general",
      "id": "39:rm"
    },
    {
      "label": "submit",
      "execution_time": 0.2706075459718704,
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "id": "40:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:find",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:find",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "4:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:cd",
      "target": "5:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:python",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:cd",
      "target": "11:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "11:python",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "13:cd",
      "target": "14:python",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "14:python",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "16:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "16:cd",
      "target": "17:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "17:python",
      "target": "18:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "18:str_replace_editor\ncreate",
      "target": "19:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "19:cd",
      "target": "20:python",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "20:python",
      "target": "21:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "21:cd",
      "target": "22:python",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "22:python",
      "target": "23:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "23:str_replace_editor\nstr_replace",
      "target": "24:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "24:cd",
      "target": "25:python",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "25:python",
      "target": "26:cd",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "26:cd",
      "target": "27:python",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "27:python",
      "target": "28:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "28:str_replace_editor\nstr_replace",
      "target": "29:cd",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "29:cd",
      "target": "30:python",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "30:python",
      "target": "31:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "31:str_replace_editor\nstr_replace",
      "target": "32:cd",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "32:cd",
      "target": "33:python",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "33:python",
      "target": "34:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "34:str_replace_editor\nstr_replace",
      "target": "35:cd",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "35:cd",
      "target": "36:python",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "36:python",
      "target": "37:empty action",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "37:empty action",
      "target": "38:submit",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "38:submit",
      "target": "39:rm",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "39:rm",
      "target": "40:submit",
      "key": 0
    }
  ]
}