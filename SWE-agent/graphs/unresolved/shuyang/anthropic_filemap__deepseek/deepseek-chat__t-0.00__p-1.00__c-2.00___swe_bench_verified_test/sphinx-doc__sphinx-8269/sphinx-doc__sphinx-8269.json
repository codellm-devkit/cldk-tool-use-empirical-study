{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sphinx-doc__sphinx-8269"
  },
  "nodes": [
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.20358791504986584
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed"
      },
      "phase": "localization",
      "step_indices": [
        0
      ],
      "id": "0:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19633881701156497
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19133210787549615
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders/linkcheck.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.2121103429235518
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sphinx/builders/linkcheck.py",
        "old_str": "            try:\n                if anchor and self.app.config.linkcheck_anchors:\n                    # Read the whole document and see if #anchor exists\n                    response = requests.get(req_url, stream=True, config=self.app.config,\n                                            auth=auth_info, **kwargs)\n                    found = check_anchor(response, unquote(anchor))\n\n                    if not found:\n                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n                else:\n                    try:\n                        # try a HEAD request first, which should be easier on\n                        # the server and the network\n                        response = requests.head(req_url, config=self.app.config,\n                                                 auth=auth_info, **kwargs)\n                        response.raise_for_status()\n                    except HTTPError:\n                        # retry with GET request if that fails, some servers\n                        # don't like HEAD requests.\n                        response = requests.get(req_url, stream=True, config=self.app.config,\n                                                auth=auth_info, **kwargs)\n                        response.raise_for_status()\n            except HTTPError as err:\n                if err.response.status_code == 401:\n                    # We'll take \"Unauthorized\" as working.\n                    return 'working', ' - unauthorized', 0\n                elif err.response.status_code == 503:\n                    # We'll take \"Service Unavailable\" as ignored.\n                    return 'ignored', str(err), 0\n                else:\n                    return 'broken', str(err), 0\n            except Exception as err:\n                if is_ssl_error(err):\n                    return 'ignored', str(err), 0\n                else:\n                    return 'broken', str(err), 0",
        "new_str": "            try:\n                # First, check for HTTP errors\n                try:\n                    # try a HEAD request first, which should be easier on\n                    # the server and the network\n                    response = requests.head(req_url, config=self.app.config,\n                                             auth=auth_info, **kwargs)\n                    response.raise_for_status()\n                except HTTPError:\n                    # retry with GET request if that fails, some servers\n                    # don't like HEAD requests.\n                    response = requests.get(req_url, stream=True, config=self.app.config,\n                                            auth=auth_info, **kwargs)\n                    response.raise_for_status()\n\n                # Only proceed with anchor check if no HTTP error and anchor is enabled\n                if anchor and self.app.config.linkcheck_anchors:\n                    # Read the whole document and see if #anchor exists\n                    found = check_anchor(response, unquote(anchor))\n                    if not found:\n                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n            except HTTPError as err:\n                if err.response.status_code == 401:\n                    # We'll take \"Unauthorized\" as working.\n                    return 'working', ' - unauthorized', 0\n                elif err.response.status_code == 503:\n                    # We'll take \"Service Unavailable\" as ignored.\n                    return 'ignored', str(err), 0\n                else:\n                    return 'broken', str(err), 0\n            except Exception as err:\n                if is_ssl_error(err):\n                    return 'ignored', str(err), 0\n                else:\n                    return 'broken', str(err), 0",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nstr_replace"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:empty action"
    },
    {
      "label": "submit",
      "execution_time": [
        0.21061268215999007
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        5
      ],
      "id": "5:submit"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.17687530117109418
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/setup.py",
        "old_str": "install_requires = [\n    'sphinxcontrib-applehelp<=1.0.7',\n    'sphinxcontrib-devhelp<=1.0.5',\n    'sphinxcontrib-jsmath',\n    'sphinxcontrib-htmlhelp<=2.0.4',\n    'sphinxcontrib-serializinghtml<=1.1.9',\n    'sphinxcontrib-qthelp<=1.0.6',\n    'Jinja2<3.0',\n    'Pygments>=2.0',\n    'docutils>=0.12',\n    'snowballstemmer>=1.1',\n    'babel>=1.3',\n    'alabaster>=0.7,<0.7.12',\n    'imagesize',\n    'requests>=2.5.0',\n    'setuptools',\n    'packaging', 'markupsafe<=2.0.1',\n]",
        "new_str": "install_requires = [\n    'sphinxcontrib-applehelp',\n    'sphinxcontrib-devhelp',\n    'sphinxcontrib-jsmath',\n    'sphinxcontrib-htmlhelp',\n    'sphinxcontrib-serializinghtml',\n    'sphinxcontrib-qthelp',\n    'Jinja2>=2.3',\n    'Pygments>=2.0',\n    'docutils>=0.12',\n    'snowballstemmer>=1.1',\n    'babel>=1.3',\n    'alabaster>=0.7,<0.8',\n    'imagesize',\n    'requests>=2.5.0',\n    'setuptools',\n    'packaging',\n]",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.1753138299100101
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/tox.ini",
        "old_str": "commands=\n    pytest -rA --durations 25 {posargs}",
        "new_str": "commands=\n    pytest --durations 25 {posargs}",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "sphinx-quickstart",
      "execution_time": [
        0.17159287134806314
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:sphinx-quickstart"
    },
    {
      "label": "echo",
      "execution_time": [
        0.17159287134806314
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "\\n`foo <https://google.com/test.txt#test>`_",
        ">>source/index.rst"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "9:echo"
    },
    {
      "label": "make",
      "execution_time": [
        0.17159287134806314
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "linkcheck"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "10:make"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18674414092674851
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/Makefile"
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19712294195778668
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/source/Makefile"
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.19329593586735427
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/source"
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "mkdir",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "14:mkdir"
    },
    {
      "label": "cd",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [
        "/tmp/sphinx_test"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "15:cd"
    },
    {
      "label": "sphinx-quickstart",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "16:sphinx-quickstart"
    },
    {
      "label": "echo",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [
        "\\n`foo <https://google.com/test.txt#test>`_",
        ">>source/index.rst"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "17:echo"
    },
    {
      "label": "cd",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [
        "source"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "18:cd"
    },
    {
      "label": "make",
      "execution_time": [
        0.07869343199611951
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [
        "linkcheck"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "19:make"
    },
    {
      "label": "cat",
      "execution_time": [
        0.11903288494795561
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test/source"
      },
      "args": [
        "/tmp/sphinx_test/Makefile"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "20:cat"
    },
    {
      "label": "pip",
      "execution_time": [
        0.4620559442943583
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test"
      },
      "args": [
        "install",
        "sphinx"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "21:pip"
    },
    {
      "label": "cd",
      "execution_time": [
        0.4620559442943583
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test"
      },
      "args": [
        "/tmp/sphinx_test"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "22:cd"
    },
    {
      "label": "make",
      "execution_time": [
        0.4620559442943583
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test"
      },
      "args": [
        "linkcheck"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "23:make"
    },
    {
      "label": "submit",
      "execution_time": [
        0.4031296079047024
      ],
      "state": {
        "working_dir": "/tmp/sphinx_test"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        15
      ],
      "id": "24:submit"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "0:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nstr_replace",
      "target": "4:empty action",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:empty action",
      "target": "5:submit",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:submit",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "8:sphinx-quickstart",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:sphinx-quickstart",
      "target": "9:echo",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:echo",
      "target": "10:make",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:make",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "14:mkdir",
      "key": 0
    },
    {
      "type": "hier",
      "source": "13:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "14:mkdir",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "15:cd",
      "target": "16:sphinx-quickstart",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "16:sphinx-quickstart",
      "target": "17:echo",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "17:echo",
      "target": "18:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "18:cd",
      "target": "19:make",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "19:make",
      "target": "20:cat",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "20:cat",
      "target": "21:pip",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "21:pip",
      "target": "22:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "22:cd",
      "target": "23:make",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "23:make",
      "target": "24:submit",
      "key": 0
    }
  ]
}