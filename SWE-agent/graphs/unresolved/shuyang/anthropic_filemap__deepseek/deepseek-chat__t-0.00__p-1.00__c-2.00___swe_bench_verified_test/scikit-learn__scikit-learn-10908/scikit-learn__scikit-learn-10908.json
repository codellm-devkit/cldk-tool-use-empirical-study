{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "scikit-learn__scikit-learn-10908"
  },
  "nodes": [
    {
      "label": "echo",
      "execution_time": [
        0.2970643319422379
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "from sklearn.feature_extraction.text import CountVectorizer\nvectorizer = CountVectorizer(vocabulary=['and', 'document', 'first', 'is', 'one', 'second', 'the', 'third', 'this'])\nprint(vectorizer.get_feature_names())",
        ">",
        "/testbed/reproduce_error.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:echo"
    },
    {
      "label": "python",
      "execution_time": [
        0.2970643319422379,
        0.538248053053394
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/reproduce_error.py"
      ],
      "phase": "verification",
      "step_indices": [
        0,
        7
      ],
      "id": "1:python"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.25411317916586995
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/feature_extraction/text.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "execution_time": [
        0.12364810286089778,
        0.12064071302302182
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": [
        "/testbed/sklearn/feature_extraction/text.py"
      ],
      "phase": "general",
      "step_indices": [
        2,
        4
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.2008841980714351
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/feature_extraction/text.py",
        "view_range": [
          990,
          1000
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "execution_time": [
        0.18367681396193802
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/feature_extraction/text.py",
        "view_range": [
          300,
          310
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "execution_time": [
        0.18671447993256152
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {
        "path": "/testbed/sklearn/feature_extraction/text.py",
        "old_str": "    def _check_vocabulary(self):\n        \"\"\"Check if vocabulary is empty or missing (not fit-ed)\"\"\"\n        msg = \"%(name)s - Vocabulary wasn't fitted.\"\n        check_is_fitted(self, 'vocabulary_', msg=msg),\n\n        if len(self.vocabulary_) == 0:\n            raise ValueError(\"Vocabulary is empty\")",
        "new_str": "    def _check_vocabulary(self):\n        \"\"\"Check if vocabulary is empty or missing (not fit-ed)\"\"\"\n        if hasattr(self, 'vocabulary') and not hasattr(self, 'vocabulary_'):\n            self._validate_vocabulary()\n        else:\n            msg = \"%(name)s - Vocabulary wasn't fitted.\"\n            check_is_fitted(self, 'vocabulary_', msg=msg),\n\n        if len(self.vocabulary_) == 0:\n            raise ValueError(\"Vocabulary is empty\")",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "submit",
      "execution_time": [
        0.2240136731415987,
        0.21804042090661824
      ],
      "state": {
        "working_dir": "/testbed"
      },
      "args": {},
      "phase": "submit",
      "step_indices": [
        8,
        10
      ],
      "id": "7:submit"
    },
    {
      "label": "empty action",
      "execution_time": [
        0.0
      ],
      "state": {},
      "args": {},
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "8:empty action"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:echo",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:python",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:python",
      "target": "7:submit",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "3:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:submit",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:empty action",
      "target": "7:submit",
      "key": 0
    }
  ]
}