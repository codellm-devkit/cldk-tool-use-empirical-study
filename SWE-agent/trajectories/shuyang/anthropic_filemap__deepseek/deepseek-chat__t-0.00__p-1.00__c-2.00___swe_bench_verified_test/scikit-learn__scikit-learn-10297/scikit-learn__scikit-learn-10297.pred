{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "scikit-learn__scikit-learn-10297", "model_patch": "diff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py\nindex 911c74ae3..b1fccc2e9 100644\n--- a/sklearn/linear_model/ridge.py\n+++ b/sklearn/linear_model/ridge.py\n@@ -1333,10 +1333,11 @@ class RidgeClassifierCV(LinearClassifierMixin, _BaseRidgeCV):\n     advantage of the multi-variate response support in Ridge.\n     \"\"\"\n     def __init__(self, alphas=(0.1, 1.0, 10.0), fit_intercept=True,\n-                 normalize=False, scoring=None, cv=None, class_weight=None):\n+                 normalize=False, scoring=None, cv=None, class_weight=None,\n+                 store_cv_values=False):\n         super(RidgeClassifierCV, self).__init__(\n             alphas=alphas, fit_intercept=fit_intercept, normalize=normalize,\n-            scoring=scoring, cv=cv)\n+            scoring=scoring, cv=cv, store_cv_values=store_cv_values)\n         self.class_weight = class_weight\n \n     def fit(self, X, y, sample_weight=None):\ndiff --git a/test_ridge_classifier_cv.py b/test_ridge_classifier_cv.py\nnew file mode 100644\nindex 000000000..71bd9794c\n--- /dev/null\n+++ b/test_ridge_classifier_cv.py\n@@ -0,0 +1,12 @@\n+import numpy as np\n+from sklearn.linear_model import RidgeClassifierCV\n+\n+# Test database\n+n = 100\n+x = np.random.randn(n, 30)\n+y = np.random.randint(0, 2, size=n)  # Binary labels for classification\n+\n+# Fit RidgeClassifierCV with store_cv_values=True\n+rr = RidgeClassifierCV(alphas=np.arange(0.1, 1000, 0.1), normalize=True, store_cv_values=True).fit(x, y)\n+\n+print(\"Success: No TypeError raised.\")\n"}