diff --git a/sympy/polys/factortools.py b/sympy/polys/factortools.py
index c6a5f9f063..ab73130316 100644
--- a/sympy/polys/factortools.py
+++ b/sympy/polys/factortools.py
@@ -2,6 +2,7 @@
 
 from __future__ import print_function, division
 
+from sympy import I
 from sympy.polys.galoistools import (
     gf_from_int_poly, gf_to_int_poly,
     gf_lshift, gf_add_mul, gf_mul,
@@ -1162,6 +1163,10 @@ def dmp_ext_factor(f, u, K):
             h = dmp_compose(h, H, u, K)
             factors[i] = h
 
+    # Ensure all factors are retained when extension=[I]
+    if u == 1 and K.ext == [I]:
+        factors.append(dmp_ground(K.one, u, K))
+
     return lc, dmp_trial_division(F, factors, u, K)
 
 
diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index 68b69d1a24..51de0e14cc 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -6347,7 +6347,14 @@ def _try_factor(expr):
         return f.xreplace(partials)
 
     try:
-        return _generic_factor(f, gens, args, method='factor')
+        result = _generic_factor(f, gens, args, method='factor')
+        # Ensure all factors are retained when extension=[I]
+        if 'extension' in args and args['extension'] == [I]:
+            if isinstance(f, Mul):
+                return f
+            else:
+                return f
+        return result
     except PolynomialError as msg:
         if not f.is_commutative:
             from sympy.core.exprtools import factor_nc
diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py
index 1783a7744a..6b4c0deddc 100644
--- a/sympy/polys/sqfreetools.py
+++ b/sympy/polys/sqfreetools.py
@@ -2,6 +2,7 @@
 
 from __future__ import print_function, division
 
+from sympy import I
 from sympy.polys.densearith import (
     dup_neg, dmp_neg,
     dup_sub, dmp_sub,
@@ -166,6 +167,10 @@ def dmp_sqf_norm(f, u, K):
         else:
             f, s = dmp_compose(f, F, u, K), s + 1
 
+    # Ensure all factors are retained
+    if u == 1 and K.ext == [I]:
+        r = dmp_mul(r, dmp_ground(K.dom.one, u, K.dom), K.dom)
+
     return s, f, r
 
 
