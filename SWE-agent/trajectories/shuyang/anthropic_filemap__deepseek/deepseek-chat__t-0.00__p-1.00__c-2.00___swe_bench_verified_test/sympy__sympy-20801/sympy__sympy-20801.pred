{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-20801", "model_patch": "diff --git a/reproduce.py b/reproduce.py\nnew file mode 100644\nindex 0000000000..ef1bea802d\n--- /dev/null\n+++ b/reproduce.py\n@@ -0,0 +1,3 @@\n+from sympy import *\n+print(S(0.0) == S.false)\n+print(S.false == S(0.0))\ndiff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 79f6a7d165..681df38c74 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1387,7 +1387,9 @@ def __eq__(self, other):\n         except SympifyError:\n             return NotImplemented\n         if not self:\n-            return not other\n+            if isinstance(other, Boolean):\n+                return not other\n+            return False\n         if isinstance(other, Boolean):\n             return False\n         if other.is_NumberSymbol:\ndiff --git a/sympy/logic/boolalg.py b/sympy/logic/boolalg.py\nindex fbcba1f8d4..df75a418b2 100644\n--- a/sympy/logic/boolalg.py\n+++ b/sympy/logic/boolalg.py\n@@ -396,6 +396,16 @@ def __bool__(self):\n     def __hash__(self):\n         return hash(False)\n \n+    def __eq__(self, other):\n+        from sympy.core.numbers import Float\n+        try:\n+            other = _sympify(other)\n+        except SympifyError:\n+            return NotImplemented\n+        if isinstance(other, Float):\n+            return not other\n+        return super().__eq__(other)\n+\n     @property\n     def negated(self):\n         return S.true\n"}