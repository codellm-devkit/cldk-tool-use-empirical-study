{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-24026", "model_patch": "diff --git a/edge_case_test.py b/edge_case_test.py\nnew file mode 100644\nindex 0000000000..d9d9defbb4\n--- /dev/null\n+++ b/edge_case_test.py\n@@ -0,0 +1,9 @@\n+import matplotlib.pyplot as plt\n+import numpy as np\n+\n+my_data = np.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])\n+fig, ax = plt.subplots()\n+\n+# Test with mixed valid and cycle colors\n+ax.stackplot([1, 2, 3], my_data, colors=[\"red\", \"C1\", \"blue\"])\n+plt.show()\ndiff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex c580043eeb..33c6750437 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -70,7 +70,9 @@ def stackplot(axes, x, *args,\n \n     labels = iter(labels)\n     if colors is not None:\n-        axes.set_prop_cycle(color=colors)\n+        color_cycle = iter(colors)\n+    else:\n+        color_cycle = None\n \n     # Assume data passed has not been 'stacked', so stack it here.\n     # We'll need a float buffer for the upcoming calculations.\n@@ -108,7 +110,10 @@ def stackplot(axes, x, *args,\n         stack += first_line\n \n     # Color between x = 0 and the first array.\n-    color = axes._get_lines.get_next_color()\n+    if color_cycle is not None:\n+        color = next(color_cycle)\n+    else:\n+        color = axes._get_lines.get_next_color()\n     coll = axes.fill_between(x, first_line, stack[0, :],\n                              facecolor=color, label=next(labels, None),\n                              **kwargs)\n@@ -117,7 +122,10 @@ def stackplot(axes, x, *args,\n \n     # Color between array i-1 and array i\n     for i in range(len(y) - 1):\n-        color = axes._get_lines.get_next_color()\n+        if color_cycle is not None:\n+            color = next(color_cycle)\n+        else:\n+            color = axes._get_lines.get_next_color()\n         r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n                                    facecolor=color, label=next(labels, None),\n                                    **kwargs))\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..9a7bc84d38\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,10 @@\n+import matplotlib.pyplot as plt\n+from matplotlib.patches import Rectangle\n+import numpy\n+\n+my_data = numpy.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])\n+fig, ax = plt.subplots()\n+ax.plot([1, 3], [1, 3], color=\"C0\")\n+ax.add_patch(Rectangle(xy=(1.5, 1.5), width=0.5, height=0.5, facecolor=\"C1\"))\n+ax.stackplot([1, 2, 3], my_data, colors=[\"C2\", \"C3\", \"C4\"])\n+plt.show()\n"}