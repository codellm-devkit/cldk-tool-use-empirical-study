{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 822968ef56..b614992bfe 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1258,8 +1258,6 @@ class When(Expression):\n                 \"When() supports a Q object, a boolean expression, or lookups \"\n                 \"as a condition.\"\n             )\n-        if isinstance(condition, Q) and not condition:\n-            raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n@@ -1298,9 +1296,27 @@ class When(Expression):\n         connection.ops.check_expression_support(self)\n         template_params = extra_context\n         sql_params = []\n-        condition_sql, condition_params = compiler.compile(self.condition)\n-        template_params[\"condition\"] = condition_sql\n-        sql_params.extend(condition_params)\n+        if isinstance(self.condition, Q):\n+            try:\n+                condition_sql, condition_params = compiler.compile(self.condition)\n+                if not condition_sql or not condition_sql.strip():\n+                    # Replace empty conditions with \"1=1\" (always true)\n+                    template_params[\"condition\"] = \"1=1\"\n+                else:\n+                    template_params[\"condition\"] = condition_sql\n+                    sql_params.extend(condition_params)\n+            except EmptyResultSet:\n+                # Replace conditions that can't match anything with \"1=1\" (always true)\n+                template_params[\"condition\"] = \"1=1\"\n+        else:\n+            condition_sql, condition_params = compiler.compile(self.condition)\n+            template_params[\"condition\"] = condition_sql\n+            sql_params.extend(condition_params)\n+        \n+        # Ensure the condition is not empty\n+        if \"condition\" not in template_params or not template_params[\"condition\"]:\n+            template_params[\"condition\"] = \"1=1\"\n+            \n         result_sql, result_params = compiler.compile(self.result)\n         template_params[\"result\"] = result_sql\n         sql_params.extend(result_params)\n"}