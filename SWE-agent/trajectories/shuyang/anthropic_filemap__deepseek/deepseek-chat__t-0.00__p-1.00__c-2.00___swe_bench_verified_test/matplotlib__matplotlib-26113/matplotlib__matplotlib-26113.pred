{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-26113", "model_patch": "diff --git a/hexbin_mincnt0_with_C.png b/hexbin_mincnt0_with_C.png\nnew file mode 100644\nindex 0000000000..9c2dd4c344\nBinary files /dev/null and b/hexbin_mincnt0_with_C.png differ\ndiff --git a/hexbin_mincnt1_no_C.png b/hexbin_mincnt1_no_C.png\nnew file mode 100644\nindex 0000000000..14f39a67a6\nBinary files /dev/null and b/hexbin_mincnt1_no_C.png differ\ndiff --git a/hexbin_mincnt1_with_C.png b/hexbin_mincnt1_with_C.png\nnew file mode 100644\nindex 0000000000..14f39a67a6\nBinary files /dev/null and b/hexbin_mincnt1_with_C.png differ\ndiff --git a/hexbin_no_mincnt_no_C.png b/hexbin_no_mincnt_no_C.png\nnew file mode 100644\nindex 0000000000..9c2dd4c344\nBinary files /dev/null and b/hexbin_no_mincnt_no_C.png differ\ndiff --git a/hexbin_no_mincnt_with_C.png b/hexbin_no_mincnt_with_C.png\nnew file mode 100644\nindex 0000000000..9c2dd4c344\nBinary files /dev/null and b/hexbin_no_mincnt_with_C.png differ\ndiff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5369eadbde..46fb698522 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -5014,7 +5014,7 @@ default: :rc:`scatter.edgecolors`\n             if mincnt is None:\n                 mincnt = 0\n             accum = np.array(\n-                [reduce_C_function(acc) if len(acc) > mincnt else np.nan\n+                [reduce_C_function(acc) if len(acc) >= mincnt else np.nan\n                  for Cs_at_i in [Cs_at_i1, Cs_at_i2]\n                  for acc in Cs_at_i[1:]],  # [1:] drops out-of-range points.\n                 float)\ndiff --git a/reproduce_hexbin_issue.py b/reproduce_hexbin_issue.py\nnew file mode 100644\nindex 0000000000..78caef61d1\n--- /dev/null\n+++ b/reproduce_hexbin_issue.py\n@@ -0,0 +1,79 @@\n+from matplotlib import pyplot\n+import numpy as np\n+\n+np.random.seed(42)\n+\n+X, Y = np.random.multivariate_normal([0.0, 0.0], [[1.0, 0.1], [0.1, 1.0]], size=250).T\n+Z = np.ones_like(X)\n+\n+extent = [-3., 3., -3., 3.]\n+gridsize = (7, 7)\n+\n+# No mincnt, no C\n+fig, ax = pyplot.subplots(1, 1)\n+ax.hexbin(\n+    X, Y,\n+    extent=extent,\n+    gridsize=gridsize,\n+    linewidth=0.0,\n+    cmap='Blues',\n+)\n+ax.set_facecolor(\"green\")\n+pyplot.savefig('hexbin_no_mincnt_no_C.png')\n+\n+# mincnt=1, no C\n+fig, ax = pyplot.subplots(1, 1)\n+ax.hexbin(\n+    X, Y,\n+    mincnt=1,\n+    extent=extent,\n+    gridsize=gridsize,\n+    linewidth=0.0,\n+    cmap='Blues',\n+)\n+ax.set_facecolor(\"green\")\n+pyplot.savefig('hexbin_mincnt1_no_C.png')\n+\n+# No mincnt, C specified\n+fig, ax = pyplot.subplots(1, 1)\n+ax.hexbin(\n+    X, Y,\n+    C=Z,\n+    reduce_C_function=np.sum,\n+    extent=extent,\n+    gridsize=gridsize,\n+    linewidth=0.0,\n+    cmap='Blues',\n+)\n+ax.set_facecolor(\"green\")\n+pyplot.savefig('hexbin_no_mincnt_with_C.png')\n+\n+# mincnt=1, C specified\n+fig, ax = pyplot.subplots(1, 1)\n+ax.hexbin(\n+    X, Y,\n+    C=Z,\n+    reduce_C_function=np.sum,\n+    mincnt=1,\n+    extent=extent,\n+    gridsize=gridsize,\n+    linewidth=0.0,\n+    cmap='Blues',\n+)\n+ax.set_facecolor(\"green\")\n+pyplot.savefig('hexbin_mincnt1_with_C.png')\n+\n+# mincnt=0, C specified\n+fig, ax = pyplot.subplots(1, 1)\n+ax.hexbin(\n+    X, Y,\n+    C=Z,\n+    reduce_C_function=np.sum,\n+    mincnt=0,\n+    extent=extent,\n+    gridsize=gridsize,\n+    linewidth=0.0,\n+    cmap='Blues',\n+)\n+ax.set_facecolor(\"green\")\n+pyplot.savefig('hexbin_mincnt0_with_C.png')\n\\ No newline at end of file\n"}