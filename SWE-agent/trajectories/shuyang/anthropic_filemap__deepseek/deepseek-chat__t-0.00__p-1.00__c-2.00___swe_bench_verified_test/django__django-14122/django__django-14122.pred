{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 850734709d..0a7e510469 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -125,10 +125,25 @@ class SQLCompiler:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n+        # Skip Meta.ordering fields from being added to GROUP BY\n+        meta_ordering_fields = set()\n+        if hasattr(self.query.model._meta, 'ordering'):\n+            for field_name in self.query.model._meta.ordering:\n+                if field_name.startswith('-'):\n+                    field_name = field_name[1:]\n+                try:\n+                    field = self.query.model._meta.get_field(field_name)\n+                    meta_ordering_fields.add(field)\n+                except FieldDoesNotExist:\n+                    pass\n+\n         for expr, (sql, params, is_ref) in order_by:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not is_ref:\n+                # Skip if the expression corresponds to a Meta.ordering field\n+                if hasattr(expr, 'field') and expr.field in meta_ordering_fields:\n+                    continue\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n"}