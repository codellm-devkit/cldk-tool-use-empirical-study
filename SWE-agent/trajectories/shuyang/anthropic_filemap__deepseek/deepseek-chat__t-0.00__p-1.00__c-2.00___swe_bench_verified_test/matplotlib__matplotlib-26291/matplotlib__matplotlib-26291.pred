{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-26291", "model_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py\nindex 9d35051074..ecd362b4e7 100644\n--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py\n+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py\n@@ -64,6 +64,11 @@ class AnchoredLocatorBase(AnchoredOffsetbox):\n             loc, pad=0., child=None, borderpad=borderpad,\n             bbox_to_anchor=bbox_to_anchor, bbox_transform=bbox_transform\n         )\n+        # Set the figure attribute based on the bbox_transform or bbox_to_anchor\n+        if hasattr(bbox_to_anchor, 'figure'):\n+            self.figure = bbox_to_anchor.figure\n+        elif bbox_transform is not None and hasattr(bbox_transform, 'figure'):\n+            self.figure = bbox_transform.figure\n \n     def draw(self, renderer):\n         raise RuntimeError(\"No draw method should be called\")\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..b77fe996fe\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,8 @@\n+import matplotlib\n+matplotlib.use('module://matplotlib_inline.backend_inline')\n+import matplotlib.pyplot as plt\n+from mpl_toolkits.axes_grid1.inset_locator import inset_axes\n+\n+fig, (ax, ax2) = plt.subplots(1, 2, figsize=[5.5, 2.8])\n+axins = inset_axes(ax, width=1.3, height=0.9)\n+plt.show()\n\\ No newline at end of file\n"}