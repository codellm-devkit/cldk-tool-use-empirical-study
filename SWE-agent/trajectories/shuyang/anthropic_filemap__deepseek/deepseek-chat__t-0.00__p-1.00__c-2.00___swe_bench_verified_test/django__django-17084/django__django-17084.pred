{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-17084", "model_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex a778cd413b..4006ca15dc 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -88,6 +88,11 @@ class Aggregate(Func):\n                         \"Cannot compute %s('%s'): '%s' is an aggregate\"\n                         % (c.name, name, name)\n                     )\n+                if hasattr(expr, \"contains_over_clause\") and expr.contains_over_clause:\n+                    raise FieldError(\n+                        \"Cannot compute %s over a window function\"\n+                        % c.name\n+                    )\n         if (default := c.default) is None:\n             return c\n         if hasattr(default, \"resolve_expression\"):\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..3992165321\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,49 @@\n+import os\n+import django\n+from django.conf import settings\n+\n+# Minimal Django settings\n+settings.configure(\n+    INSTALLED_APPS=[\n+        'django.contrib.contenttypes',\n+        'django.contrib.auth',\n+    ],\n+    DATABASES={\n+        'default': {\n+            'ENGINE': 'django.db.backends.sqlite3',\n+            'NAME': ':memory:',\n+        }\n+    }\n+)\n+django.setup()\n+\n+from django.db import models\n+from django.db.models import F, Sum, Window\n+from django.db.models.functions import Coalesce\n+\n+class TestModel(models.Model):\n+    DJR = models.FloatField()\n+    date = models.DateField()\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+# Create the table\n+from django.db import connection\n+with connection.schema_editor() as schema_editor:\n+    schema_editor.create_model(TestModel)\n+\n+# Simulate the queryset from the PR description\n+queryset = TestModel.objects.all()\n+queryset = queryset.annotate(\n+    cumul_DJR=Coalesce(Window(Sum(\"DJR\"), order_by=F(\"date\").asc()), 0.0)\n+)\n+\n+try:\n+    aggregate = queryset.aggregate(\n+        DJR_total=Sum(\"DJR\"),\n+        cumul_DJR_total=Sum(\"cumul_DJR\")\n+    )\n+    print(\"Aggregation successful:\", aggregate)\n+except Exception as e:\n+    print(\"Error:\", e)\n\\ No newline at end of file\n"}