{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "astropy__astropy-14508", "model_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 118bfced89..efdec8026c 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,10 +1299,30 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = f\"{value:.16G}\"\n-    if \".\" not in value_str and \"E\" not in value_str:\n-        value_str += \".0\"\n-    elif \"E\" in value_str:\n+    # First try the Python string representation\n+    value_str = str(value)\n+    if len(value_str) > 20 or (\".\" not in value_str and \"E\" not in value_str):\n+        # Fall back to the current formatting if the string is too long or lacks a decimal point\n+        value_str = f\"{value:.16G}\"\n+        if \".\" not in value_str and \"E\" not in value_str:\n+            value_str += \".0\"\n+        elif \"E\" in value_str:\n+            # On some Windows builds of Python (and possibly other platforms?) the\n+            # exponent is zero-padded out to, it seems, three digits.  Normalize\n+            # the format to pad only to two digits.\n+            significand, exponent = value_str.split(\"E\")\n+            exponent = exponent.lstrip(\"+\")\n+            if exponent.startswith(\"-\"):\n+                sign = \"-\"\n+                exponent = exponent[1:]\n+            else:\n+                sign = \"+\"\n+            exponent = exponent.lstrip(\"0\")\n+            if not exponent:\n+                exponent = \"0\"\n+            elif len(exponent) > 2:\n+                exponent = exponent[:2]\n+            value_str = f\"{significand}E{sign}{exponent}\"\n         # On some Windows builds of Python (and possibly other platforms?) the\n         # exponent is zero-padded out to, it seems, three digits.  Normalize\n         # the format to pad only to two digits.\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 65df5b1b77..d02c4f9eda 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,5 @@\n [build-system]\n-requires = [\"setuptools\",\n+requires = [\"setuptools==68.0.0\",\n             \"setuptools_scm>=6.2\",\n             \"wheel\",\n             \"cython==0.29.30\",\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..d7951a1a83\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,10 @@\n+from astropy.io import fits\n+\n+# Reproduce the issue\n+try:\n+    c = fits.Card('HIERARCH ESO IFM CL RADIUS', 0.009125, '[m] radius around actuator to avoid')\n+    print(f\"Original card: {c}\")\n+    print(f\"Repr: {repr(c)}\")\n+    print(f\"Str: {str(c)}\")\n+except Exception as e:\n+    print(f\"Error: {e}\")\n\\ No newline at end of file\ndiff --git a/test_edge_cases.py b/test_edge_cases.py\nnew file mode 100644\nindex 0000000000..060a3108cf\n--- /dev/null\n+++ b/test_edge_cases.py\n@@ -0,0 +1,17 @@\n+from astropy.io import fits\n+\n+# Test edge cases\n+test_cases = [\n+    (1.234567890123456789, \"Long decimal\"),\n+    (1.23e-10, \"Small number\"),\n+    (1.23e10, \"Large number\"),\n+    (1234567890.123456789, \"Very long decimal\"),\n+]\n+\n+for value, comment in test_cases:\n+    try:\n+        c = fits.Card('TEST', value, comment)\n+        print(f\"Value: {value}, Comment: {comment}\")\n+        print(f\"Card: {c}\")\n+    except Exception as e:\n+        print(f\"Error for {value}: {e}\")\n\\ No newline at end of file\n"}