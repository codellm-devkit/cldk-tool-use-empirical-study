{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-12489", "model_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 4ac1c2ef3b..5a9f4182db 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -924,13 +924,13 @@ def __new__(cls, *args, **kwargs):\n         obj._size = size\n         return obj\n \n-    @staticmethod\n-    def _af_new(perm):\n+    @classmethod\n+    def _af_new(cls, perm):\n         \"\"\"A method to produce a Permutation object from a list;\n         the list is bound to the _array_form attribute, so it must\n         not be modified; this method is meant for internal use only;\n         the list ``a`` is supposed to be generated as a temporary value\n-        in a method, so p = Perm._af_new(a) is the only object\n+        in a method, so p = cls._af_new(a) is the only object\n         to hold a reference to ``a``::\n \n         Examples\n@@ -944,7 +944,7 @@ def _af_new(perm):\n         Permutation([2, 1, 3, 0])\n \n         \"\"\"\n-        p = Basic.__new__(Perm, perm)\n+        p = Basic.__new__(cls, perm)\n         p._array_form = perm\n         p._size = len(perm)\n         return p\ndiff --git a/test_subclass.py b/test_subclass.py\nnew file mode 100644\nindex 0000000000..6d2b07b7ad\n--- /dev/null\n+++ b/test_subclass.py\n@@ -0,0 +1,17 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+class SubPermutation(Permutation):\n+    def custom_method(self):\n+        return \"Custom method called\"\n+\n+# Test subclassing\n+p = SubPermutation([0, 2, 1])\n+print(f\"Type of p: {type(p)}\")\n+print(f\"Is instance of SubPermutation: {isinstance(p, SubPermutation)}\")\n+print(f\"Is instance of Permutation: {isinstance(p, Permutation)}\")\n+print(f\"Custom method output: {p.custom_method()}\")\n+\n+# Test using in existing code\n+from sympy.combinatorics import PermutationGroup\n+group = PermutationGroup(p)\n+print(f\"Group element type: {type(group[0])}\")\n\\ No newline at end of file\n"}