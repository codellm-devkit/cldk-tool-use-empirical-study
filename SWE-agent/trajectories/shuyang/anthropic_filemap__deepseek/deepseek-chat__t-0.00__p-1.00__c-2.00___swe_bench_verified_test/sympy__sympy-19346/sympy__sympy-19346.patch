diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py
index c936a692c0..a9172b9f6d 100644
--- a/sympy/printing/repr.py
+++ b/sympy/printing/repr.py
@@ -250,6 +250,15 @@ def _print_tuple(self, expr):
         else:
             return "(%s)" % self.reprify(expr, ", ")
 
+    def _print_dict(self, expr):
+        items = []
+        for key, value in expr.items():
+            items.append("%s: %s" % (self._print(key), self._print(value)))
+        return "{%s}" % ", ".join(items)
+
+    def _print_set(self, expr):
+        return "{%s}" % self.reprify(expr, ", ")
+
     def _print_WildFunction(self, expr):
         return "%s('%s')" % (expr.__class__.__name__, expr.name)
 
diff --git a/test_srepr.py b/test_srepr.py
new file mode 100644
index 0000000000..b1357faeda
--- /dev/null
+++ b/test_srepr.py
@@ -0,0 +1,16 @@
+from sympy import srepr
+from sympy.abc import x, y
+
+# Test list and tuple (should already work)
+print("List:", srepr([x, y]))
+print("Tuple:", srepr((x, y)))
+
+# Test dict and set (should now work)
+print("Set:", srepr({x, y}))
+print("Dict:", srepr({x: y}))
+
+# Edge cases
+print("Empty Set:", srepr(set()))
+print("Empty Dict:", srepr({}))
+print("Nested Set:", srepr({x, frozenset({y})}))
+print("Nested Dict:", srepr({x: {y: x}}))
\ No newline at end of file
