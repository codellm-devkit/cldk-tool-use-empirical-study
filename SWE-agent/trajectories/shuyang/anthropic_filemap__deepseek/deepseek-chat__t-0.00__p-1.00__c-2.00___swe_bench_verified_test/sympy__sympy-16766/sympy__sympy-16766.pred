{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-16766", "model_patch": "diff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..9d14196b6e\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,3 @@\n+from sympy import *\n+p = IndexedBase(\"p\")\n+print(pycode(p[0]))\n\\ No newline at end of file\ndiff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex a3f0310735..a284707d60 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -357,6 +357,10 @@ def _print_Not(self, expr):\n         PREC = precedence(expr)\n         return self._operators['not'] + self.parenthesize(expr.args[0], PREC)\n \n+    def _print_Indexed(self, expr):\n+        base, *index = expr.args\n+        return \"{}[{}]\".format(str(base), \", \".join([self._print(ind) for ind in index]))\n+\n \n for k in PythonCodePrinter._kf:\n     setattr(PythonCodePrinter, '_print_%s' % k, _print_known_func)\ndiff --git a/test_edge_cases.py b/test_edge_cases.py\nnew file mode 100644\nindex 0000000000..806cb7e2fe\n--- /dev/null\n+++ b/test_edge_cases.py\n@@ -0,0 +1,13 @@\n+from sympy import *\n+p = IndexedBase(\"p\")\n+q = IndexedBase(\"q\")\n+i = symbols(\"i\")\n+\n+# Multiple indices\n+print(pycode(p[0, 1, 2]))\n+\n+# Nested indexed expressions\n+print(pycode(p[q[0]]))\n+\n+# Non-integer indices\n+print(pycode(p[i]))\n\\ No newline at end of file\n"}