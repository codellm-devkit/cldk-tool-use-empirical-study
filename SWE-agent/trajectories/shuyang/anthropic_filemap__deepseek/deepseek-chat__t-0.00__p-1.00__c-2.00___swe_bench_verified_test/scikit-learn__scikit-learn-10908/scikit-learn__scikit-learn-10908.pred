{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "scikit-learn__scikit-learn-10908", "model_patch": "diff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 000000000..825a776fc\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,3 @@\n+from sklearn.feature_extraction.text import CountVectorizer\n+vectorizer = CountVectorizer(vocabulary=['and', 'document', 'first', 'is', 'one', 'second', 'the', 'third', 'this'])\n+print(vectorizer.get_feature_names())\ndiff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 9b1ebd632..fddb17383 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -300,8 +300,11 @@ class VectorizerMixin(object):\n \n     def _check_vocabulary(self):\n         \"\"\"Check if vocabulary is empty or missing (not fit-ed)\"\"\"\n-        msg = \"%(name)s - Vocabulary wasn't fitted.\"\n-        check_is_fitted(self, 'vocabulary_', msg=msg),\n+        if hasattr(self, 'vocabulary') and not hasattr(self, 'vocabulary_'):\n+            self._validate_vocabulary()\n+        else:\n+            msg = \"%(name)s - Vocabulary wasn't fitted.\"\n+            check_is_fitted(self, 'vocabulary_', msg=msg),\n \n         if len(self.vocabulary_) == 0:\n             raise ValueError(\"Vocabulary is empty\")\n"}