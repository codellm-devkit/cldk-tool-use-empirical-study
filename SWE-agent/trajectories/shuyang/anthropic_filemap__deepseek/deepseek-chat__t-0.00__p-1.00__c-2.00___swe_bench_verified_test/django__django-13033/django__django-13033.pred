{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex abbb1e37cb..5976586f4b 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -279,13 +279,12 @@ class SQLCompiler:\n         \"\"\"\n         if self.query.extra_order_by:\n             ordering = self.query.extra_order_by\n-        elif not self.query.default_ordering:\n-            ordering = self.query.order_by\n         elif self.query.order_by:\n             ordering = self.query.order_by\n-        elif self.query.get_meta().ordering:\n-            ordering = self.query.get_meta().ordering\n-            self._meta_ordering = ordering\n+            self.query.default_ordering = False\n+            self._meta_ordering = None\n+        elif not self.query.default_ordering:\n+            ordering = []\n         else:\n             ordering = []\n         if self.query.standard_ordering:\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex d65141b834..ed3fce40a4 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1605,18 +1605,20 @@ class Query(BaseExpression):\n                 nullable = self.is_nullable(join.join_field)\n             else:\n                 nullable = True\n-            connection = Join(\n-                opts.db_table, alias, table_alias, INNER, join.join_field,\n-                nullable, filtered_relation=filtered_relation,\n-            )\n-            reuse = can_reuse if join.m2m or reuse_with_filtered_relation else None\n-            alias = self.join(\n-                connection, reuse=reuse,\n-                reuse_with_filtered_relation=reuse_with_filtered_relation,\n-            )\n-            joins.append(alias)\n-            if filtered_relation:\n-                filtered_relation.path = joins[:]\n+            # Skip extra join for self-referencing foreign keys with _id suffix\n+            if not (join.join_field.remote_field.model == join.join_field.model and names[-1].endswith('_id')):\n+                connection = Join(\n+                    opts.db_table, alias, table_alias, INNER, join.join_field,\n+                    nullable, filtered_relation=filtered_relation,\n+                )\n+                reuse = can_reuse if join.m2m or reuse_with_filtered_relation else None\n+                alias = self.join(\n+                    connection, reuse=reuse,\n+                    reuse_with_filtered_relation=reuse_with_filtered_relation,\n+                )\n+                joins.append(alias)\n+                if filtered_relation:\n+                    filtered_relation.path = joins[:]\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n \n     def trim_joins(self, targets, joins, path):\n"}