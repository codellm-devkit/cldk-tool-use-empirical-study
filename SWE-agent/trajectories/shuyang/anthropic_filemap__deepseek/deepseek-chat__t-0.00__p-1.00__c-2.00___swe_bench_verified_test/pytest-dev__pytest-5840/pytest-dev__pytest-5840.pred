{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/config/findpaths.py b/src/_pytest/config/findpaths.py\nindex ec991316a..fe7bc9847 100644\n--- a/src/_pytest/config/findpaths.py\n+++ b/src/_pytest/config/findpaths.py\n@@ -1,4 +1,6 @@\n import os\n+import sys\n+from os.path import normcase\n \n import py\n \n@@ -8,6 +10,8 @@ from _pytest.outcomes import fail\n \n def exists(path, ignore=EnvironmentError):\n     try:\n+        if sys.platform.startswith(\"win\"):\n+            path = py.path.local(normcase(str(path)))\n         return path.check()\n     except ignore:\n         return False\ndiff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 913a93bc0..60e0173b0 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -498,6 +498,9 @@ class Module(nodes.File, PyCollector):\n         # we assume we are only called once per module\n         importmode = self.config.getoption(\"--import-mode\")\n         try:\n+            if sys.platform.startswith(\"win\"):\n+                from _pytest.pathlib import unique_path\n+                self.fspath = unique_path(self.fspath)\n             mod = self.fspath.pyimport(ensuresyspath=importmode)\n         except SyntaxError:\n             raise self.CollectError(\n"}