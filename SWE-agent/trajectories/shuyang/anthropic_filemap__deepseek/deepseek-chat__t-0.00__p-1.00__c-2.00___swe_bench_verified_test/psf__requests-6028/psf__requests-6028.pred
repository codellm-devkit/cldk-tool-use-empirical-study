{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex fe22ff45..a633ef51 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -303,6 +303,12 @@ class HTTPAdapter(BaseAdapter):\n \n         if proxy:\n             proxy = prepend_scheme_if_needed(proxy, 'http')\n+            # Ensure proxy URL includes credentials if provided\n+            if '@' not in proxy and 'http://' in proxy:\n+                from .utils import get_auth_from_url\n+                auth = get_auth_from_url(proxy)\n+                if auth[0]:\n+                    proxy = proxy.replace('http://', f'http://{auth[0]}:{auth[1]}@')\n             proxy_url = parse_url(proxy)\n             if not proxy_url.host:\n                 raise InvalidProxyURL(\"Please check proxy URL. It is malformed\"\ndiff --git a/test_proxy_auth.py b/test_proxy_auth.py\nnew file mode 100644\nindex 00000000..60059872\n--- /dev/null\n+++ b/test_proxy_auth.py\n@@ -0,0 +1,9 @@\n+import requests\n+\n+proxies = {\n+    'http': 'http://your-proxy-address:port',\n+    'https': 'http://your-proxy-address:port'\n+}\n+\n+r = requests.get('https://example.org/', proxies=proxies)\n+print(r.status_code)\n\\ No newline at end of file\n"}