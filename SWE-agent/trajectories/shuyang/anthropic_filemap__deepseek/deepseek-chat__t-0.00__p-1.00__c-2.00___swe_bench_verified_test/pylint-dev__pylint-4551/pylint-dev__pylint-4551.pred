{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/classes.dot b/classes.dot\nnew file mode 100644\nindex 000000000..b9fbf89ba\n--- /dev/null\n+++ b/classes.dot\n@@ -0,0 +1,5 @@\n+digraph \"classes\" {\n+charset=\"utf-8\"\n+rankdir=BT\n+\"0\" [label=\"{C|a : NoneType\\l|}\", shape=\"record\"];\n+}\ndiff --git a/pylint/pyreverse/inspector.py b/pylint/pyreverse/inspector.py\nindex 8fa122022..b2e6ea73f 100644\n--- a/pylint/pyreverse/inspector.py\n+++ b/pylint/pyreverse/inspector.py\n@@ -230,9 +230,27 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n         handle instance_attrs_type\n         \"\"\"\n         try:\n-            values = set(node.infer())\n-            current = set(parent.instance_attrs_type[node.attrname])\n-            parent.instance_attrs_type[node.attrname] = list(current | values)\n+            # Traverse the AST to find the method containing the node\n+            current = node\n+            while current and not isinstance(current, astroid.FunctionDef):\n+                current = getattr(current, \"parent\", None)\n+            if current and isinstance(current, astroid.FunctionDef):\n+                # Look for the parameter in the method's arguments\n+                for arg in current.args.args:\n+                    if arg.name == node.attrname and hasattr(arg, \"annotation\") and arg.annotation is not None:\n+                        # Use the type annotation from the method's argument\n+                        parent.instance_attrs_type[node.attrname] = [arg.annotation]\n+                        break\n+                else:\n+                    # Fall back to inferring the type from the value\n+                    values = set(node.infer())\n+                    current = set(parent.instance_attrs_type[node.attrname])\n+                    parent.instance_attrs_type[node.attrname] = list(current | values)\n+            else:\n+                # Fall back to inferring the type from the value\n+                values = set(node.infer())\n+                current = set(parent.instance_attrs_type[node.attrname])\n+                parent.instance_attrs_type[node.attrname] = list(current | values)\n         except astroid.InferenceError:\n             pass\n \ndiff --git a/test_type_hints.py b/test_type_hints.py\nnew file mode 100644\nindex 000000000..a90f4b2dc\n--- /dev/null\n+++ b/test_type_hints.py\n@@ -0,0 +1,3 @@\n+class C(object):\n+    def __init__(self, a: str = None):\n+        self.a = a\n"}