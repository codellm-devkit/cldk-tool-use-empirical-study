diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
index 97cde62e26..f23ff8f973 100644
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -174,6 +174,10 @@ def _eval_det_bareiss(self):
         http://www.eecis.udel.edu/~saunders/papers/sffge/it5.ps.
         """
 
+        # Check if the matrix contains symbolic entries
+        if any(any(not entry.is_Number for entry in row) for row in self.tolist()):
+            return self._eval_det_lu()
+
         # XXX included as a workaround for issue #12362.  Should use `_find_reasonable_pivot` instead
         def _find_pivot(l):
             for pos,val in enumerate(l):
diff --git a/test_det.py b/test_det.py
new file mode 100644
index 0000000000..da845efe10
--- /dev/null
+++ b/test_det.py
@@ -0,0 +1 @@
+from sympy import *; from sympy.abc import a; f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)])); print(f(1)); print(f(2)); print(f(3)); print(f(4)); print(f(5)); print(f(6))
