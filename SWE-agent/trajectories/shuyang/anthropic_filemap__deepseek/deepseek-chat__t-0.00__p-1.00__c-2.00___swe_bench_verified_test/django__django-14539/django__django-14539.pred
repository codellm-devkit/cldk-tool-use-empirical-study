{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 3bc02b8dd3..63db353a36 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -278,13 +278,12 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n                     trail = closing + trail\n                     trimmed_something = True\n             # Trim trailing punctuation (after trimming wrapping punctuation,\n-            # as encoded entities contain ';'). Unescape entities to avoid\n-            # breaking them by removing ';'.\n-            middle_unescaped = html.unescape(middle)\n-            stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n-            if middle_unescaped != stripped:\n+            # as encoded entities contain ';'). Do not unescape entities to preserve\n+            # their structure.\n+            stripped = middle.rstrip(TRAILING_PUNCTUATION_CHARS)\n+            if middle != stripped:\n                 trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                middle = middle[:len(stripped)]\n                 trimmed_something = True\n         return lead, middle, trail\n \n@@ -317,9 +316,9 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             url = None\n             nofollow_attr = ' rel=\"nofollow\"' if nofollow else ''\n             if simple_url_re.match(middle):\n-                url = smart_urlquote(html.unescape(middle))\n+                url = smart_urlquote(middle)\n             elif simple_url_2_re.match(middle):\n-                url = smart_urlquote('http://%s' % html.unescape(middle))\n+                url = smart_urlquote('http://%s' % middle)\n             elif ':' not in middle and is_email_simple(middle):\n                 local, domain = middle.rsplit('@', 1)\n                 try:\ndiff --git a/reproduce_urlize.py b/reproduce_urlize.py\nnew file mode 100644\nindex 0000000000..15f0a3671e\n--- /dev/null\n+++ b/reproduce_urlize.py\n@@ -0,0 +1,5 @@\n+from django.utils.html import urlize\n+\n+# Example from PR description\n+result = urlize('Search for google.com/?q=1&lt! and see.')\n+print(result)\n\\ No newline at end of file\ndiff --git a/test_edge_cases.py b/test_edge_cases.py\nnew file mode 100644\nindex 0000000000..5a2e469b29\n--- /dev/null\n+++ b/test_edge_cases.py\n@@ -0,0 +1,15 @@\n+from django.utils.html import urlize\n+\n+# Test cases\n+test_cases = [\n+    ('Search for google.com/?q=1&amp! and see.', 'Search for <a href=\"http://google.com/?q=1%26\">google.com/?q=1&amp</a>! and see.'),\n+    ('Visit example.com/?q=1&lt, now.', 'Visit <a href=\"http://example.com/?q=1%3C\">example.com/?q=1&lt</a>, now.'),\n+    ('Check out example.com/?q=1&lt?', 'Check out <a href=\"http://example.com/?q=1%3C\">example.com/?q=1&lt</a>?')\n+]\n+\n+for input_str, expected in test_cases:\n+    result = urlize(input_str)\n+    assert result == expected, f\"Test failed for input '{input_str}':\\nExpected: {expected}\\nGot: {result}\"\n+    print(f\"Test passed for input '{input_str}'\")\n+\n+print(\"All edge case tests passed!\")\n\\ No newline at end of file\n"}