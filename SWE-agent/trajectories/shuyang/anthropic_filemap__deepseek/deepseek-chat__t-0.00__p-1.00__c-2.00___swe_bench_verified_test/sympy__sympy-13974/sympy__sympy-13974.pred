{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-13974", "model_patch": "diff --git a/reproduce_tensor_product_issue.py b/reproduce_tensor_product_issue.py\nnew file mode 100644\nindex 0000000000..708588a8b9\n--- /dev/null\n+++ b/reproduce_tensor_product_issue.py\n@@ -0,0 +1,16 @@\n+from sympy import *\n+from sympy.physics.quantum import TensorProduct as tp\n+from sympy.physics.quantum import tensor_product_simp as tps\n+from sympy.physics.paulialgebra import Pauli\n+\n+a = Symbol('a', commutative=False)\n+\n+# Example 1: (1x1)**2\n+t1 = tp(1,1)*tp(1,1)\n+print(\"Original t1:\", t1)\n+print(\"Simplified t1:\", tps(t1))\n+\n+# Example 2: (1xsigma3)**2\n+t2 = tp(1,Pauli(3))*tp(1,Pauli(3))\n+print(\"Original t2:\", t2)\n+print(\"Simplified t2:\", tps(t2))\n\\ No newline at end of file\ndiff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 9dd10d219e..3e7ca140ca 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -382,7 +382,11 @@ def tensor_product_simp(e, **hints):\n     if isinstance(e, Add):\n         return Add(*[tensor_product_simp(arg) for arg in e.args])\n     elif isinstance(e, Pow):\n-        return tensor_product_simp(e.base) ** e.exp\n+        base = tensor_product_simp(e.base)\n+        if isinstance(base, TensorProduct):\n+            return TensorProduct(*[arg ** e.exp for arg in base.args])\n+        else:\n+            return base ** e.exp\n     elif isinstance(e, Mul):\n         return tensor_product_simp_Mul(e)\n     elif isinstance(e, Commutator):\n"}