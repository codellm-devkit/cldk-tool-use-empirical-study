{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-14623", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex da2dea6f57..3f87d96cff 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3591,13 +3591,7 @@ class _AxesBase(martist.Artist):\n         >>> set_ylim(bottom, top)\n         >>> set_ylim((bottom, top))\n         >>> bottom, top = set_ylim(bottom, top)\n-\n-        One limit may be left unchanged.\n-\n-        >>> set_ylim(top=top_lim)\n-\n-        Limits may be passed in reverse order to flip the direction of\n-        the y-axis. For example, suppose ``y`` represents depth of the\n+        \"\"\"\n         ocean in m. The y-axis limits might be set like the following\n         so 5000 m depth is at the bottom of the plot and the surface,\n         0 m, is at the top.\ndiff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py\nindex b482a664b7..3bda3505ea 100644\n--- a/lib/matplotlib/scale.py\n+++ b/lib/matplotlib/scale.py\n@@ -419,14 +419,19 @@ class LogScale(ScaleBase):\n \n     def limit_range_for_scale(self, vmin, vmax, minpos):\n         \"\"\"\n-        Limit the domain to positive values.\n+        Limit the domain to positive values and respect inversion.\n         \"\"\"\n         if not np.isfinite(minpos):\n             minpos = 1e-300  # This value should rarely if ever\n                              # end up with a visible effect.\n \n-        return (minpos if vmin <= 0 else vmin,\n-                minpos if vmax <= 0 else vmax)\n+        vmin = minpos if vmin <= 0 else vmin\n+        vmax = minpos if vmax <= 0 else vmax\n+\n+        # Ensure the order of vmin and vmax is preserved to respect inversion\n+        if vmin > vmax:\n+            return vmax, vmin\n+        return vmin, vmax\n \n \n class FuncScaleLog(LogScale):\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..f7f7c92380\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,12 @@\n+import numpy as np\n+import matplotlib.pyplot as plt\n+\n+y = np.linspace(1000e2, 1, 100)\n+x = np.exp(-np.linspace(0, 1, y.size))\n+\n+for yscale in (\"linear\", \"log\"):\n+    fig, ax = plt.subplots()\n+    ax.plot(x, y)\n+    ax.set_yscale(yscale)\n+    ax.set_ylim(y.max(), y.min())\n+plt.show()\n"}