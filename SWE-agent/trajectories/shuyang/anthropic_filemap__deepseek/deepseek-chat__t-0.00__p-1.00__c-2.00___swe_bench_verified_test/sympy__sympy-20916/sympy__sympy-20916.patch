diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ef1bea802d
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,3 @@
+from sympy import *
+print(S(0.0) == S.false)
+print(S.false == S(0.0))
diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py
index 79f6a7d165..681df38c74 100644
--- a/sympy/core/numbers.py
+++ b/sympy/core/numbers.py
@@ -1387,7 +1387,9 @@ def __eq__(self, other):
         except SympifyError:
             return NotImplemented
         if not self:
-            return not other
+            if isinstance(other, Boolean):
+                return not other
+            return False
         if isinstance(other, Boolean):
             return False
         if other.is_NumberSymbol:
diff --git a/sympy/logic/boolalg.py b/sympy/logic/boolalg.py
index fbcba1f8d4..df75a418b2 100644
--- a/sympy/logic/boolalg.py
+++ b/sympy/logic/boolalg.py
@@ -396,6 +396,16 @@ def __bool__(self):
     def __hash__(self):
         return hash(False)
 
+    def __eq__(self, other):
+        from sympy.core.numbers import Float
+        try:
+            other = _sympify(other)
+        except SympifyError:
+            return NotImplemented
+        if isinstance(other, Float):
+            return not other
+        return super().__eq__(other)
+
     @property
     def negated(self):
         return S.true
