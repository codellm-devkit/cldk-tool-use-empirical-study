diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index e10a5bb6d9..95ebb3d1ad 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -227,14 +227,11 @@ class FileField(Field):
     def __init__(self, verbose_name=None, name=None, upload_to='', storage=None, **kwargs):
         self._primary_key_set_explicitly = 'primary_key' in kwargs
 
-        self.storage = storage or default_storage
-        if callable(self.storage):
-            self.storage = self.storage()
-            if not isinstance(self.storage, Storage):
-                raise TypeError(
-                    "%s.storage must be a subclass/instance of %s.%s"
-                    % (self.__class__.__qualname__, Storage.__module__, Storage.__qualname__)
-                )
+        if callable(storage):
+            self._storage_callable = storage
+            self.storage = storage()
+        else:
+            self.storage = storage or default_storage
         self.upload_to = upload_to
 
         kwargs.setdefault('max_length', 100)
@@ -278,7 +275,9 @@ class FileField(Field):
         if kwargs.get("max_length") == 100:
             del kwargs["max_length"]
         kwargs['upload_to'] = self.upload_to
-        if self.storage is not default_storage:
+        if hasattr(self, '_storage_callable'):
+            kwargs['storage'] = self._storage_callable
+        elif self.storage is not default_storage:
             kwargs['storage'] = self.storage
         return name, path, args, kwargs
 
