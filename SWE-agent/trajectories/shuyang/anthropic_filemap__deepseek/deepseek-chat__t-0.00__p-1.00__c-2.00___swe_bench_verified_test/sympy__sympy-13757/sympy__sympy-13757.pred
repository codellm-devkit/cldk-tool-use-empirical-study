{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-13757", "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex d5ac051f63..9fa103aff5 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -4051,10 +4051,16 @@ def __mul__(f, g):\n     def __rmul__(f, g):\n         if not g.is_Poly:\n             try:\n-                g = f.__class__(g, *f.gens)\n-            except PolynomialError:\n-                return g*f.as_expr()\n-\n+                domain = f.get_domain()\n+                g = domain.convert(g)\n+                return f.mul_ground(g)\n+            except (TypeError, CoercionFailed):\n+                # Convert f to an expression, multiply, and attempt to convert back to Poly\n+                result = g * f.as_expr()\n+                try:\n+                    return f.__class__(result, *f.gens)\n+                except PolynomialError:\n+                    return result\n         return g.mul(f)\n \n     @_sympifyit('n', NotImplemented)\ndiff --git a/test_poly_multiplication.py b/test_poly_multiplication.py\nnew file mode 100644\nindex 0000000000..7e6eb7c661\n--- /dev/null\n+++ b/test_poly_multiplication.py\n@@ -0,0 +1,10 @@\n+from sympy import Poly, Symbol, S\n+\n+x = Symbol('x')\n+\n+# Test cases from the PR description\n+print(\"Poly(x)*x:\", Poly(x)*x)\n+print(\"x*Poly(x):\", x*Poly(x))\n+print(\"-2*Poly(x):\", -2*Poly(x))\n+print(\"S(-2)*Poly(x):\", S(-2)*Poly(x))\n+print(\"Poly(x)*S(-2):\", Poly(x)*S(-2))\n\\ No newline at end of file\n"}