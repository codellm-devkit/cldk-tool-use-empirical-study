diff --git a/setup.py b/setup.py
index 5e822fe9b..77b63df38 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index f8e4be999..b8eeac9fc 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1067,9 +1067,13 @@ class DocstringSignatureMixin:
             self._new_docstrings[i] = prepare_docstring('\n'.join(doclines[1:]),
                                                         tabsize=tab_width)
             result = args, retann
-            # don't look any further
-            break
-        return result
+            # Collect all matching signatures
+            if result is not None:
+                if not hasattr(self, '_all_signatures'):
+                    self._all_signatures = []
+                self._all_signatures.append(result)
+        # Return the first signature for backward compatibility
+        return self._all_signatures[0] if hasattr(self, '_all_signatures') else None
 
     def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:
         if encoding is not None:
@@ -1087,7 +1091,12 @@ class DocstringSignatureMixin:
             # the feature is enabled
             result = self._find_signature()
             if result is not None:
-                self.args, self.retann = result
+                if hasattr(self, '_all_signatures') and len(self._all_signatures) > 1:
+                    # Combine all signatures for overloaded methods
+                    self.args = '\n'.join([args for args, _ in self._all_signatures])
+                    self.retann = self._all_signatures[-1][1]  # Use the last return annotation
+                else:
+                    self.args, self.retann = result
         return super().format_signature(**kwargs)  # type: ignore
 
 
diff --git a/tox.ini b/tox.ini
index d9f040544..bf39854b6 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
