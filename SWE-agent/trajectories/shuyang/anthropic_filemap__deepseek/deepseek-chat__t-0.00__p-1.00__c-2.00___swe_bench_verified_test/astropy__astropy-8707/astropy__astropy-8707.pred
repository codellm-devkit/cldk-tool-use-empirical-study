{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "astropy__astropy-8707", "model_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 8c1ac5d738..9fb54d511e 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -547,11 +547,19 @@ class Card(_Verify):\n     @classmethod\n     def fromstring(cls, image):\n         \"\"\"\n-        Construct a `Card` object from a (raw) string. It will pad the string\n+        Construct a `Card` object from a (raw) string or bytes. It will pad the string\n         if it is not the length of a card image (80 columns).  If the card\n         image is longer than 80 columns, assume it contains ``CONTINUE``\n         card(s).\n+\n+        Parameters\n+        ----------\n+        image : str or bytes\n+            The card image as a string or bytes. If bytes, it is assumed to be\n+            ASCII-encoded.\n         \"\"\"\n+        if isinstance(image, bytes):\n+            image = image.decode('ascii')\n \n         card = cls()\n         card._image = _pad(image)\ndiff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py\nindex ad07e6d52d..9ae83be643 100644\n--- a/astropy/io/fits/header.py\n+++ b/astropy/io/fits/header.py\n@@ -334,8 +334,9 @@ class Header:\n \n         Parameters\n         ----------\n-        data : str\n-           String containing the entire header.\n+        data : str or bytes\n+           String or bytes containing the entire header. If bytes, it is assumed\n+           to be ASCII-encoded.\n \n         sep : str, optional\n             The string separating cards from each other, such as a newline.  By\n@@ -347,6 +348,8 @@ class Header:\n         header\n             A new `Header` instance.\n         \"\"\"\n+        if isinstance(data, bytes):\n+            data = data.decode('ascii')\n \n         cards = []\n \n"}