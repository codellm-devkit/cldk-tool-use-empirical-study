{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15382", "model_patch": "diff --git a/__init__.py b/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 81f8f79c71..7a8c86e862 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1210,17 +1210,23 @@ class Exists(Subquery):\n         return clone\n \n     def as_sql(self, compiler, connection, template=None, **extra_context):\n-        query = self.query.exists(using=connection.alias)\n-        sql, params = super().as_sql(\n-            compiler,\n-            connection,\n-            template=template,\n-            query=query,\n-            **extra_context,\n-        )\n-        if self.negated:\n-            sql = 'NOT {}'.format(sql)\n-        return sql, params\n+        try:\n+            query = self.query.exists(using=connection.alias)\n+            sql, params = super().as_sql(\n+                compiler,\n+                connection,\n+                template=template,\n+                query=query,\n+                **extra_context,\n+            )\n+            if self.negated:\n+                sql = 'NOT {}'.format(sql)\n+            return sql, params\n+        except EmptyResultSet:\n+            if self.negated:\n+                # Return a dummy SQL for negated Exists with empty queryset\n+                return '1=1', []\n+            raise\n \n     def select_format(self, compiler, sql, params):\n         # Wrap EXISTS() with a CASE WHEN expression if a database backend\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex e3fdea6f3a..15acdbb5db 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1290,6 +1290,12 @@ class Query(BaseExpression):\n             condition = filter_expr.resolve_expression(self, allow_joins=allow_joins)\n             if not isinstance(condition, Lookup):\n                 condition = self.build_lookup(['exact'], condition, True)\n+            # Preserve WHERE block for negated Exists with empty querysets\n+            if isinstance(filter_expr, Exists) and current_negated:\n+                try:\n+                    condition.rhs.as_sql(self, self.connection)\n+                except EmptyResultSet:\n+                    return WhereNode([condition], connector=AND), []\n             return WhereNode([condition], connector=AND), []\n         arg, value = filter_expr\n         if not arg:\n"}