diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 61f88401ab..6ee19110a2 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -407,13 +407,19 @@ class BaseDatabaseSchemaEditor:
             model, columns, exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs
         )
-        if len(constraint_names) != 1:
+        # Filter constraints to match the type being deleted (index or unique)
+        matching_constraints = [
+            name for name in constraint_names
+            if (constraint_kwargs.get('index') and name.endswith('_idx')) or
+               (constraint_kwargs.get('unique') and name.endswith('_uniq'))
+        ]
+        if len(matching_constraints) != 1:
             raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
-                len(constraint_names),
+                len(matching_constraints),
                 model._meta.db_table,
                 ", ".join(columns),
             ))
-        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
+        self.execute(self._delete_constraint_sql(sql, model, matching_constraints[0]))
 
     def alter_db_table(self, model, old_db_table, new_db_table):
         """Rename the table a model points to."""
diff --git a/reproduce/migrations/0001_initial.py b/reproduce/migrations/0001_initial.py
new file mode 100644
index 0000000000..e218a2581c
--- /dev/null
+++ b/reproduce/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 3.1 on 2025-05-21 21:40
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='TestModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field1', models.CharField(max_length=100)),
+                ('field2', models.CharField(max_length=100)),
+            ],
+            options={
+                'unique_together': {('field1', 'field2')},
+                'index_together': {('field1', 'field2')},
+            },
+        ),
+    ]
diff --git a/reproduce/migrations/0002_delete_index_together.py b/reproduce/migrations/0002_delete_index_together.py
new file mode 100644
index 0000000000..1e2c5485b9
--- /dev/null
+++ b/reproduce/migrations/0002_delete_index_together.py
@@ -0,0 +1,13 @@
+# Generated by Django 3.1 on 2025-05-21 21:40
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('reproduce', '0001_initial'),
+    ]
+
+    operations = [
+    ]
diff --git a/reproduce/migrations/__init__.py b/reproduce/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce/reproduce_issue.py b/reproduce/reproduce_issue.py
new file mode 100644
index 0000000000..4bd3ca4498
--- /dev/null
+++ b/reproduce/reproduce_issue.py
@@ -0,0 +1,64 @@
+import os
+import sys
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'reproduce',
+    ],
+)
+
+# Ensure Django is set up
+import django
+django.setup()
+
+# Define the model
+from django.db import models
+
+class TestModel(models.Model):
+    field1 = models.CharField(max_length=100)
+    field2 = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'reproduce'
+        index_together = [['field1', 'field2']]
+        unique_together = [['field1', 'field2']]
+
+# Create and apply migrations
+def setup():
+    from django.core.management import call_command
+    from django.db import connection
+
+    # Create the initial migration
+    call_command('makemigrations', 'reproduce', interactive=False)
+    
+    # Apply migrations
+    call_command('migrate', interactive=False)
+
+# Delete index_together
+def delete_index_together():
+    from django.core.management import call_command
+    from django.db import connection
+
+    # Generate the migration to delete index_together
+    call_command('makemigrations', 'reproduce', '--empty', '--name', 'delete_index_together', interactive=False)
+    
+    # Apply the migration
+    call_command('migrate', interactive=False)
+
+if __name__ == '__main__':
+    execute_from_command_line(sys.argv)
+    setup()
+    delete_index_together()
+    print("Successfully deleted index_together without errors!")
\ No newline at end of file
