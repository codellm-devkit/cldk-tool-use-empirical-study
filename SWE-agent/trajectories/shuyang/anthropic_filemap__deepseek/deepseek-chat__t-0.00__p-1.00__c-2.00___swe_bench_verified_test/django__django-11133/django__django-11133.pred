{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-11133", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 6a84e193ba..301d487039 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -309,7 +309,9 @@ class HttpResponse(HttpResponseBase):\n     @content.setter\n     def content(self, value):\n         # Consume iterators upon assignment to allow repeated iteration.\n-        if hasattr(value, '__iter__') and not isinstance(value, (bytes, str)):\n+        if isinstance(value, memoryview):\n+            content = value.tobytes()\n+        elif hasattr(value, '__iter__') and not isinstance(value, (bytes, str)):\n             content = b''.join(self.make_bytes(chunk) for chunk in value)\n             if hasattr(value, 'close'):\n                 try:\ndiff --git a/reproduce_httpresponse.py b/reproduce_httpresponse.py\nnew file mode 100644\nindex 0000000000..9c57a0da68\n--- /dev/null\n+++ b/reproduce_httpresponse.py\n@@ -0,0 +1,10 @@\n+import os\n+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\n+from django.conf import settings\n+settings.configure()\n+\n+from django.http import HttpResponse\n+\n+# Empty memoryview content\n+response = HttpResponse(memoryview(b\"\"))\n+print(\"Empty memoryview content:\", response.content)\n\\ No newline at end of file\n"}