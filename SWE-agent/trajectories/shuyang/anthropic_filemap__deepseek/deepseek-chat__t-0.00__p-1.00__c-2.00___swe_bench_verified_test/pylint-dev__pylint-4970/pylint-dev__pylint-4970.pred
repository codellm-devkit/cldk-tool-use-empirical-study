{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pylint-dev__pylint-4970", "model_patch": "diff --git a/.pylintrc b/.pylintrc\nnew file mode 100644\nindex 000000000..e05c164ce\n--- /dev/null\n+++ b/.pylintrc\n@@ -0,0 +1,2 @@\n+[similar]\n+min-similarity-lines=0\n\\ No newline at end of file\ndiff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex c65b1c893..62cd004ba 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -471,6 +471,8 @@ class Similar:\n         Last regroups all successive couples in a bigger one. It allows to take into account common chunk of lines that have more\n         than the minimal number of successive lines required.\n         \"\"\"\n+        if self.min_lines <= 0:\n+            return\n         hash_to_index_1: HashToIndex_T\n         hash_to_index_2: HashToIndex_T\n         index_to_lines_1: IndexToLines_T\ndiff --git a/test_duplicate_code.py b/test_duplicate_code.py\nnew file mode 100644\nindex 000000000..4f8c6a155\n--- /dev/null\n+++ b/test_duplicate_code.py\n@@ -0,0 +1,7 @@\n+def foo():\n+    print(\"This is a duplicate line.\")\n+    print(\"This is a duplicate line.\")\n+\n+def bar():\n+    print(\"This is a duplicate line.\")\n+    print(\"This is a duplicate line.\")\n\\ No newline at end of file\n"}