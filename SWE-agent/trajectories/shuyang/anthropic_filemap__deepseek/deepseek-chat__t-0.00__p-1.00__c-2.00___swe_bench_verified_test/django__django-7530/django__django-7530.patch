diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index a778cd413b..4006ca15dc 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -88,6 +88,11 @@ class Aggregate(Func):
                         "Cannot compute %s('%s'): '%s' is an aggregate"
                         % (c.name, name, name)
                     )
+                if hasattr(expr, "contains_over_clause") and expr.contains_over_clause:
+                    raise FieldError(
+                        "Cannot compute %s over a window function"
+                        % c.name
+                    )
         if (default := c.default) is None:
             return c
         if hasattr(default, "resolve_expression"):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..3992165321
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,49 @@
+import os
+import django
+from django.conf import settings
+
+# Minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+django.setup()
+
+from django.db import models
+from django.db.models import F, Sum, Window
+from django.db.models.functions import Coalesce
+
+class TestModel(models.Model):
+    DJR = models.FloatField()
+    date = models.DateField()
+
+    class Meta:
+        app_label = 'test_app'
+
+# Create the table
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(TestModel)
+
+# Simulate the queryset from the PR description
+queryset = TestModel.objects.all()
+queryset = queryset.annotate(
+    cumul_DJR=Coalesce(Window(Sum("DJR"), order_by=F("date").asc()), 0.0)
+)
+
+try:
+    aggregate = queryset.aggregate(
+        DJR_total=Sum("DJR"),
+        cumul_DJR_total=Sum("cumul_DJR")
+    )
+    print("Aggregation successful:", aggregate)
+except Exception as e:
+    print("Error:", e)
\ No newline at end of file
