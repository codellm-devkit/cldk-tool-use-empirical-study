diff --git a/sympy/parsing/latex/_antlr/latexlexer.py b/sympy/parsing/latex/_antlr/latexlexer.py
index 29eb4b462a..f15740e7f6 100644
--- a/sympy/parsing/latex/_antlr/latexlexer.py
+++ b/sympy/parsing/latex/_antlr/latexlexer.py
@@ -1,6 +1,16 @@
 
 # encoding: utf-8
 
+# *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
+#
+# Generated from ../LaTeX.g4, derived from latex2sympy
+#     latex2sympy is licensed under the MIT license
+#     https://github.com/augustt198/latex2sympy/blob/master/LICENSE.txt
+#
+# Generated with antlr4
+#    antlr4 is licensed under the BSD-3-Clause License
+#    https://github.com/antlr/antlr4/blob/master/LICENSE.txt
+
 # *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
 #
 # Generated from ../LaTeX.g4, derived from latex2sympy
@@ -16,7 +26,6 @@
 import sys
 
 
-
 def serializedATN():
     with StringIO() as buf:
         buf.write(u"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2")
diff --git a/sympy/parsing/latex/_antlr/latexparser.py b/sympy/parsing/latex/_antlr/latexparser.py
index 0fc7e5a7a6..f6be7423ee 100644
--- a/sympy/parsing/latex/_antlr/latexparser.py
+++ b/sympy/parsing/latex/_antlr/latexparser.py
@@ -1,6 +1,16 @@
 
 # encoding: utf-8
 
+# *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
+#
+# Generated from ../LaTeX.g4, derived from latex2sympy
+#     latex2sympy is licensed under the MIT license
+#     https://github.com/augustt198/latex2sympy/blob/master/LICENSE.txt
+#
+# Generated with antlr4
+#    antlr4 is licensed under the BSD-3-Clause License
+#    https://github.com/antlr/antlr4/blob/master/LICENSE.txt
+
 # *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
 #
 # Generated from ../LaTeX.g4, derived from latex2sympy
@@ -15,7 +25,6 @@
 from io import StringIO
 import sys
 
-
 def serializedATN():
     with StringIO() as buf:
         buf.write(u"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3")
@@ -444,7 +453,6 @@ def __init__(self, input, output=sys.stdout):
 
 
 
-
     class MathContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -477,7 +485,6 @@ def math(self):
             self.exitRule()
         return localctx
 
-
     class RelationContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -566,7 +573,6 @@ def relation(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class EqualityContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -609,7 +615,6 @@ def equality(self):
             self.exitRule()
         return localctx
 
-
     class ExprContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -642,7 +647,6 @@ def expr(self):
             self.exitRule()
         return localctx
 
-
     class AdditiveContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -719,7 +723,6 @@ def additive(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class MpContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -808,7 +811,6 @@ def mp(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class Mp_nofuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -897,7 +899,6 @@ def mp_nofunc(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class UnaryContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -976,7 +977,6 @@ def unary(self):
             self.exitRule()
         return localctx
 
-
     class Unary_nofuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1058,7 +1058,6 @@ def unary_nofunc(self):
             self.exitRule()
         return localctx
 
-
     class PostfixContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1109,7 +1108,6 @@ def postfix(self):
             self.exitRule()
         return localctx
 
-
     class Postfix_nofuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1160,7 +1158,6 @@ def postfix_nofunc(self):
             self.exitRule()
         return localctx
 
-
     class Postfix_opContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1209,7 +1206,6 @@ def postfix_op(self):
             self.exitRule()
         return localctx
 
-
     class Eval_atContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1270,7 +1266,6 @@ def eval_at(self):
             self.exitRule()
         return localctx
 
-
     class Eval_at_subContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1334,7 +1329,6 @@ def eval_at_sub(self):
             self.exitRule()
         return localctx
 
-
     class Eval_at_supContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1398,7 +1392,6 @@ def eval_at_sup(self):
             self.exitRule()
         return localctx
 
-
     class ExpContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1505,7 +1498,6 @@ def exp(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class Exp_nofuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1612,7 +1604,6 @@ def exp_nofunc(self, _p=0):
             self.unrollRecursionContexts(_parentctx)
         return localctx
 
-
     class CompContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1722,7 +1713,6 @@ def comp(self):
             self.exitRule()
         return localctx
 
-
     class Comp_nofuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1822,7 +1812,6 @@ def comp_nofunc(self):
             self.exitRule()
         return localctx
 
-
     class GroupContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1918,7 +1907,6 @@ def group(self):
             self.exitRule()
         return localctx
 
-
     class Abs_groupContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -1961,7 +1949,6 @@ def abs_group(self):
             self.exitRule()
         return localctx
 
-
     class AtomContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2065,7 +2052,6 @@ def atom(self):
             self.exitRule()
         return localctx
 
-
     class BraContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2117,7 +2103,6 @@ def bra(self):
             self.exitRule()
         return localctx
 
-
     class KetContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2169,7 +2154,6 @@ def ket(self):
             self.exitRule()
         return localctx
 
-
     class MathitContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2217,7 +2201,6 @@ def mathit(self):
             self.exitRule()
         return localctx
 
-
     class Mathit_textContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2261,7 +2244,6 @@ def mathit_text(self):
             self.exitRule()
         return localctx
 
-
     class FracContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2326,7 +2308,6 @@ def frac(self):
             self.exitRule()
         return localctx
 
-
     class BinomContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2403,7 +2384,6 @@ def binom(self):
             self.exitRule()
         return localctx
 
-
     class FloorContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2447,7 +2427,6 @@ def floor(self):
             self.exitRule()
         return localctx
 
-
     class CeilContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2491,7 +2470,6 @@ def ceil(self):
             self.exitRule()
         return localctx
 
-
     class Func_normalContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2589,7 +2567,6 @@ def func_normal(self):
             self.exitRule()
         return localctx
 
-
     class FuncContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2933,7 +2910,6 @@ def func(self):
             self.exitRule()
         return localctx
 
-
     class ArgsContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -2987,7 +2963,6 @@ def args(self):
             self.exitRule()
         return localctx
 
-
     class Limit_subContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3088,7 +3063,6 @@ def limit_sub(self):
             self.exitRule()
         return localctx
 
-
     class Func_argContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3142,7 +3116,6 @@ def func_arg(self):
             self.exitRule()
         return localctx
 
-
     class Func_arg_noparensContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3175,7 +3148,6 @@ def func_arg_noparens(self):
             self.exitRule()
         return localctx
 
-
     class SubexprContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3239,7 +3211,6 @@ def subexpr(self):
             self.exitRule()
         return localctx
 
-
     class SupexprContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3303,7 +3274,6 @@ def supexpr(self):
             self.exitRule()
         return localctx
 
-
     class SubeqContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
@@ -3351,7 +3321,6 @@ def subeq(self):
             self.exitRule()
         return localctx
 
-
     class SupeqContext(ParserRuleContext):
 
         def __init__(self, parser, parent=None, invokingState=-1):
diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index 2e4a45ad20..511a0f7e50 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -10,15 +10,11 @@
 from .errors import LaTeXParsingError
 
 
-LaTeXParser = LaTeXLexer = MathErrorListener = None
-
 try:
-    LaTeXParser = import_module('sympy.parsing.latex._antlr.latexparser',
-                                import_kwargs={'fromlist': ['LaTeXParser']}).LaTeXParser
-    LaTeXLexer = import_module('sympy.parsing.latex._antlr.latexlexer',
-                               import_kwargs={'fromlist': ['LaTeXLexer']}).LaTeXLexer
-except Exception:
-    pass
+    from sympy.parsing.latex._antlr.latexparser import LaTeXParser
+    from sympy.parsing.latex._antlr.latexlexer import LaTeXLexer
+except ImportError as e:
+    raise ImportError("Failed to import LaTeX parser or lexer. Ensure the ANTLR parser files are built.") from e
 
 ErrorListener = import_module('antlr4.error.ErrorListener',
                               warn_not_installed=True,
@@ -382,6 +378,9 @@ def convert_frac(frac):
 
     expr_top = convert_expr(frac.upper)
     expr_bot = convert_expr(frac.lower)
+    # Wrap expr_bot in Parenthesis if it is a Mul or Pow expression
+    if isinstance(expr_bot, (sympy.Mul, sympy.Pow)):
+        expr_bot = sympy.Parenthesis(expr_bot)
     inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)
     if expr_top == 1:
         return inverse_denom
diff --git a/test_latex_parsing.py b/test_latex_parsing.py
new file mode 100644
index 0000000000..d8e64db2b0
--- /dev/null
+++ b/test_latex_parsing.py
@@ -0,0 +1,7 @@
+from sympy.parsing.latex import parse_latex
+
+# Test the problematic LaTeX expression
+latex_expr = "\\frac{\\frac{a^3+b}{c}}{\\frac{1}{c^2}}"
+parsed_expr = parse_latex(latex_expr)
+
+print("Parsed expression:", parsed_expr)
\ No newline at end of file
