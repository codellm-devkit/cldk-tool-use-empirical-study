{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/reproduce_issue.py b/reproduce_issue.py\nnew file mode 100644\nindex 0000000000..df067dea7e\n--- /dev/null\n+++ b/reproduce_issue.py\n@@ -0,0 +1,18 @@\n+from sympy import Abs, Rational, imageset, Lambda, S, ConditionSet, Contains, Interval, Symbol, asin\n+from sympy.solvers.solveset import solveset_real\n+n = Symbol('n')\n+\n+# Reproduce the issue from the PR description\n+x = Symbol('x')\n+y = Symbol('y')\n+\n+# Example 1: Works as expected\n+result1 = solveset_real(Abs(x) - y, x)\n+print(\"Example 1:\", result1)\n+print(\"Substituted:\", result1.subs(y, Rational(1, 3)))\n+\n+# Example 2: Issue with ConditionSet and ImageSet\n+image_set = imageset(Lambda(n, 2*n*S.Pi + asin(y)), S.Integers)\n+condition_set = ConditionSet(x, Contains(y, Interval(-1, 1)), image_set)\n+print(\"Example 2:\", condition_set)\n+print(\"Substituted:\", condition_set.subs(y, Rational(1, 3)))\n\\ No newline at end of file\ndiff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 118eda6f77..7286038cbd 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -16,6 +16,7 @@\n \n from .contains import Contains\n from .sets import Set, EmptySet, Union, FiniteSet\n+from .fancysets import ImageSet\n \n \n class ConditionSet(Set):\n@@ -244,6 +245,9 @@ def _eval_subs(self, old, new):\n         base = self.base_set.subs(old, new)\n         if cond is S.true:\n             return ConditionSet(new, Contains(new, base), base)\n+        # Ensure the bound variable is not replaced in the output\n+        if isinstance(base, ImageSet):\n+            return self.func(self.sym, cond, base)\n         return self.func(self.sym, cond, base)\n \n     def dummy_eq(self, other, symbol=None):\n"}