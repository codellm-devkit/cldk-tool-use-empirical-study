diff --git a/doc/contents.rst b/doc/contents.rst
index eb6946292..52fdc8078 100644
--- a/doc/contents.rst
+++ b/doc/contents.rst
@@ -6,6 +6,7 @@ Sphinx documentation contents
 .. toctree::
    :maxdepth: 2
 
+   index
    usage/index
    development/index
    man/index
diff --git a/doc/index.rst b/doc/index.rst
new file mode 100644
index 000000000..ce567b8ee
--- /dev/null
+++ b/doc/index.rst
@@ -0,0 +1,2 @@
+.. automodule:: example
+   :members:
\ No newline at end of file
diff --git a/example.py b/example.py
new file mode 100644
index 000000000..42f15a65f
--- /dev/null
+++ b/example.py
@@ -0,0 +1,2 @@
+# example.py
+_foo = None  #: :meta public:
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 76265f5be..043bcab33 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1915,6 +1915,31 @@ class DataDocumenter(GenericAliasMixin, NewTypeMixin, TypeVarMixin,
     def document_members(self, all_members: bool = False) -> None:
         pass
 
+    def get_doc(self, encoding: str = None, ignore: int = None) -> Optional[List[List[str]]]:
+        if encoding is not None:
+            warnings.warn("The 'encoding' argument to autodoc.%s.get_doc() is deprecated."
+                          % self.__class__.__name__,
+                          RemovedInSphinx40Warning, stacklevel=2)
+        if ignore is not None:
+            warnings.warn("The 'ignore' argument to autodoc.%s.get_doc() is deprecated."
+                          % self.__class__.__name__,
+                          RemovedInSphinx50Warning, stacklevel=2)
+        
+        # Check for docstring in attr_docs for variables documented with #:
+        if self.analyzer:
+            attr_docs = self.analyzer.find_attr_docs()
+            key = ('.'.join(self.objpath[:-1]), self.objpath[-1]) if self.objpath else None
+            if key and key in attr_docs:
+                tab_width = self.directive.state.document.settings.tab_width
+                return [prepare_docstring('\n'.join(attr_docs[key]), ignore, tab_width)]
+        
+        docstring = getdoc(self.object, self.get_attr, self.config.autodoc_inherit_docstrings,
+                           self.parent, self.object_name)
+        if docstring:
+            tab_width = self.directive.state.document.settings.tab_width
+            return [prepare_docstring(docstring, ignore, tab_width)]
+        return []
+
     def get_real_modname(self) -> str:
         return self.get_attr(self.parent or self.object, '__module__', None) \
             or self.modname
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
