{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-13877", "model_patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\nindex 97cde62e26..f23ff8f973 100644\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -174,6 +174,10 @@ def _eval_det_bareiss(self):\n         http://www.eecis.udel.edu/~saunders/papers/sffge/it5.ps.\n         \"\"\"\n \n+        # Check if the matrix contains symbolic entries\n+        if any(any(not entry.is_Number for entry in row) for row in self.tolist()):\n+            return self._eval_det_lu()\n+\n         # XXX included as a workaround for issue #12362.  Should use `_find_reasonable_pivot` instead\n         def _find_pivot(l):\n             for pos,val in enumerate(l):\ndiff --git a/test_det.py b/test_det.py\nnew file mode 100644\nindex 0000000000..da845efe10\n--- /dev/null\n+++ b/test_det.py\n@@ -0,0 +1 @@\n+from sympy import *; from sympy.abc import a; f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)])); print(f(1)); print(f(2)); print(f(3)); print(f(4)); print(f(5)); print(f(6))\n"}