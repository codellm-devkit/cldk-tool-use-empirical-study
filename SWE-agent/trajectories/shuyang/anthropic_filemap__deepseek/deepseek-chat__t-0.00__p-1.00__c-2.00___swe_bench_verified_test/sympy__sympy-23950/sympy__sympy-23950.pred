{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-23950", "model_patch": "diff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..3d85af2067\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,4 @@\n+from sympy import Contains, Reals, Symbol\n+\n+x = Symbol('x')\n+print(Contains(x, Reals).as_set())\n\\ No newline at end of file\ndiff --git a/sympy/sets/contains.py b/sympy/sets/contains.py\nindex b2d4268d12..997a4d8e16 100644\n--- a/sympy/sets/contains.py\n+++ b/sympy/sets/contains.py\n@@ -45,4 +45,4 @@ def binary_symbols(self):\n             isinstance(i, (Eq, Ne))])\n \n     def as_set(self):\n-        raise NotImplementedError()\n+        return self.args[1]\ndiff --git a/test_edge_cases.py b/test_edge_cases.py\nnew file mode 100644\nindex 0000000000..7bb45ea518\n--- /dev/null\n+++ b/test_edge_cases.py\n@@ -0,0 +1,15 @@\n+from sympy import Contains, Reals, Symbol, Interval, Union, S\n+\n+x = Symbol('x')\n+\n+# Test with Reals\n+print(Contains(x, Reals).as_set())  # Expected: Reals\n+\n+# Test with Interval\n+print(Contains(x, Interval(0, 1)).as_set())  # Expected: Interval(0, 1)\n+\n+# Test with Union\n+print(Contains(x, Union(Reals, S.Integers)).as_set())  # Expected: Union(Reals, Integers)\n+\n+# Test with EmptySet\n+print(Contains(x, S.EmptySet).as_set())  # Expected: EmptySet\n\\ No newline at end of file\n"}