{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-23476", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex c55864243a..d234c33668 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3041,7 +3041,12 @@ class Figure(FigureBase):\n                 f\"This figure was saved with matplotlib version {version} and \"\n                 f\"is unlikely to function correctly.\")\n \n+        # Save the original DPI before restoring the state\n+        original_dpi = state.get('_dpi', None)\n         self.__dict__ = state\n+        # Ensure the DPI is not altered by the backend\n+        if original_dpi is not None:\n+            self._dpi = original_dpi\n \n         # re-initialise some of the unstored state information\n         FigureCanvasBase(self)  # Set self.canvas.\ndiff --git a/reproduce_bug.py b/reproduce_bug.py\nnew file mode 100644\nindex 0000000000..098f92ff59\n--- /dev/null\n+++ b/reproduce_bug.py\n@@ -0,0 +1,32 @@\n+import numpy as np\n+import matplotlib\n+import matplotlib.pyplot as plt\n+import pickle\n+import platform\n+\n+print(matplotlib.get_backend())\n+print('Matplotlib ver:', matplotlib.__version__)\n+print('Platform:', platform.platform())\n+print('System:', platform.system())\n+print('Release:', platform.release())\n+print('Python ver:', platform.python_version())\n+\n+def dump_load_get_dpi(fig):\n+    with open('sinus.pickle','wb') as file:\n+        pickle.dump(fig, file)\n+\n+    with open('sinus.pickle', 'rb') as blob:\n+        fig2 = pickle.load(blob)\n+    return fig2, fig2.dpi\n+\n+def run():\n+    fig = plt.figure()\n+    x = np.linspace(0,2*np.pi)\n+    y = np.sin(x)\n+\n+    for i in range(32):\n+        print(f'{i}: {fig.dpi}')\n+        fig, dpi = dump_load_get_dpi(fig)\n+\n+if __name__ == '__main__':\n+    run()\ndiff --git a/sinus.pickle b/sinus.pickle\nnew file mode 100644\nindex 0000000000..64cedd865c\nBinary files /dev/null and b/sinus.pickle differ\n"}