{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/concrete/summations.py b/sympy/concrete/summations.py\nindex 372487664c..4705924dc6 100644\n--- a/sympy/concrete/summations.py\n+++ b/sympy/concrete/summations.py\n@@ -175,6 +175,28 @@ def doit(self, **hints):\n             f = self.function\n \n         if self.function.is_Matrix:\n+            from sympy.matrices.expressions import Identity\n+            from sympy.matrices.expressions.matmul import MatMul\n+            if isinstance(self.function, Identity):\n+                n = self.function.shape[0]\n+                return n\n+            if isinstance(self.function, MatMul):\n+                # Check if the MatMul evaluates to an identity matrix\n+                try:\n+                    evaluated = self.function.doit()\n+                    if isinstance(evaluated, Identity):\n+                        n = evaluated.shape[0]\n+                        return n\n+                except:\n+                    pass\n+            # Handle the case where the matrix is an identity matrix but not recognized as such\n+            try:\n+                evaluated = self.function.doit()\n+                if evaluated == Identity(evaluated.shape[0]):\n+                    n = evaluated.shape[0]\n+                    return n\n+            except:\n+                pass\n             return self.expand().doit()\n \n         for n, limit in enumerate(self.limits):\n"}