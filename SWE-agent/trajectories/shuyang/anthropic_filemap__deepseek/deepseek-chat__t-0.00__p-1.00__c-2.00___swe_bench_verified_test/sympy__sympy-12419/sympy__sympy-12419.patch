diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..48003aaa2
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+def verify_needs_extensions(reqversion, extversion):
+    if reqversion > extversion:
+        print(f"Error: Required version {reqversion} > loaded version {extversion}")
+    else:
+        print(f"Success: Required version {reqversion} <= loaded version {extversion}")
+
+# Test case: '0.6' vs '0.10' (should pass but fails due to string comparison)
+verify_needs_extensions("0.6", "0.10")
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 3dbc8746b..31bd48c0a 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp>=2.0.0',
-    'sphinxcontrib-serializinghtml>=1.1.5',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4',
+    'sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.14,<0.18',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/extension.py b/sphinx/extension.py
index 7ec6c8518..f4ea56c1d 100644
--- a/sphinx/extension.py
+++ b/sphinx/extension.py
@@ -39,6 +39,13 @@ class Extension:
         self.parallel_write_safe = kwargs.pop('parallel_write_safe', True)
 
 
+def parse_version(version: str) -> tuple:
+    """Parse a version string into a tuple of integers for comparison."""
+    try:
+        return tuple(map(int, version.split('.')))
+    except ValueError:
+        return (0,)  # Fallback for malformed versions
+
 def verify_needs_extensions(app: "Sphinx", config: Config) -> None:
     """Verify the required Sphinx extensions are loaded."""
     if config.needs_extensions is None:
@@ -51,7 +58,15 @@ def verify_needs_extensions(app: "Sphinx", config: Config) -> None:
                               'but it is not loaded.'), extname)
             continue
 
-        if extension.version == 'unknown version' or reqversion > extension.version:
+        if extension.version == 'unknown version':
+            raise VersionRequirementError(__('This project needs the extension %s at least in '
+                                             'version %s and therefore cannot be built with '
+                                             'the loaded version (%s).') %
+                                          (extname, reqversion, extension.version))
+
+        req_parsed = parse_version(reqversion)
+        ext_parsed = parse_version(extension.version)
+        if req_parsed > ext_parsed:
             raise VersionRequirementError(__('This project needs the extension %s at least in '
                                              'version %s and therefore cannot be built with '
                                              'the loaded version (%s).') %
diff --git a/tox.ini b/tox.ini
index 00c8e13bd..11d3352df 100644
--- a/tox.ini
+++ b/tox.ini
@@ -22,14 +22,14 @@ deps =
     du15: docutils==0.15.*
     du16: docutils==0.16.*
     du17: docutils==0.17.*
-    py311: git+https://github.com/pytest-dev/py
+    py311: git+https://github.com/pytest -rA-dev/py
 extras =
     test
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:du-latest]
 commands =
