{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-12708", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 61f88401ab..6ee19110a2 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -407,13 +407,19 @@ class BaseDatabaseSchemaEditor:\n             model, columns, exclude=meta_constraint_names | meta_index_names,\n             **constraint_kwargs\n         )\n-        if len(constraint_names) != 1:\n+        # Filter constraints to match the type being deleted (index or unique)\n+        matching_constraints = [\n+            name for name in constraint_names\n+            if (constraint_kwargs.get('index') and name.endswith('_idx')) or\n+               (constraint_kwargs.get('unique') and name.endswith('_uniq'))\n+        ]\n+        if len(matching_constraints) != 1:\n             raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n-                len(constraint_names),\n+                len(matching_constraints),\n                 model._meta.db_table,\n                 \", \".join(columns),\n             ))\n-        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))\n+        self.execute(self._delete_constraint_sql(sql, model, matching_constraints[0]))\n \n     def alter_db_table(self, model, old_db_table, new_db_table):\n         \"\"\"Rename the table a model points to.\"\"\"\ndiff --git a/reproduce/migrations/0001_initial.py b/reproduce/migrations/0001_initial.py\nnew file mode 100644\nindex 0000000000..e218a2581c\n--- /dev/null\n+++ b/reproduce/migrations/0001_initial.py\n@@ -0,0 +1,26 @@\n+# Generated by Django 3.1 on 2025-05-21 21:40\n+\n+from django.db import migrations, models\n+\n+\n+class Migration(migrations.Migration):\n+\n+    initial = True\n+\n+    dependencies = [\n+    ]\n+\n+    operations = [\n+        migrations.CreateModel(\n+            name='TestModel',\n+            fields=[\n+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n+                ('field1', models.CharField(max_length=100)),\n+                ('field2', models.CharField(max_length=100)),\n+            ],\n+            options={\n+                'unique_together': {('field1', 'field2')},\n+                'index_together': {('field1', 'field2')},\n+            },\n+        ),\n+    ]\ndiff --git a/reproduce/migrations/0002_delete_index_together.py b/reproduce/migrations/0002_delete_index_together.py\nnew file mode 100644\nindex 0000000000..1e2c5485b9\n--- /dev/null\n+++ b/reproduce/migrations/0002_delete_index_together.py\n@@ -0,0 +1,13 @@\n+# Generated by Django 3.1 on 2025-05-21 21:40\n+\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('reproduce', '0001_initial'),\n+    ]\n+\n+    operations = [\n+    ]\ndiff --git a/reproduce/migrations/__init__.py b/reproduce/migrations/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/reproduce/reproduce_issue.py b/reproduce/reproduce_issue.py\nnew file mode 100644\nindex 0000000000..4bd3ca4498\n--- /dev/null\n+++ b/reproduce/reproduce_issue.py\n@@ -0,0 +1,64 @@\n+import os\n+import sys\n+from django.conf import settings\n+from django.core.management import execute_from_command_line\n+\n+# Configure Django settings\n+settings.configure(\n+    DEBUG=True,\n+    DATABASES={\n+        'default': {\n+            'ENGINE': 'django.db.backends.sqlite3',\n+            'NAME': ':memory:',\n+        }\n+    },\n+    INSTALLED_APPS=[\n+        'django.contrib.contenttypes',\n+        'django.contrib.auth',\n+        'reproduce',\n+    ],\n+)\n+\n+# Ensure Django is set up\n+import django\n+django.setup()\n+\n+# Define the model\n+from django.db import models\n+\n+class TestModel(models.Model):\n+    field1 = models.CharField(max_length=100)\n+    field2 = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'reproduce'\n+        index_together = [['field1', 'field2']]\n+        unique_together = [['field1', 'field2']]\n+\n+# Create and apply migrations\n+def setup():\n+    from django.core.management import call_command\n+    from django.db import connection\n+\n+    # Create the initial migration\n+    call_command('makemigrations', 'reproduce', interactive=False)\n+    \n+    # Apply migrations\n+    call_command('migrate', interactive=False)\n+\n+# Delete index_together\n+def delete_index_together():\n+    from django.core.management import call_command\n+    from django.db import connection\n+\n+    # Generate the migration to delete index_together\n+    call_command('makemigrations', 'reproduce', '--empty', '--name', 'delete_index_together', interactive=False)\n+    \n+    # Apply the migration\n+    call_command('migrate', interactive=False)\n+\n+if __name__ == '__main__':\n+    execute_from_command_line(sys.argv)\n+    setup()\n+    delete_index_together()\n+    print(\"Successfully deleted index_together without errors!\")\n\\ No newline at end of file\n"}