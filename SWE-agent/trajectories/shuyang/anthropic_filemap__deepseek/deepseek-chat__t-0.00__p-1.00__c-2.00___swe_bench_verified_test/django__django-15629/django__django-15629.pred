{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15629", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 696bfd7742..f9aab658e0 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -81,7 +81,7 @@ class BaseDatabaseSchemaEditor:\n \n     sql_create_column = \"ALTER TABLE %(table)s ADD COLUMN %(column)s %(definition)s\"\n     sql_alter_column = \"ALTER TABLE %(table)s %(changes)s\"\n-    sql_alter_column_type = \"ALTER COLUMN %(column)s TYPE %(type)s\"\n+    sql_alter_column_type = \"ALTER COLUMN %(column)s TYPE %(type)s%(collation)s\"\n     sql_alter_column_null = \"ALTER COLUMN %(column)s DROP NOT NULL\"\n     sql_alter_column_not_null = \"ALTER COLUMN %(column)s SET NOT NULL\"\n     sql_alter_column_default = \"ALTER COLUMN %(column)s SET DEFAULT %(default)s\"\n@@ -1170,12 +1170,14 @@ class BaseDatabaseSchemaEditor:\n         an ALTER TABLE statement and a list of extra (sql, params) tuples to\n         run once the field is altered.\n         \"\"\"\n+        collation = getattr(new_field, 'db_collation', None)\n         return (\n             (\n                 self.sql_alter_column_type\n                 % {\n                     \"column\": self.quote_name(new_field.column),\n                     \"type\": new_type,\n+                    \"collation\": f\" COLLATE {self.quote_name(collation)}\" if collation else \"\",\n                 },\n                 [],\n             ),\n"}