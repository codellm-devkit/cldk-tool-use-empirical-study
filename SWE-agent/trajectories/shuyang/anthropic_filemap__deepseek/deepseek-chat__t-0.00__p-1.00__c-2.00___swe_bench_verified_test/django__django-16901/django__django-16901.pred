{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-16901", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 78148f76b0..c0ca5eb5c1 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -61,8 +61,14 @@ class Q(tree.Node):\n             return self.copy()\n \n         obj = self.create(connector=conn)\n-        obj.add(self, conn)\n-        obj.add(other, conn)\n+        if conn == self.XOR:\n+            # For XOR, combine all children into a single XOR group\n+            obj.add(self, self.OR)\n+            obj.add(other, self.OR)\n+            obj.connector = self.XOR\n+        else:\n+            obj.add(self, conn)\n+            obj.add(other, conn)\n         return obj\n \n     def __or__(self, other):\n@@ -72,7 +78,17 @@ class Q(tree.Node):\n         return self._combine(other, self.AND)\n \n     def __xor__(self, other):\n-        return self._combine(other, self.XOR)\n+        if not isinstance(other, Q):\n+            raise TypeError(other)\n+        if not self:\n+            return other.copy()\n+        if not other and isinstance(other, Q):\n+            return self.copy()\n+        # For XOR, combine all children into a single XOR group\n+        obj = self.create(connector=self.XOR)\n+        obj.add(self, self.OR)\n+        obj.add(other, self.OR)\n+        return obj\n \n     def __invert__(self):\n         obj = self.copy()\n"}