{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 54f3258eac..7195ab3b93 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1028,6 +1028,11 @@ class Query(BaseExpression):\n             a\n             for a, j in self.alias_map.items()\n             if (reuse is None or a in reuse) and j.equals(join)\n+            and (\n+                not hasattr(join, 'filtered_relation') \n+                or not hasattr(j, 'filtered_relation') \n+                or join.filtered_relation == j.filtered_relation\n+            )\n         ]\n         if reuse_aliases:\n             if join.table_alias in reuse_aliases:\ndiff --git a/minimal_project/db.sqlite3 b/minimal_project/db.sqlite3\nnew file mode 100644\nindex 0000000000..7e12453fb7\nBinary files /dev/null and b/minimal_project/db.sqlite3 differ\ndiff --git a/minimal_project/manage.py b/minimal_project/manage.py\nnew file mode 100755\nindex 0000000000..818591aa80\n--- /dev/null\n+++ b/minimal_project/manage.py\n@@ -0,0 +1,22 @@\n+#!/usr/bin/env python\n+\"\"\"Django's command-line utility for administrative tasks.\"\"\"\n+import os\n+import sys\n+\n+\n+def main():\n+    \"\"\"Run administrative tasks.\"\"\"\n+    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"minimal_project.settings\")\n+    try:\n+        from django.core.management import execute_from_command_line\n+    except ImportError as exc:\n+        raise ImportError(\n+            \"Couldn't import Django. Are you sure it's installed and \"\n+            \"available on your PYTHONPATH environment variable? Did you \"\n+            \"forget to activate a virtual environment?\"\n+        ) from exc\n+    execute_from_command_line(sys.argv)\n+\n+\n+if __name__ == \"__main__\":\n+    main()\ndiff --git a/minimal_project/minimal_project/__init__.py b/minimal_project/minimal_project/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/minimal_project/minimal_project/asgi.py b/minimal_project/minimal_project/asgi.py\nnew file mode 100644\nindex 0000000000..b409c382ff\n--- /dev/null\n+++ b/minimal_project/minimal_project/asgi.py\n@@ -0,0 +1,16 @@\n+\"\"\"\n+ASGI config for minimal_project project.\n+\n+It exposes the ASGI callable as a module-level variable named ``application``.\n+\n+For more information on this file, see\n+https://docs.djangoproject.com/en/dev/howto/deployment/asgi/\n+\"\"\"\n+\n+import os\n+\n+from django.core.asgi import get_asgi_application\n+\n+os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"minimal_project.settings\")\n+\n+application = get_asgi_application()\ndiff --git a/minimal_project/minimal_project/settings.py b/minimal_project/minimal_project/settings.py\nnew file mode 100644\nindex 0000000000..c9cbd95d89\n--- /dev/null\n+++ b/minimal_project/minimal_project/settings.py\n@@ -0,0 +1,124 @@\n+\"\"\"\n+Django settings for minimal_project project.\n+\n+Generated by 'django-admin startproject' using Django 4.1.dev20220329124744.\n+\n+For more information on this file, see\n+https://docs.djangoproject.com/en/dev/topics/settings/\n+\n+For the full list of settings and their values, see\n+https://docs.djangoproject.com/en/dev/ref/settings/\n+\"\"\"\n+\n+from pathlib import Path\n+\n+# Build paths inside the project like this: BASE_DIR / 'subdir'.\n+BASE_DIR = Path(__file__).resolve().parent.parent\n+\n+\n+# Quick-start development settings - unsuitable for production\n+# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/\n+\n+# SECURITY WARNING: keep the secret key used in production secret!\n+SECRET_KEY = \"django-insecure-nmdzzrj5afwn+%rd5=3tk-aa7hcyua-z8jy4=x^@=bv8d8foki\"\n+\n+# SECURITY WARNING: don't run with debug turned on in production!\n+DEBUG = True\n+\n+ALLOWED_HOSTS = []\n+\n+\n+# Application definition\n+\n+INSTALLED_APPS = [\n+    \"django.contrib.admin\",\n+    \"django.contrib.auth\",\n+    \"django.contrib.contenttypes\",\n+    \"django.contrib.sessions\",\n+    \"django.contrib.messages\",\n+    \"django.contrib.staticfiles\",\n+    \"myapp\",\n+]\n+\n+MIDDLEWARE = [\n+    \"django.middleware.security.SecurityMiddleware\",\n+    \"django.contrib.sessions.middleware.SessionMiddleware\",\n+    \"django.middleware.common.CommonMiddleware\",\n+    \"django.middleware.csrf.CsrfViewMiddleware\",\n+    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n+    \"django.contrib.messages.middleware.MessageMiddleware\",\n+    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n+]\n+\n+ROOT_URLCONF = \"minimal_project.urls\"\n+\n+TEMPLATES = [\n+    {\n+        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n+        \"DIRS\": [],\n+        \"APP_DIRS\": True,\n+        \"OPTIONS\": {\n+            \"context_processors\": [\n+                \"django.template.context_processors.debug\",\n+                \"django.template.context_processors.request\",\n+                \"django.contrib.auth.context_processors.auth\",\n+                \"django.contrib.messages.context_processors.messages\",\n+            ],\n+        },\n+    },\n+]\n+\n+WSGI_APPLICATION = \"minimal_project.wsgi.application\"\n+\n+\n+# Database\n+# https://docs.djangoproject.com/en/dev/ref/settings/#databases\n+\n+DATABASES = {\n+    \"default\": {\n+        \"ENGINE\": \"django.db.backends.sqlite3\",\n+        \"NAME\": BASE_DIR / \"db.sqlite3\",\n+    }\n+}\n+\n+\n+# Password validation\n+# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators\n+\n+AUTH_PASSWORD_VALIDATORS = [\n+    {\n+        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n+    },\n+    {\n+        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n+    },\n+    {\n+        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n+    },\n+    {\n+        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n+    },\n+]\n+\n+\n+# Internationalization\n+# https://docs.djangoproject.com/en/dev/topics/i18n/\n+\n+LANGUAGE_CODE = \"en-us\"\n+\n+TIME_ZONE = \"UTC\"\n+\n+USE_I18N = True\n+\n+USE_TZ = True\n+\n+\n+# Static files (CSS, JavaScript, Images)\n+# https://docs.djangoproject.com/en/dev/howto/static-files/\n+\n+STATIC_URL = \"static/\"\n+\n+# Default primary key field type\n+# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field\n+\n+DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\ndiff --git a/minimal_project/minimal_project/urls.py b/minimal_project/minimal_project/urls.py\nnew file mode 100644\nindex 0000000000..b49e841796\n--- /dev/null\n+++ b/minimal_project/minimal_project/urls.py\n@@ -0,0 +1,22 @@\n+\"\"\"minimal_project URL Configuration\n+\n+The `urlpatterns` list routes URLs to views. For more information please see:\n+    https://docs.djangoproject.com/en/dev/topics/http/urls/\n+Examples:\n+Function views\n+    1. Add an import:  from my_app import views\n+    2. Add a URL to urlpatterns:  path('', views.home, name='home')\n+Class-based views\n+    1. Add an import:  from other_app.views import Home\n+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\n+Including another URLconf\n+    1. Import the include() function: from django.urls import include, path\n+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n+\"\"\"\n+\n+from django.contrib import admin\n+from django.urls import path\n+\n+urlpatterns = [\n+    path(\"admin/\", admin.site.urls),\n+]\ndiff --git a/minimal_project/minimal_project/wsgi.py b/minimal_project/minimal_project/wsgi.py\nnew file mode 100644\nindex 0000000000..2aa8c0469b\n--- /dev/null\n+++ b/minimal_project/minimal_project/wsgi.py\n@@ -0,0 +1,16 @@\n+\"\"\"\n+WSGI config for minimal_project project.\n+\n+It exposes the WSGI callable as a module-level variable named ``application``.\n+\n+For more information on this file, see\n+https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/\n+\"\"\"\n+\n+import os\n+\n+from django.core.wsgi import get_wsgi_application\n+\n+os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"minimal_project.settings\")\n+\n+application = get_wsgi_application()\ndiff --git a/minimal_project/myapp/__init__.py b/minimal_project/myapp/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/minimal_project/myapp/admin.py b/minimal_project/myapp/admin.py\nnew file mode 100644\nindex 0000000000..8c38f3f3da\n--- /dev/null\n+++ b/minimal_project/myapp/admin.py\n@@ -0,0 +1,3 @@\n+from django.contrib import admin\n+\n+# Register your models here.\ndiff --git a/minimal_project/myapp/apps.py b/minimal_project/myapp/apps.py\nnew file mode 100644\nindex 0000000000..da45bfa476\n--- /dev/null\n+++ b/minimal_project/myapp/apps.py\n@@ -0,0 +1,6 @@\n+from django.apps import AppConfig\n+\n+\n+class MyappConfig(AppConfig):\n+    default_auto_field = \"django.db.models.BigAutoField\"\n+    name = \"myapp\"\ndiff --git a/minimal_project/myapp/migrations/0001_initial.py b/minimal_project/myapp/migrations/0001_initial.py\nnew file mode 100644\nindex 0000000000..bc0ba95e86\n--- /dev/null\n+++ b/minimal_project/myapp/migrations/0001_initial.py\n@@ -0,0 +1,73 @@\n+# Generated by Django 4.1.dev20220329124744 on 2025-05-22 00:18\n+\n+from django.db import migrations, models\n+import django.db.models.deletion\n+\n+\n+class Migration(migrations.Migration):\n+\n+    initial = True\n+\n+    dependencies = []\n+\n+    operations = [\n+        migrations.CreateModel(\n+            name=\"Nested\",\n+            fields=[\n+                (\n+                    \"id\",\n+                    models.BigAutoField(\n+                        auto_created=True,\n+                        primary_key=True,\n+                        serialize=False,\n+                        verbose_name=\"ID\",\n+                    ),\n+                ),\n+                (\"zone\", models.CharField(blank=True, max_length=100, null=True)),\n+                (\"is_all\", models.BooleanField(default=False)),\n+                (\"price\", models.DecimalField(decimal_places=2, max_digits=10)),\n+            ],\n+        ),\n+        migrations.CreateModel(\n+            name=\"MyRelation\",\n+            fields=[\n+                (\n+                    \"id\",\n+                    models.BigAutoField(\n+                        auto_created=True,\n+                        primary_key=True,\n+                        serialize=False,\n+                        verbose_name=\"ID\",\n+                    ),\n+                ),\n+                (\n+                    \"nested\",\n+                    models.ForeignKey(\n+                        on_delete=django.db.models.deletion.CASCADE, to=\"myapp.nested\"\n+                    ),\n+                ),\n+            ],\n+        ),\n+        migrations.CreateModel(\n+            name=\"MyModel\",\n+            fields=[\n+                (\n+                    \"id\",\n+                    models.BigAutoField(\n+                        auto_created=True,\n+                        primary_key=True,\n+                        serialize=False,\n+                        verbose_name=\"ID\",\n+                    ),\n+                ),\n+                (\"zone\", models.CharField(max_length=100)),\n+                (\n+                    \"myrelation\",\n+                    models.ForeignKey(\n+                        on_delete=django.db.models.deletion.CASCADE,\n+                        to=\"myapp.myrelation\",\n+                    ),\n+                ),\n+            ],\n+        ),\n+    ]\ndiff --git a/minimal_project/myapp/migrations/__init__.py b/minimal_project/myapp/migrations/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/minimal_project/myapp/models.py b/minimal_project/myapp/models.py\nnew file mode 100644\nindex 0000000000..28a90febfc\n--- /dev/null\n+++ b/minimal_project/myapp/models.py\n@@ -0,0 +1,13 @@\n+from django.db import models\n+\n+class Nested(models.Model):\n+    zone = models.CharField(max_length=100, null=True, blank=True)\n+    is_all = models.BooleanField(default=False)\n+    price = models.DecimalField(max_digits=10, decimal_places=2)\n+\n+class MyRelation(models.Model):\n+    nested = models.ForeignKey(Nested, on_delete=models.CASCADE)\n+\n+class MyModel(models.Model):\n+    zone = models.CharField(max_length=100)\n+    myrelation = models.ForeignKey(MyRelation, on_delete=models.CASCADE)\ndiff --git a/minimal_project/myapp/tests.py b/minimal_project/myapp/tests.py\nnew file mode 100644\nindex 0000000000..7ce503c2dd\n--- /dev/null\n+++ b/minimal_project/myapp/tests.py\n@@ -0,0 +1,3 @@\n+from django.test import TestCase\n+\n+# Create your tests here.\ndiff --git a/minimal_project/myapp/views.py b/minimal_project/myapp/views.py\nnew file mode 100644\nindex 0000000000..91ea44a218\n--- /dev/null\n+++ b/minimal_project/myapp/views.py\n@@ -0,0 +1,3 @@\n+from django.shortcuts import render\n+\n+# Create your views here.\n"}