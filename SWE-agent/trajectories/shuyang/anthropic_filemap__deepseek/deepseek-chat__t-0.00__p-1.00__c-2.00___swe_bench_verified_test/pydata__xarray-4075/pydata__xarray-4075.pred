{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pydata__xarray-4075", "model_patch": "diff --git a/edge_cases.py b/edge_cases.py\nnew file mode 100644\nindex 00000000..ddfda796\n--- /dev/null\n+++ b/edge_cases.py\n@@ -0,0 +1,17 @@\n+import numpy as np\n+import xarray as xr\n+\n+# All weights True\n+dta = xr.DataArray([1., 1., 1.])\n+wgt = xr.DataArray(np.array([1, 1, 1], dtype=np.bool))\n+print(\"All True weights:\", dta.weighted(wgt).mean())\n+\n+# All weights False\n+dta = xr.DataArray([1., 1., 1.])\n+wgt = xr.DataArray(np.array([0, 0, 0], dtype=np.bool))\n+print(\"All False weights:\", dta.weighted(wgt).mean())\n+\n+# Mixed weights\n+dta = xr.DataArray([1., 2., 3.])\n+wgt = xr.DataArray(np.array([1, 0, 1], dtype=np.bool))\n+print(\"Mixed weights:\", dta.weighted(wgt).mean())\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 00000000..dfe016d7\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,7 @@\n+import numpy as np\n+import xarray as xr\n+\n+dta = xr.DataArray([1., 1., 1.])\n+wgt = xr.DataArray(np.array([1, 1, 0], dtype=np.bool))\n+\n+print(dta.weighted(wgt).mean())\ndiff --git a/xarray/core/weighted.py b/xarray/core/weighted.py\nindex 996d2e4c..4a67506e 100644\n--- a/xarray/core/weighted.py\n+++ b/xarray/core/weighted.py\n@@ -142,7 +142,7 @@ class Weighted:\n         # we need to mask data values that are nan; else the weights are wrong\n         mask = da.notnull()\n \n-        sum_of_weights = self._reduce(mask, self.weights, dim=dim, skipna=False)\n+        sum_of_weights = self._reduce(mask, self.weights * 1, dim=dim, skipna=False)\n \n         # 0-weights are not valid\n         valid_weights = sum_of_weights != 0.0\n"}