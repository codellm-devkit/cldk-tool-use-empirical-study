{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-10999", "model_patch": "diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py\nindex 8d08b7d1d3..0fc1b3d435 100644\n--- a/django/utils/dateparse.py\n+++ b/django/utils/dateparse.py\n@@ -29,7 +29,7 @@ datetime_re = re.compile(\n standard_duration_re = re.compile(\n     r'^'\n     r'(?:(?P<days>-?\\d+) (days?, )?)?'\n-    r'((?:(?P<hours>-?\\d+):)(?=\\d+:\\d+))?'\n+    r'((?:(?P<hours>-?\\d+):)(?=-?\\d+:-?\\d+))?'\n     r'(?:(?P<minutes>-?\\d+):)?'\n     r'(?P<seconds>-?\\d+)'\n     r'(?:\\.(?P<microseconds>\\d{1,6})\\d{0,6})?'\n@@ -137,10 +137,20 @@ def parse_duration(value):\n     if match:\n         kw = match.groupdict()\n         days = datetime.timedelta(float(kw.pop('days', 0) or 0))\n-        sign = -1 if kw.pop('sign', '+') == '-' else 1\n         if kw.get('microseconds'):\n             kw['microseconds'] = kw['microseconds'].ljust(6, '0')\n         if kw.get('seconds') and kw.get('microseconds') and kw['seconds'].startswith('-'):\n             kw['microseconds'] = '-' + kw['microseconds']\n         kw = {k: float(v) for k, v in kw.items() if v is not None}\n-        return days + sign * datetime.timedelta(**kw)\n+        # Compute total seconds manually\n+        total_seconds = 0\n+        if 'hours' in kw:\n+            total_seconds += kw['hours'] * 3600\n+        if 'minutes' in kw:\n+            total_seconds += kw['minutes'] * 60\n+        if 'seconds' in kw:\n+            total_seconds += kw['seconds']\n+        if 'microseconds' in kw:\n+            total_seconds += kw['microseconds'] / 1e6\n+        # Construct timedelta from total seconds\n+        return datetime.timedelta(seconds=total_seconds)\ndiff --git a/test_parse_duration.py b/test_parse_duration.py\nnew file mode 100644\nindex 0000000000..2137d92d2b\n--- /dev/null\n+++ b/test_parse_duration.py\n@@ -0,0 +1,4 @@\n+import sys\n+sys.path.append(\"/testbed\")\n+from django.utils.dateparse import parse_duration\n+print(parse_duration(\"-1:30:45\"))\n"}