{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-12774", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex d9c9b0db04..1fe64493f8 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -689,8 +689,16 @@ class QuerySet:\n         \"\"\"\n         assert not self.query.is_sliced, \\\n             \"Cannot use 'limit' or 'offset' with in_bulk\"\n-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:\n-            raise ValueError(\"in_bulk()'s field_name must be a unique field but %r isn't.\" % field_name)\n+        if field_name != 'pk':\n+            field = self.model._meta.get_field(field_name)\n+            if not field.unique:\n+                # Check if the field is part of any UniqueConstraint\n+                is_unique_constraint = any(\n+                    isinstance(constraint, models.UniqueConstraint) and field_name in constraint.fields\n+                    for constraint in self.model._meta.constraints\n+                )\n+                if not is_unique_constraint:\n+                    raise ValueError(\"in_bulk()'s field_name must be a unique field but %r isn't.\" % field_name)\n         if id_list is not None:\n             if not id_list:\n                 return {}\ndiff --git a/test_app/__init__.py b/test_app/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/test_app/models.py b/test_app/models.py\nnew file mode 100644\nindex 0000000000..0814d9e66d\n--- /dev/null\n+++ b/test_app/models.py\n@@ -0,0 +1,9 @@\n+from django.db import models\n+\n+class Article(models.Model):\n+    slug = models.CharField(max_length=255)\n+\n+    class Meta:\n+        constraints = [\n+            models.UniqueConstraint(fields=[\"slug\"], name=\"article_slug_unq\")\n+        ]\n\\ No newline at end of file\ndiff --git a/test_in_bulk.py b/test_in_bulk.py\nnew file mode 100644\nindex 0000000000..2565e4173a\n--- /dev/null\n+++ b/test_in_bulk.py\n@@ -0,0 +1,17 @@\n+import os\n+import django\n+\n+# Minimal Django settings\n+os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"test_settings\")\n+django.setup()\n+\n+# Import after setup\n+from django.db import models\n+from test_app.models import Article\n+\n+# Test in_bulk() with the slug field\n+try:\n+    articles = Article.objects.in_bulk(field_name=\"slug\")\n+    print(\"Success! in_bulk() works with UniqueConstraint.\")\n+except Exception as e:\n+    print(f\"Error: {e}\")\n\\ No newline at end of file\ndiff --git a/test_settings.py b/test_settings.py\nnew file mode 100644\nindex 0000000000..1de5af5e47\n--- /dev/null\n+++ b/test_settings.py\n@@ -0,0 +1,12 @@\n+SECRET_KEY = 'dummy'\n+\n+DATABASES = {\n+    'default': {\n+        'ENGINE': 'django.db.backends.sqlite3',\n+        'NAME': ':memory:',\n+    }\n+}\n+\n+INSTALLED_APPS = ['django.contrib.contenttypes', 'django.contrib.auth', 'test_app']\n+\n+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\\ No newline at end of file\n"}