diff --git a/lib/matplotlib/mlab.py b/lib/matplotlib/mlab.py
index 3552904c3d..2eec639960 100644
--- a/lib/matplotlib/mlab.py
+++ b/lib/matplotlib/mlab.py
@@ -424,10 +424,10 @@ def _spectral_helper(x, y=None, NFFT=None, Fs=None, detrend_func=None,
             result /= Fs
             # Scale the spectrum by the norm of the window to compensate for
             # windowing loss; see Bendat & Piersol Sec 11.5.2.
-            result /= (np.abs(window)**2).sum()
+            result /= (window**2).sum()
         else:
             # In this case, preserve power in the segment, not amplitude
-            result /= np.abs(window).sum()**2
+            result /= window.sum()**2
 
     t = np.arange(NFFT/2, len(x) - NFFT/2 + 1, NFFT - noverlap)/Fs
 
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..3f8a1d6d09
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,21 @@
+import numpy as np
+from scipy import signal
+import sys
+sys.path.append('/testbed/lib/matplotlib')
+from mlab import _spectral_helper
+
+# Generate a test signal
+np.random.seed(0)
+x = np.random.randn(512)
+window = signal.windows.flattop(512)
+
+# Ensure the window length matches the data length
+assert len(window) == len(x)
+
+# Compute the PSD using the corrected _spectral_helper
+result, _, _ = _spectral_helper(
+    x, x, mode='psd', NFFT=len(window), window=window, scale_by_freq=True
+)
+
+# The corrected behavior should avoid the np.abs issue
+print("PSD computation completed with corrected window correction.")
\ No newline at end of file
