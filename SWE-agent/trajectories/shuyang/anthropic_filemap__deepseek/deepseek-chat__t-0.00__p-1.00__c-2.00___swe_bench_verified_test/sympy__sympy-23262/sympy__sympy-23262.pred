{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/lambdarepr.py b/sympy/printing/lambdarepr.py\nindex b9227d8d7a..5374cef741 100644\n--- a/sympy/printing/lambdarepr.py\n+++ b/sympy/printing/lambdarepr.py\n@@ -69,6 +69,12 @@ def _print_Pow(self, expr, **kwargs):\n         # isolated from PythonCodePrinter?\n         return super(PythonCodePrinter, self)._print_Pow(expr, **kwargs)\n \n+    def _print_Tuple(self, expr):\n+        if len(expr.args) == 1:\n+            return \"(%s,)\" % self._print(expr.args[0])\n+        else:\n+            return \"(%s)\" % self.stringify(expr.args, \", \")\n+\n \n # numexpr works by altering the string passed to numexpr.evaluate\n # rather than by populating a namespace.  Thus a special printer...\ndiff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex da67263b19..b71af9aa49 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -959,9 +959,11 @@ def _recursive_to_string(doprint, arg):\n             left, right = \"[]\"\n         elif isinstance(arg, tuple):\n             left, right = \"()\"\n+            if len(arg) == 1:\n+                return \"(%s,)\" % _recursive_to_string(doprint, arg[0])\n         else:\n             raise NotImplementedError(\"unhandled type: %s, %s\" % (type(arg), arg))\n-        return left +', '.join(_recursive_to_string(doprint, e) for e in arg) + right\n+        return left + ', '.join(_recursive_to_string(doprint, e) for e in arg) + right\n     elif isinstance(arg, str):\n         return arg\n     else:\n"}