diff --git a/__init__.py b/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/models.py b/models.py
new file mode 100644
index 0000000000..73800a2204
--- /dev/null
+++ b/models.py
@@ -0,0 +1,9 @@
+from django.db import models
+from positions.fields import PositionField
+
+class Thing(models.Model):
+    number = models.IntegerField(default=0)
+    order = PositionField()
+
+    class Meta:
+        app_label = 'reproduce_error'
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..fe54a822ab
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,47 @@
+import os
+import django
+from django.conf import settings
+
+if not settings.configured:
+    # Minimal Django settings
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.sessions',
+            'positions',
+            'reproduce_error',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+    )
+    django.setup()
+
+# Define the model after setup
+from django.db import models
+from positions.fields import PositionField
+
+class Thing(models.Model):
+    number = models.IntegerField(default=0)
+    order = PositionField()
+
+    class Meta:
+        app_label = 'reproduce_error'
+
+# Register the admin
+from django.contrib import admin
+
+@admin.register(Thing)
+class ThingAdmin(admin.ModelAdmin):
+    list_display = ['number', 'order']
+
+# Validate the ModelAdmin
+from django.contrib.admin.sites import AdminSite
+site = AdminSite()
+site.register(Thing, ThingAdmin)
+print("Validation passed!")
\ No newline at end of file
