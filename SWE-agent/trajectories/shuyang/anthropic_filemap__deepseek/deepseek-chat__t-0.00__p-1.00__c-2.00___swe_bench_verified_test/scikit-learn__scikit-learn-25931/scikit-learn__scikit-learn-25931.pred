{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "scikit-learn__scikit-learn-25931", "model_patch": "diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py\nindex 4d6c1c3f0..9f5419d0c 100644\n--- a/sklearn/ensemble/_iforest.py\n+++ b/sklearn/ensemble/_iforest.py\n@@ -5,6 +5,7 @@\n import numbers\n import numpy as np\n from scipy.sparse import issparse\n+import warnings\n from warnings import warn\n from numbers import Integral, Real\n \n@@ -345,7 +346,15 @@ class IsolationForest(OutlierMixin, BaseBagging):\n             return self\n \n         # else, define offset_ wrt contamination parameter\n-        self.offset_ = np.percentile(self.score_samples(X), 100.0 * self.contamination)\n+        # Store feature names to avoid losing them during score_samples\n+        feature_names_in = getattr(self, 'feature_names_in_', None)\n+        # Temporarily disable feature name validation during score_samples\n+        with warnings.catch_warnings():\n+            warnings.simplefilter(\"ignore\", UserWarning)\n+            self.offset_ = np.percentile(self.score_samples(X), 100.0 * self.contamination)\n+        # Restore feature names if they were present\n+        if feature_names_in is not None:\n+            self.feature_names_in_ = feature_names_in\n \n         return self\n \n"}