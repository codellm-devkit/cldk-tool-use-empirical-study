{"model_name_or_path": "deepseek-chat__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex d17232e4ec..fcc8837c04 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -963,11 +963,31 @@ class RenameIndex(IndexOperation):\n \n         to_model_state = to_state.models[app_label, self.model_name_lower]\n         new_index = to_model_state.get_index_by_name(self.new_name)\n+        \n+        # Check if the index with new_name already exists\n+        existing_index_names = schema_editor._constraint_names(model, index=True)\n+        if self.new_name in existing_index_names:\n+            return  # Skip renaming if the index already exists\n+            \n         schema_editor.rename_index(model, old_index, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n+            # For unnamed indexes, restore the old auto-generated name.\n+            from_model = from_state.apps.get_model(app_label, self.model_name)\n+            columns = [\n+                from_model._meta.get_field(field).column for field in self.old_fields\n+            ]\n+            matching_index_name = schema_editor._constraint_names(\n+                from_model, column_names=columns, index=True\n+            )\n+            if len(matching_index_name) != 1:\n+                raise ValueError(\n+                    \"Found wrong number (%s) of indexes for %s(%s).\"\n+                    % (len(matching_index_name), from_model._meta.db_table, \", \".join(columns))\n+            old_index = models.Index(fields=self.old_fields, name=matching_index_name[0])\n+            new_index = models.Index(fields=self.old_fields, name=self.new_name)\n+            schema_editor.rename_index(from_model, new_index, old_index)\n             return\n \n         self.new_name_lower, self.old_name_lower = (\n"}