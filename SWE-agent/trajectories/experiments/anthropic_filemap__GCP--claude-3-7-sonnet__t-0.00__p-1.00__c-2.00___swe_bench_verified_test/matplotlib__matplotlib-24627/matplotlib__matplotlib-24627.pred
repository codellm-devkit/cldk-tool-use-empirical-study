{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-24627", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex ecb6f5e209..e15c21e4fc 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6446,6 +6446,8 @@ default: :rc:`scatter.edgecolors`\n         \"\"\"\n         kwargs['filled'] = False\n         contours = mcontour.QuadContourSet(self, *args, **kwargs)\n+        # Register the ContourSet object\n+        self._contourset_objects.append(contours)\n         self._request_autoscale_view()\n         return contours\n \n@@ -6462,6 +6464,8 @@ default: :rc:`scatter.edgecolors`\n         \"\"\"\n         kwargs['filled'] = True\n         contours = mcontour.QuadContourSet(self, *args, **kwargs)\n+        # Register the ContourSet object\n+        self._contourset_objects.append(contours)\n         self._request_autoscale_view()\n         return contours\n \ndiff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 90b0bf117e..f5838f89ec 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -584,6 +584,8 @@ class _AxesBase(martist.Artist):\n                  box_aspect=None,\n                  **kwargs\n                  ):\n+        # List to keep track of ContourSet objects\n+        self._contourset_objects = []\n         \"\"\"\n         Build an Axes in a figure.\n \n@@ -1283,6 +1285,19 @@ class _AxesBase(martist.Artist):\n \n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        \n+        # Unset the .axes attribute of all artists in the axes\n+        for artist in self._children:\n+            if hasattr(artist, 'axes') and artist.axes is self:\n+                artist.axes = None\n+                \n+        # Unset the .axes attribute of all ContourSet objects\n+        for cs in self._contourset_objects:\n+            if hasattr(cs, 'axes') and cs.axes is self:\n+                cs.axes = None\n+                \n+        # Clear the list of ContourSet objects\n+        self._contourset_objects = []\n \n         for axis in self._axis_map.values():\n             axis.clear()  # Also resets the scale to linear.\ndiff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 144eadeae2..bc06d16512 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1369,6 +1369,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n         super().remove()\n         for coll in self.collections:\n             coll.remove()\n+        # Set axes to None when removed\n+        if hasattr(self, 'axes'):\n+            self.axes = None\n \n \n @_docstring.dedent_interpd\ndiff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 6c18ba1a64..c5e103ccbd 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -945,9 +945,23 @@ default: %(va)s\n             subfig.clear(keep_observers=keep_observers)\n         self.subfigs = []\n \n+        # Get all artists that are directly attached to the figure\n+        # (not those attached to axes)\n+        figure_artists = [artist for artist in self.get_children()\n+                         if hasattr(artist, 'figure') and artist.figure is self\n+                         and not hasattr(artist, 'axes')]\n+\n         for ax in tuple(self.axes):  # Iterate over the copy.\n+            # Unset the .figure attribute of all artists in the axes\n+            for artist in ax.get_children():\n+                if hasattr(artist, 'figure') and artist.figure is self:\n+                    artist.figure = None\n             ax.clear()\n             self.delaxes(ax)  # Remove ax from self._axstack.\n+            \n+        # Now unset the .figure attribute of figure-level artists\n+        for artist in figure_artists:\n+            artist.figure = None\n \n         self.artists = []\n         self.lines = []\n"}