{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-11206", "model_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex 88b35fc435..284be1495c 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -30,6 +30,15 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',\n         # Format values with more than 200 digits (an arbitrary cutoff) using\n         # scientific notation to avoid high memory usage in {:f}'.format().\n         _, digits, exponent = number.as_tuple()\n+        \n+        # When decimal_pos is specified and the number would normally be formatted in scientific notation\n+        # (due to having more than 200 digits), check if it's smaller than what can be represented with decimal_pos\n+        if decimal_pos is not None and abs(exponent) + len(digits) > 200:\n+            # If the absolute value is smaller than the smallest value that can be represented\n+            # with the given decimal positions, return \"0\" with the appropriate number of decimal places\n+            if number != 0 and abs(number) < 10**(-decimal_pos):\n+                return ('0' if number >= 0 else '-0') + decimal_sep + '0' * decimal_pos\n+        \n         if abs(exponent) + len(digits) > 200:\n             number = '{:e}'.format(number)\n             coefficient, exponent = number.split('e')\n"}