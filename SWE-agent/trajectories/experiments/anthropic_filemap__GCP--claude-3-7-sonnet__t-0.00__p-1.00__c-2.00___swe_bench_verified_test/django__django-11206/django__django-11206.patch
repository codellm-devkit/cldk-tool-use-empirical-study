diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..284be1495c 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -30,6 +30,15 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
         _, digits, exponent = number.as_tuple()
+        
+        # When decimal_pos is specified and the number would normally be formatted in scientific notation
+        # (due to having more than 200 digits), check if it's smaller than what can be represented with decimal_pos
+        if decimal_pos is not None and abs(exponent) + len(digits) > 200:
+            # If the absolute value is smaller than the smallest value that can be represented
+            # with the given decimal positions, return "0" with the appropriate number of decimal places
+            if number != 0 and abs(number) < 10**(-decimal_pos):
+                return ('0' if number >= 0 else '-0') + decimal_sep + '0' * decimal_pos
+        
         if abs(exponent) + len(digits) > 200:
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
