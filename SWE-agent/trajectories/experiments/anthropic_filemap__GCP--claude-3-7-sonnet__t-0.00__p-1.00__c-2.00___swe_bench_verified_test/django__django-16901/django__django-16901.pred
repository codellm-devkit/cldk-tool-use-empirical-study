{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-16901", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex aaab1730b7..5402226fd0 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -129,14 +129,16 @@ class WhereNode(tree.Node):\n             # Convert if the database doesn't support XOR:\n             #   a XOR b XOR c XOR ...\n             # to:\n-            #   (a OR b OR c OR ...) AND (a + b + c + ...) == 1\n-            lhs = self.__class__(self.children, OR)\n+            #   (a + b + c + ...) % 2 == 1\n+            # This checks if an odd number of conditions are true, which is the correct\n+            # behavior for XOR with any number of arguments.\n             rhs_sum = reduce(\n                 operator.add,\n                 (Case(When(c, then=1), default=0) for c in self.children),\n             )\n-            rhs = Exact(1, rhs_sum)\n-            return self.__class__([lhs, rhs], AND, self.negated).as_sql(\n+            # Use modulo 2 to check for odd number of true conditions\n+            rhs = Exact(1, rhs_sum % 2)\n+            return self.__class__([rhs], AND, self.negated).as_sql(\n                 compiler, connection\n             )\n \n"}