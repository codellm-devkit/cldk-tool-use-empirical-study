diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py
index 136ed5a478..ce371b8d9d 100644
--- a/sympy/combinatorics/permutations.py
+++ b/sympy/combinatorics/permutations.py
@@ -897,8 +897,19 @@ def __new__(cls, *args, **kwargs):
         temp = flatten(args)
         if has_dups(temp):
             if is_cycle:
-                raise ValueError('there were repeated elements; to resolve '
-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
+                # Instead of raising an error, we'll apply the cycles in left-to-right order
+                # Create a permutation by applying each cycle in sequence
+                c = Cycle()
+                for ci in args:
+                    c = c(*ci)
+                aform = c.list()
+                if size and size > len(aform):
+                    aform.extend(list(range(len(aform), size)))
+                size = len(aform)
+                obj = Basic.__new__(cls, aform)
+                obj._array_form = aform
+                obj._size = size
+                return obj
             else:
                 raise ValueError('there were repeated elements.')
         temp = set(temp)
