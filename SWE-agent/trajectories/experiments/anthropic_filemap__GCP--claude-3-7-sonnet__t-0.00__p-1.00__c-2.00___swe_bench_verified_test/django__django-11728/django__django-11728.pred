{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-11728", "model_patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\nindex 1ce4594501..b7cf6a20c0 100644\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -166,11 +166,19 @@ def replace_named_groups(pattern):\n     for start, end, group_name in named_group_indices:\n         # Handle nested parentheses, e.g. '^(?P<a>(x|y))/b'.\n         unmatched_open_brackets, prev_char = 1, None\n+        \n+        # If we're at the end of the pattern, we can't iterate further\n+        if end >= len(pattern):\n+            continue\n+            \n+        # Check if this is the last part of the pattern\n+        is_last_part = True\n         for idx, val in enumerate(pattern[end:]):\n             # If brackets are balanced, the end of the string for the current\n             # named capture group pattern has been reached.\n             if unmatched_open_brackets == 0:\n                 group_pattern_and_name.append((pattern[start:end + idx], group_name))\n+                is_last_part = False\n                 break\n \n             # Check for unescaped `(` and `)`. They mark the start and end of a\n@@ -180,6 +188,11 @@ def replace_named_groups(pattern):\n             elif val == ')' and prev_char != '\\\\':\n                 unmatched_open_brackets -= 1\n             prev_char = val\n+        \n+        # If we've gone through the entire remaining pattern without finding a balanced bracket,\n+        # this group extends to the end of the pattern\n+        if is_last_part:\n+            group_pattern_and_name.append((pattern[start:], group_name))\n \n     # Replace the string for named capture groups with their group names.\n     for group_pattern, group_name in group_pattern_and_name:\n"}