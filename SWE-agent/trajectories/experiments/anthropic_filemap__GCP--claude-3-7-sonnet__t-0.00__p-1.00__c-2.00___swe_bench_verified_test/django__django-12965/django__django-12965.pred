{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 29e33c075f..79619f886a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1410,8 +1410,15 @@ class SQLDeleteCompiler(SQLCompiler):\n         return sum(self.query.alias_refcount[t] > 0 for t in self.query.alias_map) == 1\n \n     def _as_sql(self, query):\n+        # Get the base table name\n+        if query.base_table is None and hasattr(query, 'model') and query.model is not None:\n+            # If base_table is None but we have a model, use the model's db_table\n+            base_table = query.model._meta.db_table\n+        else:\n+            base_table = query.base_table\n+            \n         result = [\n-            'DELETE FROM %s' % self.quote_name_unless_alias(query.base_table)\n+            'DELETE FROM %s' % self.quote_name_unless_alias(base_table)\n         ]\n         where, params = self.compile(query.where)\n         if where:\n@@ -1423,8 +1430,17 @@ class SQLDeleteCompiler(SQLCompiler):\n         Create the SQL for this query. Return the SQL string and list of\n         parameters.\n         \"\"\"\n+        # For simple DELETE queries without any WHERE conditions, use the direct DELETE FROM syntax\n+        # This avoids issues with MySQL LOCK TABLES and improves performance\n+        if not self.query.where.children:\n+            # This handles Model.objects.all().delete() - simple DELETE FROM without subquery\n+            return self._as_sql(self.query)\n+            \n+        # For queries with WHERE conditions but a single table, use direct DELETE FROM with WHERE\n         if self.single_alias:\n             return self._as_sql(self.query)\n+            \n+        # For complex queries with multiple tables, use a subquery\n         innerq = self.query.clone()\n         innerq.__class__ = Query\n         innerq.clear_select_clause()\n"}