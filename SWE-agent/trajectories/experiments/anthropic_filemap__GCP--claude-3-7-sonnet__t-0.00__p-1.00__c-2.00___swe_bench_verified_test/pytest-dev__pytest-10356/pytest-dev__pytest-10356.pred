{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex 800a25c92..e4775325d 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -360,6 +360,20 @@ def get_unpacked_marks(obj: object) -> Iterable[Mark]:\n     mark_list = getattr(obj, \"pytestmark\", [])\n     if not isinstance(mark_list, list):\n         mark_list = [mark_list]\n+    \n+    # If this is a class, also consider marks from parent classes in the MRO\n+    if inspect.isclass(obj):\n+        # Get all parent classes in the MRO except the class itself and 'object'\n+        for parent in obj.__mro__[1:-1]:  # Skip the class itself (index 0) and 'object' (last)\n+            parent_marks = getattr(parent, \"pytestmark\", [])\n+            if parent_marks:\n+                if not isinstance(parent_marks, list):\n+                    parent_marks = [parent_marks]\n+                # Add parent marks that aren't already in the list\n+                for mark in parent_marks:\n+                    if mark not in mark_list:\n+                        mark_list.append(mark)\n+    \n     return normalize_mark_list(mark_list)\n \n \n"}