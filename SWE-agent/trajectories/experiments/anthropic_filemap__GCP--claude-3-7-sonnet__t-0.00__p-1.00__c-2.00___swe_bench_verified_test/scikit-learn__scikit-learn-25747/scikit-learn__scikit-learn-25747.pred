{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 335773c6a..4d59cd929 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,4 +1,5 @@\n from functools import wraps\n+import warnings\n \n from scipy.sparse import issparse\n \n@@ -52,11 +53,20 @@ def _wrap_in_pandas_container(\n \n     pd = check_pandas_support(\"Setting output container to 'pandas'\")\n \n-    if isinstance(data_to_wrap, pd.DataFrame):\n-        if columns is not None:\n+    if isinstance(data_to_wrap, pd.DataFrame) or isinstance(data_to_wrap, pd.Series):\n+        # Only set index if the lengths match to avoid ValueError\n+        if columns is not None and isinstance(data_to_wrap, pd.DataFrame):\n             data_to_wrap.columns = columns\n         if index is not None:\n-            data_to_wrap.index = index\n+            if len(data_to_wrap) == len(index):\n+                data_to_wrap.index = index\n+            else:\n+                warnings.warn(\n+                    f\"Index length mismatch: transformer output has {len(data_to_wrap)} \"\n+                    f\"elements, but original input has {len(index)} elements. \"\n+                    \"The original index will not be used.\",\n+                    UserWarning,\n+                )\n         return data_to_wrap\n \n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n"}