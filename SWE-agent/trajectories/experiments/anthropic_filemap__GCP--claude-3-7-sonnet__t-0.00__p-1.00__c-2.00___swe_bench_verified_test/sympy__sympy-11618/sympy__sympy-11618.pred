{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-11618", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 593048464b..55d021a36a 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -265,9 +265,20 @@ def distance(self, p):\n         >>> p3.distance(Point(0, 0))\n         sqrt(x**2 + y**2)\n \n+        >>> Point(2, 0).distance(Point(1, 0, 2))\n+        sqrt(5)\n+\n         \"\"\"\n-        return sqrt(sum([(a - b)**2 for a, b in zip(\n-            self.args, p.args if isinstance(p, Point) else p)]))\n+        p_args = p.args if isinstance(p, Point) else p\n+        \n+        # Get the maximum dimension between the two points\n+        max_len = max(len(self.args), len(p_args))\n+        \n+        # Extend the shorter point with zeros to match dimensions\n+        self_coords = list(self.args) + [S.Zero] * (max_len - len(self.args))\n+        p_coords = list(p_args) + [S.Zero] * (max_len - len(p_args))\n+        \n+        return sqrt(sum([(a - b)**2 for a, b in zip(self_coords, p_coords)]))\n \n     def taxicab_distance(self, p):\n         \"\"\"The Taxicab Distance from self to point p.\n"}