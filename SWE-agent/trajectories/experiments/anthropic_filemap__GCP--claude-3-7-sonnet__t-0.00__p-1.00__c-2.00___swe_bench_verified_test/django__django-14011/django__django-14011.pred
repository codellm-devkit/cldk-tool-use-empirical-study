{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-14011", "model_patch": "diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py\nindex 14dab517c9..d8b44b4ef4 100644\n--- a/django/core/servers/basehttp.py\n+++ b/django/core/servers/basehttp.py\n@@ -80,6 +80,19 @@ class WSGIServer(simple_server.WSGIServer):\n class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):\n     \"\"\"A threaded version of the WSGIServer\"\"\"\n     daemon_threads = True\n+    \n+    def process_request_thread(self, request, client_address):\n+        \"\"\"Override to close database connections when a thread finishes.\"\"\"\n+        from django.db import connections\n+        try:\n+            self.finish_request(request, client_address)\n+            self.shutdown_request(request)\n+        except Exception:\n+            self.handle_error(request, client_address)\n+            self.shutdown_request(request)\n+        finally:\n+            # Close all database connections in this thread\n+            connections.close_all()\n \n \n class ServerHandler(simple_server.ServerHandler):\ndiff --git a/django/test/testcases.py b/django/test/testcases.py\nindex 92f566b7b0..aab35da6c1 100644\n--- a/django/test/testcases.py\n+++ b/django/test/testcases.py\n@@ -1476,6 +1476,10 @@ class _MediaFilesHandler(FSFilesHandler):\n class LiveServerThread(threading.Thread):\n     \"\"\"Thread for running a live http server while the tests are running.\"\"\"\n \n+    # Import the custom server class that closes database connections\n+    from django.core.servers.basehttp import ThreadedWSGIServer\n+    \n+    # Use ThreadedWSGIServer as the default for backward compatibility\n     server_class = ThreadedWSGIServer\n \n     def __init__(self, host, static_handler, connections_override=None, port=0):\n"}