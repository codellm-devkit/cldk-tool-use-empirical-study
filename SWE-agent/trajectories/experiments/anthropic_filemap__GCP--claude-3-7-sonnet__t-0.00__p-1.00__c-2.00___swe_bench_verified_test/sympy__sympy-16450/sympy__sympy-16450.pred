{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-16450", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex c6b511f206..5a33527534 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -251,8 +251,24 @@ def posify(eq):\n             eq[i] = e.subs(reps)\n         return f(eq), {r: s for s, r in reps.items()}\n \n-    reps = {s: Dummy(s.name, positive=True)\n-                 for s in eq.free_symbols if s.is_positive is None}\n+    # Create a dictionary of assumptions to preserve\n+    preserve_assumptions = ['finite', 'infinite', 'integer', 'rational', 'prime', 'even', 'odd']\n+    \n+    reps = {}\n+    for s in eq.free_symbols:\n+        if s.is_positive is None:\n+            # Start with positive=True assumption\n+            assumptions = {'positive': True}\n+            \n+            # Preserve other important assumptions from the original symbol\n+            for assumption in preserve_assumptions:\n+                is_assumption = getattr(s, 'is_' + assumption)\n+                if is_assumption is not None:\n+                    assumptions[assumption] = is_assumption\n+            \n+            # Create a new Dummy with the preserved assumptions\n+            reps[s] = Dummy(s.name, **assumptions)\n+    \n     eq = eq.subs(reps)\n     return eq, {r: s for s, r in reps.items()}\n \n"}