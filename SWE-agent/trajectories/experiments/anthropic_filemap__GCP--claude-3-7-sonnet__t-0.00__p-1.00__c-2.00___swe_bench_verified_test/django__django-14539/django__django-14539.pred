{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 3bc02b8dd3..54de0b282c 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -277,15 +277,28 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n                     middle = middle[:-len(closing)]\n                     trail = closing + trail\n                     trimmed_something = True\n+            \n             # Trim trailing punctuation (after trimming wrapping punctuation,\n             # as encoded entities contain ';'). Unescape entities to avoid\n             # breaking them by removing ';'.\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n+            \n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n-                trimmed_something = True\n+                # Handle the specific case in the PR description:\n+                # When a URL contains an HTML entity like &lt followed by punctuation\n+                \n+                # Check if the last character is a punctuation mark\n+                if middle and middle[-1] in TRAILING_PUNCTUATION_CHARS:\n+                    trail = middle[-1] + trail\n+                    middle = middle[:-1]\n+                    trimmed_something = True\n+                else:\n+                    # Fall back to the original behavior\n+                    trail = middle[len(stripped):] + trail\n+                    middle = middle[:len(stripped)]\n+                    trimmed_something = True\n+                \n         return lead, middle, trail\n \n     def is_email_simple(value):\n"}