{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "scikit-learn__scikit-learn-26194", "model_patch": "diff --git a/sklearn/metrics/_ranking.py b/sklearn/metrics/_ranking.py\nindex 0cdead923..7f4b6ac94 100644\n--- a/sklearn/metrics/_ranking.py\n+++ b/sklearn/metrics/_ranking.py\n@@ -1083,7 +1083,15 @@ def roc_curve(\n     # to make sure that the curve starts at (0, 0)\n     tps = np.r_[0, tps]\n     fps = np.r_[0, fps]\n-    thresholds = np.r_[thresholds[0] + 1, thresholds]\n+    \n+    # If all thresholds are within [0, 1], we're likely dealing with probability estimates\n+    # In this case, we should not add a threshold > 1\n+    if thresholds.size > 0 and thresholds.max() <= 1:\n+        # For probability estimates, we clip the threshold to 1.0\n+        thresholds = np.r_[1.0, thresholds]\n+    else:\n+        # For other types of scores, we use the original formula\n+        thresholds = np.r_[thresholds[0] + 1, thresholds]\n \n     if fps[-1] <= 0:\n         warnings.warn(\n"}