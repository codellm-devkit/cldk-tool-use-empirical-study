{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-11964", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0a5e5ff673..a6c1d04134 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1,4 +1,5 @@\n import copy\n+import enum\n import inspect\n import warnings\n from functools import partialmethod\n@@ -431,6 +432,9 @@ class Model(metaclass=ModelBase):\n             for val, field in zip(args, fields_iter):\n                 if val is _DEFERRED:\n                     continue\n+                # Convert enum values to their primitive types\n+                if isinstance(val, enum.Enum):\n+                    val = val.value\n                 _setattr(self, field.attname, val)\n         else:\n             # Slower, kwargs-ready version.\n@@ -438,6 +442,9 @@ class Model(metaclass=ModelBase):\n             for val, field in zip(args, fields_iter):\n                 if val is _DEFERRED:\n                     continue\n+                # Convert enum values to their primitive types\n+                if isinstance(val, enum.Enum):\n+                    val = val.value\n                 _setattr(self, field.attname, val)\n                 kwargs.pop(field.name, None)\n \n@@ -482,6 +489,9 @@ class Model(metaclass=ModelBase):\n                     _setattr(self, field.name, rel_obj)\n             else:\n                 if val is not _DEFERRED:\n+                    # Convert enum values to their primitive types\n+                    if isinstance(val, enum.Enum):\n+                        val = val.value\n                     _setattr(self, field.attname, val)\n \n         if kwargs:\ndiff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex d610dc86f0..ffed485881 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2,6 +2,7 @@ import collections.abc\n import copy\n import datetime\n import decimal\n+import enum\n import operator\n import uuid\n import warnings\n@@ -792,6 +793,9 @@ class Field(RegisterLookupMixin):\n         \"\"\"Perform preliminary non-db specific value checks and conversions.\"\"\"\n         if isinstance(value, Promise):\n             value = value._proxy____cast()\n+        # Handle TextChoices and IntegerChoices enum values\n+        if isinstance(value, enum.Enum):\n+            value = value.value\n         return value\n \n     def get_db_prep_value(self, value, connection, prepared=False):\ndiff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 189fb4fa44..55d2e0d1e8 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -6,6 +6,7 @@ large and/or so that they can be used by other modules without getting into\n circular import difficulties.\n \"\"\"\n import copy\n+import enum\n import functools\n import inspect\n from collections import namedtuple\n@@ -136,7 +137,12 @@ class DeferredAttribute:\n                 instance.refresh_from_db(fields=[field_name])\n                 val = getattr(instance, field_name)\n             data[field_name] = val\n-        return data[field_name]\n+        \n+        # Handle TextChoices and IntegerChoices enum values\n+        value = data[field_name]\n+        if isinstance(value, enum.Enum):\n+            return value.value\n+        return value\n \n     def _check_parent_chain(self, instance):\n         \"\"\"\n"}