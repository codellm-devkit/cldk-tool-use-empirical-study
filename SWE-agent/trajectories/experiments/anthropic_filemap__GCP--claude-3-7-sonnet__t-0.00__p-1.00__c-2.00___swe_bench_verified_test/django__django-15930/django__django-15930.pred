{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 822968ef56..9de32e14c6 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1298,9 +1298,37 @@ class When(Expression):\n         connection.ops.check_expression_support(self)\n         template_params = extra_context\n         sql_params = []\n-        condition_sql, condition_params = compiler.compile(self.condition)\n-        template_params[\"condition\"] = condition_sql\n-        sql_params.extend(condition_params)\n+        \n+        # Special case for negated Q(field__in=[])\n+        if (isinstance(self.condition, Q) and \n+            self.condition.negated and \n+            len(self.condition.children) == 1 and \n+            isinstance(self.condition.children[0], tuple) and \n+            self.condition.children[0][0].endswith('__in') and \n+            isinstance(self.condition.children[0][1], list) and \n+            len(self.condition.children[0][1]) == 0):\n+            # This is ~Q(field__in=[]), which should be True for all rows\n+            template_params[\"condition\"] = \"1 = 1\"  # Always true condition\n+        else:\n+            try:\n+                condition_sql, condition_params = compiler.compile(self.condition)\n+                # Fix for empty condition string\n+                if not condition_sql.strip():\n+                    # If the condition is negated, it should be True for all rows\n+                    if getattr(self.condition, 'negated', False):\n+                        template_params[\"condition\"] = \"1 = 1\"  # Always true condition\n+                    else:\n+                        template_params[\"condition\"] = \"0 = 1\"  # Always false condition\n+                else:\n+                    template_params[\"condition\"] = condition_sql\n+                    sql_params.extend(condition_params)\n+            except EmptyResultSet:\n+                # If we get here with a negated condition, it should be True for all rows\n+                if getattr(self.condition, 'negated', False):\n+                    template_params[\"condition\"] = \"1 = 1\"  # Always true condition\n+                else:\n+                    raise\n+                \n         result_sql, result_params = compiler.compile(self.result)\n         template_params[\"result\"] = result_sql\n         sql_params.extend(result_params)\n"}