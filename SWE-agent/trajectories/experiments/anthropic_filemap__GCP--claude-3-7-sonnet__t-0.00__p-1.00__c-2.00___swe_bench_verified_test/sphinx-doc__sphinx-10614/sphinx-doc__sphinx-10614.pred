{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sphinx-doc__sphinx-10614", "model_patch": "diff --git a/sphinx/ext/graphviz.py b/sphinx/ext/graphviz.py\nindex 8b21d9e3b..e63110d43 100644\n--- a/sphinx/ext/graphviz.py\n+++ b/sphinx/ext/graphviz.py\n@@ -234,15 +234,34 @@ def fix_svg_relative_paths(self: SphinxTranslator, filepath: str) -> None:\n             # not a relative link\n             continue\n \n-        old_path = path.join(self.builder.outdir, url)\n-        new_path = path.relpath(\n-            old_path,\n-            start=path.join(self.builder.outdir, self.builder.imgpath),\n-        )\n-        modified_url = urlunsplit((scheme, hostname, new_path, query, fragment))\n-\n-        element.set(href_name, modified_url)\n-        modified = True\n+        # For SVG files in _images directory, we need to adjust the relative paths\n+        # to account for the fact that the SVG file is in a different directory\n+        # than the HTML file that includes it\n+        \n+        # If the URL starts with \"../\", it's a relative URL that was generated\n+        # by the inheritance diagram extension\n+        if url.startswith(\"../\"):\n+            # Remove the leading \"../\" as we'll recalculate the correct relative path\n+            url = url[3:]\n+            \n+            # Calculate the correct relative path from _images to the target URL\n+            # For SVG files in _images directory, we need to go up one level\n+            # to get to the document root, then follow the URL\n+            new_path = \"../\" + url\n+            \n+            modified_url = urlunsplit((scheme, hostname, new_path, query, fragment))\n+            element.set(href_name, modified_url)\n+            modified = True\n+        else:\n+            # Handle other relative URLs as before\n+            old_path = path.join(self.builder.outdir, url)\n+            new_path = path.relpath(\n+                old_path,\n+                start=path.join(self.builder.outdir, self.builder.imgpath),\n+            )\n+            modified_url = urlunsplit((scheme, hostname, new_path, query, fragment))\n+            element.set(href_name, modified_url)\n+            modified = True\n \n     if modified:\n         tree.write(filepath)\n"}