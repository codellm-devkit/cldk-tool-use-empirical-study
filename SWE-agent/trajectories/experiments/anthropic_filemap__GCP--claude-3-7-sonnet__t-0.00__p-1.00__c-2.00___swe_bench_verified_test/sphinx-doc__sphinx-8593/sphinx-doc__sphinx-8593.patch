diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py
index 79d7e4f46..ddb589617 100644
--- a/sphinx/domains/python.py
+++ b/sphinx/domains/python.py
@@ -272,6 +272,12 @@ class PyXrefMixin:
         result = super().make_xref(rolename, domain, target,  # type: ignore
                                    innernode, contnode, env)
         result['refspecific'] = True
+        
+        # Set the py:module attribute from env.temp_data if available
+        # This is needed for field references like :type: and :rtype:
+        if env and '.' not in target and 'py:module' in env.temp_data:
+            result['py:module'] = env.temp_data['py:module']
+            
         if target.startswith(('.', '~')):
             prefix, result['reftarget'] = target[0], target[1:]
             if prefix == '.':
@@ -1024,6 +1030,8 @@ class PyCurrentModule(SphinxDirective):
             self.env.ref_context.pop('py:module', None)
         else:
             self.env.ref_context['py:module'] = modname
+            # Also set in temp_data for field references
+            self.env.temp_data['py:module'] = modname
         return []
 
 
@@ -1268,9 +1276,22 @@ class PythonDomain(Domain):
                     else:
                         # "fuzzy" searching mode
                         searchname = '.' + name
-                        matches = [(oname, self.objects[oname]) for oname in self.objects
-                                   if oname.endswith(searchname) and
-                                   self.objects[oname].objtype in objtypes]
+                        all_matches = [(oname, self.objects[oname]) for oname in self.objects
+                                      if oname.endswith(searchname) and
+                                      self.objects[oname].objtype in objtypes]
+                        
+                        # For unqualified names, prioritize matches in the current module
+                        if '.' not in name and modname and all_matches:
+                            module_matches = [match for match in all_matches 
+                                             if match[0].startswith(modname + '.')]
+                            if module_matches:
+                                # If we found matches in the current module, use only those
+                                matches = [module_matches[0]]
+                            else:
+                                # Otherwise, use all matches
+                                matches = all_matches
+                        else:
+                            matches = all_matches
         else:
             # NOTE: searching for exact match, object type is not considered
             if name in self.objects:
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
