diff --git a/django/urls/base.py b/django/urls/base.py
index 0e1c3d909c..eafd8d58e0 100644
--- a/django/urls/base.py
+++ b/django/urls/base.py
@@ -92,7 +92,8 @@ reverse_lazy = lazy(reverse, str)
 
 def clear_url_caches():
     get_callable.cache_clear()
-    get_resolver.cache_clear()
+    from django.urls.resolvers import _get_resolver
+    _get_resolver.cache_clear()
     get_ns_resolver.cache_clear()
 
 
diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 247e3680c0..dd95ad1315 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -63,11 +63,22 @@ class ResolverMatch:
         )
 
 
+# Helper function to create the URLResolver
+def _create_resolver(urlconf):
+    return URLResolver(RegexPattern(r'^/'), urlconf)
+
+# Look up settings.ROOT_URLCONF before the memoized function call
+# to avoid creating multiple URLResolver instances
 @functools.lru_cache(maxsize=None)
+def _get_resolver(urlconf):
+    return _create_resolver(urlconf)
+
 def get_resolver(urlconf=None):
     if urlconf is None:
         urlconf = settings.ROOT_URLCONF
-    return URLResolver(RegexPattern(r'^/'), urlconf)
+    # This ensures that get_resolver(None) and get_resolver(settings.ROOT_URLCONF)
+    # return the same instance
+    return _get_resolver(urlconf)
 
 
 @functools.lru_cache(maxsize=None)
