{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sphinx-doc__sphinx-7757", "model_patch": "diff --git a/setup.py b/setup.py\nindex 5e822fe9b..77b63df38 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..fc343a45f 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,21 +520,37 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+    # Count total positional parameters (positional-only + positional-or-keyword)\n+    total_positional = 0\n+    if hasattr(args, \"posonlyargs\"):\n+        total_positional += len(args.posonlyargs)\n+    total_positional += len(args.args)\n+    \n+    # Assign defaults from right to left to positional parameters\n+    defaults_dict = {}\n+    if args.defaults:\n+        defaults_start_idx = total_positional - len(args.defaults)\n+        for i, default in enumerate(args.defaults):\n+            param_idx = defaults_start_idx + i\n+            defaults_dict[param_idx] = ast_unparse(default)\n+    \n+    # Process positional-only parameters\n+    current_idx = 0\n     if hasattr(args, \"posonlyargs\"):\n         for arg in args.posonlyargs:  # type: ignore\n+            default = defaults_dict.get(current_idx, Parameter.empty)\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n-\n-    for i, arg in enumerate(args.args):\n-        if len(args.args) - i <= len(args.defaults):\n-            default = ast_unparse(args.defaults[-len(args.args) + i])\n-        else:\n-            default = Parameter.empty\n-\n+                                    default=default, annotation=annotation))\n+            current_idx += 1\n+    \n+    # Process positional-or-keyword parameters\n+    for arg in args.args:\n+        default = defaults_dict.get(current_idx, Parameter.empty)\n         annotation = ast_unparse(arg.annotation) or Parameter.empty\n         params.append(Parameter(arg.arg, Parameter.POSITIONAL_OR_KEYWORD,\n                                 default=default, annotation=annotation))\n+        current_idx += 1\n \n     if args.vararg:\n         annotation = ast_unparse(args.vararg.annotation) or Parameter.empty\ndiff --git a/tox.ini b/tox.ini\nindex d9f040544..bf39854b6 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ extras =\n setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n"}