diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index ffc3a7fda5..717f933aa3 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -1150,6 +1150,7 @@ class Subquery(Expression):
 class Exists(Subquery):
     template = 'EXISTS(%(subquery)s)'
     output_field = fields.BooleanField()
+    conditional = True
 
     def __init__(self, queryset, negated=False, **kwargs):
         self.negated = negated
diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index c957ffa564..5f663f069c 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -40,6 +40,16 @@ class Q(tree.Node):
         super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)
 
     def _combine(self, other, conn):
+        # Handle Exists objects
+        from django.db.models.expressions import Exists
+        if isinstance(other, Exists):
+            # Create a new Q object
+            obj = type(self)()
+            obj.connector = conn
+            obj.add(self, conn)
+            obj.add(other, conn)
+            return obj
+        
         if not isinstance(other, Q):
             raise TypeError(other)
 
