{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-13590", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4648daf395..89f13a641a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1077,10 +1077,18 @@ class Query(BaseExpression):\n         elif isinstance(value, (list, tuple)):\n             # The items of the iterable may be expressions and therefore need\n             # to be resolved independently.\n-            return type(value)(\n+            resolved_values = [\n                 self.resolve_lookup_value(sub_value, can_reuse, allow_joins)\n                 for sub_value in value\n-            )\n+            ]\n+            # Handle different types of sequences appropriately\n+            if type(value) == tuple:\n+                return tuple(resolved_values)\n+            elif type(value) == list:\n+                return list(resolved_values)\n+            else:\n+                # This handles named tuples and other custom sequence types\n+                return type(value)(*resolved_values)\n         return value\n \n     def solve_lookup_type(self, lookup):\n"}