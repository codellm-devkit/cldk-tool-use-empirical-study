{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 802fd3c997..23a99a57e0 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1305,9 +1305,15 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Re-apply the label hiding for shared axes\n+            if hasattr(self, 'get_subplotspec') and hasattr(self, '_subplotspec'):\n+                self._label_outer_xaxis()\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Re-apply the label hiding for shared axes\n+            if hasattr(self, 'get_subplotspec') and hasattr(self, '_subplotspec'):\n+                self._label_outer_yaxis()\n \n         self.stale = True\n \ndiff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 887cf97ef1..2d60b506d7 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -778,12 +778,36 @@ class Axis(martist.Artist):\n         self._major_tick_kw['gridOn'] = (\n                 mpl.rcParams['axes.grid'] and\n                 mpl.rcParams['axes.grid.which'] in ('both', 'major'))\n+        # Set default tick visibility based on rcParams\n+        if hasattr(self, 'axis_name'):\n+            if self.axis_name == 'x':\n+                self._major_tick_kw['tick1On'] = mpl.rcParams['xtick.bottom']\n+                self._major_tick_kw['tick2On'] = mpl.rcParams['xtick.top']\n+                self._major_tick_kw['label1On'] = mpl.rcParams['xtick.labelbottom']\n+                self._major_tick_kw['label2On'] = mpl.rcParams['xtick.labeltop']\n+            else:  # y-axis\n+                self._major_tick_kw['tick1On'] = mpl.rcParams['ytick.left']\n+                self._major_tick_kw['tick2On'] = mpl.rcParams['ytick.right']\n+                self._major_tick_kw['label1On'] = mpl.rcParams['ytick.labelleft']\n+                self._major_tick_kw['label2On'] = mpl.rcParams['ytick.labelright']\n \n     def _reset_minor_tick_kw(self):\n         self._minor_tick_kw.clear()\n         self._minor_tick_kw['gridOn'] = (\n                 mpl.rcParams['axes.grid'] and\n                 mpl.rcParams['axes.grid.which'] in ('both', 'minor'))\n+        # Set default tick visibility based on rcParams\n+        if hasattr(self, 'axis_name'):\n+            if self.axis_name == 'x':\n+                self._minor_tick_kw['tick1On'] = mpl.rcParams['xtick.bottom']\n+                self._minor_tick_kw['tick2On'] = mpl.rcParams['xtick.top']\n+                self._minor_tick_kw['label1On'] = mpl.rcParams['xtick.labelbottom']\n+                self._minor_tick_kw['label2On'] = mpl.rcParams['xtick.labeltop']\n+            else:  # y-axis\n+                self._minor_tick_kw['tick1On'] = mpl.rcParams['ytick.left']\n+                self._minor_tick_kw['tick2On'] = mpl.rcParams['ytick.right']\n+                self._minor_tick_kw['label1On'] = mpl.rcParams['ytick.labelleft']\n+                self._minor_tick_kw['label2On'] = mpl.rcParams['ytick.labelright']\n \n     def clear(self):\n         \"\"\"\n"}