diff --git a/django/forms/models.py b/django/forms/models.py
index 7effb202e3..2e5a9ec468 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -568,6 +568,7 @@ class BaseModelFormSet(BaseFormSet):
     A ``FormSet`` for editing a queryset and/or adding new objects to it.
     """
     model = None
+    can_create = True
 
     # Set of fields that must be unique among forms of this set.
     unique_fields = set()
@@ -813,6 +814,10 @@ class BaseModelFormSet(BaseFormSet):
 
     def save_new_objects(self, commit=True):
         self.new_objects = []
+        # If creation is disabled, return an empty list
+        if not self.can_create:
+            return self.new_objects
+            
         for form in self.extra_forms:
             if not form.has_changed():
                 continue
@@ -875,8 +880,14 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,
                          widgets=None, validate_max=False, localized_fields=None,
                          labels=None, help_texts=None, error_messages=None,
                          min_num=None, validate_min=False, field_classes=None,
-                         absolute_max=None, can_delete_extra=True, renderer=None):
-    """Return a FormSet class for the given Django model class."""
+                         absolute_max=None, can_delete_extra=True, can_create=True,
+                         renderer=None):
+    """
+    Return a FormSet class for the given Django model class.
+    
+    ``can_create`` specifies whether new model instances can be created through the formset.
+    When set to False, the formset will only allow editing existing instances.
+    """
     meta = getattr(form, 'Meta', None)
     if (getattr(meta, 'fields', fields) is None and
             getattr(meta, 'exclude', exclude) is None):
@@ -896,6 +907,7 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,
                               absolute_max=absolute_max, can_delete_extra=can_delete_extra,
                               renderer=renderer)
     FormSet.model = model
+    FormSet.can_create = can_create
     return FormSet
 
 
