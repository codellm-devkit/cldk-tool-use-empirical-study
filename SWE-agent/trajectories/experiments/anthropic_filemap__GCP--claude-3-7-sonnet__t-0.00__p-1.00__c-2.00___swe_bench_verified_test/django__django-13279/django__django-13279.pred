{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-13279", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex b5453160a5..faa640595d 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -108,14 +108,44 @@ class SessionBase:\n \n     def encode(self, session_dict):\n         \"Return the given session dictionary serialized and encoded as a string.\"\n-        return signing.dumps(\n-            session_dict, salt=self.key_salt, serializer=self.serializer,\n-            compress=True,\n-        )\n+        # Use legacy encode method when DEFAULT_HASHING_ALGORITHM is set to 'sha1'\n+        # This allows for a smooth transition to Django 3.1\n+        if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+            serialized = self.serializer().dumps(session_dict)\n+            hash = self._hash(serialized)\n+            return base64.b64encode(\n+                (hash + ':' + serialized.decode('latin-1')).encode('ascii')\n+            ).decode('ascii')\n+        else:\n+            return signing.dumps(\n+                session_dict, salt=self.key_salt, serializer=self.serializer,\n+                compress=True,\n+            )\n \n     def decode(self, session_data):\n+        \"\"\"\n+        Return the given encoded session data as a dictionary.\n+        Try with the new format first, then fall back to legacy format.\n+        \"\"\"\n+        # First try with the new format (signing.loads)\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            # If DEFAULT_HASHING_ALGORITHM is 'sha1', temporarily set it to 'sha256'\n+            # to try decoding with SHA256 first (for sessions created with Django 3.1+)\n+            if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+                old_algorithm = settings.DEFAULT_HASHING_ALGORITHM\n+                settings.DEFAULT_HASHING_ALGORITHM = 'sha256'\n+                try:\n+                    result = signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+                    settings.DEFAULT_HASHING_ALGORITHM = old_algorithm\n+                    return result\n+                except Exception:\n+                    # Restore the original algorithm setting\n+                    settings.DEFAULT_HASHING_ALGORITHM = old_algorithm\n+                    # Continue to try with SHA1 and legacy format\n+                    raise\n+            else:\n+                # Normal case - try with current algorithm\n+                return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n         # RemovedInDjango40Warning: when the deprecation ends, handle here\n         # exceptions similar to what _legacy_decode() does now.\n         except Exception:\n"}