{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-12858", "model_patch": "diff --git a/app/__init__.py b/app/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/app/apps.py b/app/apps.py\nnew file mode 100644\nindex 0000000000..40ea550760\n--- /dev/null\n+++ b/app/apps.py\n@@ -0,0 +1,4 @@\n+from django.apps import AppConfig\n+\n+class AppConfig(AppConfig):\n+    name = 'app'\n\\ No newline at end of file\ndiff --git a/app/models.py b/app/models.py\nnew file mode 100644\nindex 0000000000..e9fa7c1f8b\n--- /dev/null\n+++ b/app/models.py\n@@ -0,0 +1,16 @@\n+from django.db import models\n+\n+class Product(models.Model):\n+    name = models.CharField(max_length=100)\n+    parent = models.ForeignKey('self', models.CASCADE, null=True)\n+\n+class Supply(models.Model):\n+    name = models.CharField(max_length=100)\n+    product = models.ForeignKey(Product, models.CASCADE)\n+\n+class Stock(models.Model):\n+    quantity = models.IntegerField()\n+    supply = models.ForeignKey(Supply, models.CASCADE)\n+    \n+    class Meta:\n+        ordering = ['supply__product__parent__isnull']\n\\ No newline at end of file\ndiff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 6c9e9d3707..124db6eed0 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1747,7 +1747,7 @@ class Model(metaclass=ModelBase):\n                     else:\n                         _cls = None\n                 except (FieldDoesNotExist, AttributeError):\n-                    if fld is None or fld.get_transform(part) is None:\n+                    if fld is None or (fld.get_transform(part) is None and fld.get_lookup(part) is None):\n                         errors.append(\n                             checks.Error(\n                                 \"'ordering' refers to the nonexistent field, \"\n"}