{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex c268a56724..817d07e1bb 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -673,8 +673,15 @@ class RcParams(MutableMapping, dict):\n         elif key == \"backend\" and self is globals().get(\"rcParams\"):\n             val = dict.__getitem__(self, key)\n             if val is rcsetup._auto_backend_sentinel:\n+                # Save the current figures before switching backend\n+                from matplotlib import _pylab_helpers\n+                saved_figs = dict(_pylab_helpers.Gcf.figs)\n+                \n                 from matplotlib import pyplot as plt\n                 plt.switch_backend(rcsetup._auto_backend_sentinel)\n+                \n+                # Restore the saved figures\n+                _pylab_helpers.Gcf.figs.update(saved_figs)\n \n         return dict.__getitem__(self, key)\n \n@@ -1175,7 +1182,27 @@ def get_backend():\n     --------\n     matplotlib.use\n     \"\"\"\n-    return rcParams['backend']\n+    # Get the backend without triggering auto-resolution\n+    backend = rcParams._get_backend_or_none()\n+    \n+    # If we need to resolve the backend, save and restore figures\n+    if backend is None:\n+        # Save the current figures\n+        from matplotlib import _pylab_helpers\n+        saved_figs = dict(_pylab_helpers.Gcf.figs)\n+        \n+        # Resolve the backend\n+        from matplotlib import pyplot as plt\n+        plt.switch_backend(rcsetup._auto_backend_sentinel)\n+        \n+        # Restore the saved figures\n+        _pylab_helpers.Gcf.figs.clear()\n+        _pylab_helpers.Gcf.figs.update(saved_figs)\n+        \n+        # Get the resolved backend\n+        backend = rcParams._get_backend_or_none()\n+    \n+    return backend\n \n \n def interactive(b):\n"}