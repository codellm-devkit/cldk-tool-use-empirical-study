{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex d913658291..414f8054c9 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -63,9 +63,41 @@ class Combinable:\n             )\n             other = Value(other, output_field=output_field)\n \n+        # Check if we're doing a subtraction between DateTimeFields\n+        if connector == self.SUB and not reversed:\n+            try:\n+                lhs_type = self.output_field.get_internal_type()\n+                rhs_type = getattr(other, 'output_field', None)\n+                if rhs_type:\n+                    rhs_type = rhs_type.get_internal_type()\n+                datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n+                if lhs_type in datetime_fields and lhs_type == rhs_type:\n+                    # Use TemporalSubtraction directly\n+                    return TemporalSubtraction(self, other)\n+            except (AttributeError, FieldError):\n+                pass\n+\n         if reversed:\n             return CombinedExpression(other, connector, self)\n-        return CombinedExpression(self, connector, other)\n+        \n+        # Create the CombinedExpression\n+        combined = CombinedExpression(self, connector, other)\n+        \n+        # If we're doing a subtraction between DateTimeFields, set the output_field\n+        if connector == self.SUB:\n+            try:\n+                lhs_output_field = getattr(self, 'output_field', None)\n+                rhs_output_field = getattr(other, 'output_field', None)\n+                if lhs_output_field and rhs_output_field:\n+                    lhs_type = lhs_output_field.get_internal_type()\n+                    rhs_type = rhs_output_field.get_internal_type()\n+                    datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n+                    if lhs_type in datetime_fields and lhs_type == rhs_type:\n+                        combined.output_field = fields.DurationField()\n+            except (AttributeError, FieldError):\n+                pass\n+        \n+        return combined\n \n     #############\n     # OPERATORS #\n@@ -459,6 +491,7 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n         if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:\n+            # Use TemporalSubtraction directly\n             return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n         expressions = []\n         expression_params = []\n@@ -478,6 +511,22 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         c.is_summary = summarize\n         c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n         c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n+        \n+        # Check if we're doing a subtraction between DateTimeFields\n+        if c.connector == c.SUB:\n+            try:\n+                lhs_output_field = getattr(c.lhs, 'output_field', None)\n+                rhs_output_field = getattr(c.rhs, 'output_field', None)\n+                if lhs_output_field and rhs_output_field:\n+                    lhs_type = lhs_output_field.get_internal_type()\n+                    rhs_type = rhs_output_field.get_internal_type()\n+                    datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n+                    if lhs_type in datetime_fields and lhs_type == rhs_type:\n+                        # Set the output_field to DurationField\n+                        c.output_field = fields.DurationField()\n+            except (AttributeError, FieldError):\n+                pass\n+        \n         return c\n \n \n"}