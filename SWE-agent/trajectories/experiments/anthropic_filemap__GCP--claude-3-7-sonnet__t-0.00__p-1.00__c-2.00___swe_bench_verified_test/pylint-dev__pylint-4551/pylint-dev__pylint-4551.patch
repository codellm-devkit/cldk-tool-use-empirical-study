diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 3f7e8f74..bacfc2b4 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1855,6 +1855,9 @@ def where(cond, x, y, keep_attrs=None):
     Dataset.where, DataArray.where :
         equivalent methods
     """
+    from .dataarray import DataArray
+    from .dataset import Dataset
+
     if keep_attrs is None:
         keep_attrs = _get_keep_attrs(default=False)
     if keep_attrs is True:
@@ -1863,7 +1866,7 @@ def where(cond, x, y, keep_attrs=None):
         keep_attrs = lambda attrs, context: getattr(x, "attrs", {})
 
     # alignment for three arguments is complicated, so don't support it yet
-    return apply_ufunc(
+    result = apply_ufunc(
         duck_array_ops.where,
         cond,
         x,
@@ -1874,6 +1877,16 @@ def where(cond, x, y, keep_attrs=None):
         keep_attrs=keep_attrs,
     )
 
+    # Preserve coordinate attributes if keep_attrs is True and x has coordinates
+    if keep_attrs is not False and hasattr(x, "coords") and hasattr(result, "coords"):
+        # For DataArrays and Datasets
+        for coord_name in result.coords:
+            if coord_name in x.coords:
+                # Completely replace the attributes instead of updating them
+                result.coords[coord_name].attrs = dict(x.coords[coord_name].attrs)
+
+    return result
+
 
 @overload
 def polyval(
