diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index a89c35599f..ae03b64102 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -295,7 +295,12 @@ class BaseFormSet:
         """
         if self._non_form_errors is None:
             self.full_clean()
-        return self._non_form_errors
+        
+        # Create a new ErrorList with the 'nonform' CSS class and copy the errors
+        errors = self.error_class(error_class='nonform')
+        if self._non_form_errors:
+            errors.extend(self._non_form_errors)
+        return errors
 
     @property
     def errors(self):
diff --git a/docs/topics/forms/formsets.txt b/docs/topics/forms/formsets.txt
index 1f2c7c3fad..58a158901e 100644
--- a/docs/topics/forms/formsets.txt
+++ b/docs/topics/forms/formsets.txt
@@ -365,6 +365,18 @@ The formset ``clean`` method is called after all the ``Form.clean`` methods
 have been called. The errors will be found using the ``non_form_errors()``
 method on the formset.
 
+Non-form errors will be rendered with an additional CSS class of ``nonform``
+to help distinguish them from form-specific errors. For example, 
+``{{ formset.non_form_errors }}`` might be rendered as:
+
+.. code-block:: html+django
+
+    <ul class="errorlist nonform">
+        <li>Articles in a set must have distinct titles.</li>
+    </ul>
+
+This is similar to how non-field errors in a form are rendered with a ``nonfield`` CSS class.
+
 Validating the number of forms in a formset
 ===========================================
 
