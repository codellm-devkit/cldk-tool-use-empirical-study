{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-21612", "model_patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 2e4a45ad20..77ef7bf73e 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -140,7 +140,8 @@ def convert_mp(mp):\n     elif mp.DIV() or mp.CMD_DIV() or mp.COLON():\n         lh = convert_mp(mp_left)\n         rh = convert_mp(mp_right)\n-        return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)\n+        # Use division operator to ensure proper precedence\n+        return lh / rh\n     else:\n         if hasattr(mp, 'unary'):\n             return convert_unary(mp.unary())\n@@ -382,11 +383,9 @@ def convert_frac(frac):\n \n     expr_top = convert_expr(frac.upper)\n     expr_bot = convert_expr(frac.lower)\n-    inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)\n-    if expr_top == 1:\n-        return inverse_denom\n-    else:\n-        return sympy.Mul(expr_top, inverse_denom, evaluate=False)\n+    \n+    # Use division operator to ensure proper precedence\n+    return expr_top / expr_bot\n \n def convert_binom(binom):\n     expr_n = convert_expr(binom.n)\n"}