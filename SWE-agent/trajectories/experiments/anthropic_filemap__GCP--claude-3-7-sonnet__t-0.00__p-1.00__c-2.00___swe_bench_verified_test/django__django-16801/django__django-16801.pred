{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-16801", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 7f8eb128e1..848115f4d2 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -441,7 +441,9 @@ class ImageField(FileField):\n         # after their corresponding image field don't stay cleared by\n         # Model.__init__, see bug #11196.\n         # Only run post-initialization dimension update on non-abstract models\n-        if not cls._meta.abstract:\n+        # and only when the field has dimension fields\n+        has_dimension_fields = self.width_field or self.height_field\n+        if not cls._meta.abstract and has_dimension_fields:\n             signals.post_init.connect(self.update_dimension_fields, sender=cls)\n \n     def update_dimension_fields(self, instance, force=False, *args, **kwargs):\n@@ -459,6 +461,8 @@ class ImageField(FileField):\n         \"\"\"\n         # Nothing to update if the field doesn't have dimension fields or if\n         # the field is deferred.\n+        # Note: This check is now redundant with the check in contribute_to_class,\n+        # but we keep it for backward compatibility and in case this method is called directly.\n         has_dimension_fields = self.width_field or self.height_field\n         if not has_dimension_fields or self.attname not in instance.__dict__:\n             return\n"}