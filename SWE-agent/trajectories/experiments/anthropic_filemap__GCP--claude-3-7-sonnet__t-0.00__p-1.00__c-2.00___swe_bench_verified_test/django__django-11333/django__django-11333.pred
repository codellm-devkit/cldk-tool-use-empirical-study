{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-11333", "model_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex 0e1c3d909c..eafd8d58e0 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -92,7 +92,8 @@ reverse_lazy = lazy(reverse, str)\n \n def clear_url_caches():\n     get_callable.cache_clear()\n-    get_resolver.cache_clear()\n+    from django.urls.resolvers import _get_resolver\n+    _get_resolver.cache_clear()\n     get_ns_resolver.cache_clear()\n \n \ndiff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 247e3680c0..dd95ad1315 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -63,11 +63,22 @@ class ResolverMatch:\n         )\n \n \n+# Helper function to create the URLResolver\n+def _create_resolver(urlconf):\n+    return URLResolver(RegexPattern(r'^/'), urlconf)\n+\n+# Look up settings.ROOT_URLCONF before the memoized function call\n+# to avoid creating multiple URLResolver instances\n @functools.lru_cache(maxsize=None)\n+def _get_resolver(urlconf):\n+    return _create_resolver(urlconf)\n+\n def get_resolver(urlconf=None):\n     if urlconf is None:\n         urlconf = settings.ROOT_URLCONF\n-    return URLResolver(RegexPattern(r'^/'), urlconf)\n+    # This ensures that get_resolver(None) and get_resolver(settings.ROOT_URLCONF)\n+    # return the same instance\n+    return _get_resolver(urlconf)\n \n \n @functools.lru_cache(maxsize=None)\n"}