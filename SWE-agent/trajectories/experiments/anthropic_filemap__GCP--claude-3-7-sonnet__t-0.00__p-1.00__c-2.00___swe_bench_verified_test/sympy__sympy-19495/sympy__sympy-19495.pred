{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 118eda6f77..3a9bebd5d5 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -243,7 +243,8 @@ def _eval_subs(self, old, new):\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n         if cond is S.true:\n-            return ConditionSet(new, Contains(new, base), base)\n+            # If the condition is true, we should just return the base set\n+            return base\n         return self.func(self.sym, cond, base)\n \n     def dummy_eq(self, other, symbol=None):\ndiff --git a/sympy/sets/tests/test_conditionset.py b/sympy/sets/tests/test_conditionset.py\nindex 0d4527a52c..327a89f90c 100644\n--- a/sympy/sets/tests/test_conditionset.py\n+++ b/sympy/sets/tests/test_conditionset.py\n@@ -139,6 +139,22 @@ def test_subs_CondSet_tebr():\n     assert c.subs(x, z) == c\n \n \n+def test_subs_CondSet_with_ImageSet():\n+    from sympy import pi, asin, sin, ImageSet, Lambda, S\n+    # Test for the fix of the issue in PR description\n+    img_set = ImageSet(Lambda(x, 2*x*pi + asin(y)), S.Integers)\n+    cond_set = ConditionSet(x, Contains(y, Interval(-1, 1)), img_set)\n+    \n+    # When substituting y=1/3, the condition becomes True and we should get the base set\n+    result = cond_set.subs(y, Rational(1, 3))\n+    expected = ImageSet(Lambda(x, 2*x*pi + asin(Rational(1, 3))), S.Integers)\n+    assert result == expected\n+    \n+    # When substituting y=2, the condition becomes False and we should get EmptySet\n+    result = cond_set.subs(y, 2)\n+    assert result == S.EmptySet\n+\n+\n def test_dummy_eq():\n     C = ConditionSet\n     I = S.Integers\n"}