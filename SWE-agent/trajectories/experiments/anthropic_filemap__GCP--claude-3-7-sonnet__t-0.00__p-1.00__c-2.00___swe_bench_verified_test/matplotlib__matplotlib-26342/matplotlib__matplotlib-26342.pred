{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-26342", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 3f84250b64..67b02e7592 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -942,6 +942,53 @@ class ContourSet(ContourLabeler, mcoll.Collection):\n         (w,) for w in self.get_linewidths()]))\n     alpha = property(lambda self: self.get_alpha())\n     linestyles = property(lambda self: self._orig_linestyles)\n+    \n+    def get_paths(self):\n+        \"\"\"\n+        Return a list of paths for this ContourSet.\n+        \n+        Returns\n+        -------\n+        list\n+            A list of all paths in this ContourSet.\n+        \"\"\"\n+        # Use collections property with warning suppression\n+        with _api.suppress_matplotlib_deprecation_warning():\n+            return [p for c in self.collections for p in c.get_paths()]\n+    \n+    def set_paths(self, paths):\n+        \"\"\"\n+        Set the paths of this ContourSet.\n+        \n+        Parameters\n+        ----------\n+        paths : list\n+            A list of paths to be set. The length of the list must match\n+            the total number of paths in all collections.\n+        \n+        Raises\n+        ------\n+        ValueError\n+            If the number of paths does not match the number of paths\n+            in the ContourSet.\n+        \"\"\"\n+        all_paths = self.get_paths()\n+        if len(paths) != len(all_paths):\n+            raise ValueError(\n+                f\"Number of paths ({len(paths)}) does not match the number of \"\n+                f\"paths in the ContourSet ({len(all_paths)})\")\n+        \n+        path_index = 0\n+        # Use collections property with warning suppression\n+        with _api.suppress_matplotlib_deprecation_warning():\n+            for collection in self.collections:\n+                collection_paths = collection.get_paths()\n+                n_paths = len(collection_paths)\n+                if n_paths > 0:\n+                    collection_paths[:] = paths[path_index:path_index + n_paths]\n+                    path_index += n_paths\n+        \n+        self.stale = True\n \n     @_api.deprecated(\"3.8\")\n     @property\n"}