{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15973", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 09785e8586..c606a95f6a 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -450,15 +450,31 @@ class BaseDatabaseSchemaEditor:\n \n         # Make M2M tables\n         for field in model._meta.local_many_to_many:\n-            if field.remote_field.through._meta.auto_created:\n-                self.create_model(field.remote_field.through)\n+            # Check if through is a string (model reference) or a model class\n+            through = field.remote_field.through\n+            if isinstance(through, str):\n+                # If it's a string, we need to resolve it to a model\n+                from django.apps import apps\n+                through_model = apps.get_model(through)\n+                if through_model._meta.auto_created:\n+                    self.create_model(through_model)\n+            elif hasattr(through, '_meta') and through._meta.auto_created:\n+                self.create_model(through)\n \n     def delete_model(self, model):\n         \"\"\"Delete a model from the database.\"\"\"\n         # Handle auto-created intermediary models\n         for field in model._meta.local_many_to_many:\n-            if field.remote_field.through._meta.auto_created:\n-                self.delete_model(field.remote_field.through)\n+            # Check if through is a string (model reference) or a model class\n+            through = field.remote_field.through\n+            if isinstance(through, str):\n+                # If it's a string, we need to resolve it to a model\n+                from django.apps import apps\n+                through_model = apps.get_model(through)\n+                if through_model._meta.auto_created:\n+                    self.delete_model(through_model)\n+            elif hasattr(through, '_meta') and through._meta.auto_created:\n+                self.delete_model(through)\n \n         # Delete the table\n         self.execute(\n"}