{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex fdca700c9d..bf17b76dab 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -129,13 +129,13 @@ class JSONField(CheckFieldDefaultMixin, Field):\n def compile_json_path(key_transforms, include_root=True):\n     path = [\"$\"] if include_root else []\n     for key_transform in key_transforms:\n-        try:\n-            num = int(key_transform)\n-        except ValueError:  # non-integer\n-            path.append(\".\")\n-            path.append(json.dumps(key_transform))\n+        if isinstance(key_transform, int):\n+            # Array index case - only actual integers, not strings\n+            path.append(\"[%s]\" % key_transform)\n         else:\n-            path.append(\"[%s]\" % num)\n+            # All other keys, including numeric strings, use dot notation\n+            path.append(\".\")\n+            path.append(json.dumps(str(key_transform)))\n     return \"\".join(path)\n \n \n@@ -236,6 +236,12 @@ class HasKey(HasKeyLookup):\n     lookup_name = \"has_key\"\n     postgres_operator = \"?\"\n     prepare_rhs = False\n+    \n+    def get_prep_lookup(self):\n+        # Ensure the key is treated as a string for lookups\n+        if isinstance(self.rhs, str):\n+            return self.rhs\n+        return str(self.rhs)\n \n \n class HasKeys(HasKeyLookup):\n"}