diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index efa34dd078..b1601fbab2 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1453,12 +1453,33 @@ or callable, default: value of *xycoords*
         if not self.get_visible() or not self._check_xy(renderer):
             return
         self.update_positions(renderer)
+        
         if self.arrow_patch is not None:
             if self.arrow_patch.figure is None and self.figure is not None:
                 self.arrow_patch.figure = self.figure
             self.arrow_patch.draw(renderer)
         self.patch.draw(renderer)
+        
+        # Get the graphics context and set the gid
+        if self.get_gid() is not None and self.offsetbox is not None:
+            # For OffsetImage, set the gid on the image
+            if isinstance(self.offsetbox, OffsetImage):
+                self.offsetbox.image.set_gid(self.get_gid())
+            # For TextArea, set the gid on the _text
+            elif isinstance(self.offsetbox, TextArea):
+                self.offsetbox._text.set_gid(self.get_gid())
+            # For other types, we'll use a graphics context
+            else:
+                gc = renderer.new_gc()
+                gc.set_gid(self.get_gid())
+                renderer.open_group('annotationbox', self.get_gid())
+        
         self.offsetbox.draw(renderer)
+        
+        # Close the group if we opened one
+        if self.get_gid() is not None and self.offsetbox is not None and not (isinstance(self.offsetbox, OffsetImage) or isinstance(self.offsetbox, TextArea)):
+            renderer.close_group('annotationbox')
+        
         self.stale = False
 
 
