{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-16255", "model_patch": "diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py\nindex 27756d9d96..1f2433bc72 100644\n--- a/django/contrib/sitemaps/__init__.py\n+++ b/django/contrib/sitemaps/__init__.py\n@@ -1,3 +1,4 @@\n+import datetime\n import warnings\n from urllib.parse import urlencode\n from urllib.request import urlopen\n@@ -167,8 +168,22 @@ class Sitemap:\n             return None\n         if callable(self.lastmod):\n             try:\n-                return max([self.lastmod(item) for item in self.items()])\n-            except TypeError:\n+                # Filter out None values before calling max()\n+                lastmod_values = [self.lastmod(item) for item in self.items()]\n+                lastmod_values = [x for x in lastmod_values if x is not None]\n+                \n+                if not lastmod_values:\n+                    return None\n+                \n+                # Convert all date objects to datetime objects for comparison\n+                normalized_values = []\n+                for value in lastmod_values:\n+                    if isinstance(value, datetime.date) and not isinstance(value, datetime.datetime):\n+                        value = datetime.datetime.combine(value, datetime.time.min)\n+                    normalized_values.append(value)\n+                \n+                return max(normalized_values)\n+            except (TypeError, ValueError):\n                 return None\n         else:\n             return self.lastmod\n"}