{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/setup.py b/setup.py\nindex 8d40de1a8..03f325278 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 79d7e4f46..ddb589617 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -272,6 +272,12 @@ class PyXrefMixin:\n         result = super().make_xref(rolename, domain, target,  # type: ignore\n                                    innernode, contnode, env)\n         result['refspecific'] = True\n+        \n+        # Set the py:module attribute from env.temp_data if available\n+        # This is needed for field references like :type: and :rtype:\n+        if env and '.' not in target and 'py:module' in env.temp_data:\n+            result['py:module'] = env.temp_data['py:module']\n+            \n         if target.startswith(('.', '~')):\n             prefix, result['reftarget'] = target[0], target[1:]\n             if prefix == '.':\n@@ -1024,6 +1030,8 @@ class PyCurrentModule(SphinxDirective):\n             self.env.ref_context.pop('py:module', None)\n         else:\n             self.env.ref_context['py:module'] = modname\n+            # Also set in temp_data for field references\n+            self.env.temp_data['py:module'] = modname\n         return []\n \n \n@@ -1268,9 +1276,22 @@ class PythonDomain(Domain):\n                     else:\n                         # \"fuzzy\" searching mode\n                         searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects\n-                                   if oname.endswith(searchname) and\n-                                   self.objects[oname].objtype in objtypes]\n+                        all_matches = [(oname, self.objects[oname]) for oname in self.objects\n+                                      if oname.endswith(searchname) and\n+                                      self.objects[oname].objtype in objtypes]\n+                        \n+                        # For unqualified names, prioritize matches in the current module\n+                        if '.' not in name and modname and all_matches:\n+                            module_matches = [match for match in all_matches \n+                                             if match[0].startswith(modname + '.')]\n+                            if module_matches:\n+                                # If we found matches in the current module, use only those\n+                                matches = [module_matches[0]]\n+                            else:\n+                                # Otherwise, use all matches\n+                                matches = all_matches\n+                        else:\n+                            matches = all_matches\n         else:\n             # NOTE: searching for exact match, object type is not considered\n             if name in self.objects:\ndiff --git a/tox.ini b/tox.ini\nindex dbb705a3a..9f4fc3a32 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n"}