diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index ddfd2b365..1beb593ea 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -606,6 +606,21 @@ class Documenter:
 
                     for i, line in enumerate(self.process_doc(docstrings)):
                         self.add_line(line, sourcename, i)
+                elif (self.options.inherited_members and len(self.objpath) >= 2 and
+                      inspect.isclass(self.parent) and self.objtype == 'attribute'):
+                    # Check for docstrings in base classes for inherited attributes
+                    for basecls in self.parent.__mro__[1:]:  # Skip the class itself
+                        basens = '.'.join(self.objpath[:-2] + [basecls.__name__])
+                        basekey = (basens, self.objpath[-1])
+                        if basekey in attr_docs:
+                            no_docstring = True
+                            # make a copy of docstring for attributes to avoid cache
+                            # the change of autodoc-process-docstring event.
+                            docstrings = [list(attr_docs[basekey])]
+
+                            for i, line in enumerate(self.process_doc(docstrings)):
+                                self.add_line(line, sourcename, i)
+                            break
 
         # add content from docstrings
         if not no_docstring:
@@ -756,6 +771,21 @@ class Documenter:
                     # keep documented attributes
                     keep = True
                 isattr = True
+            elif self.options.inherited_members and inspect.isclass(self.object):
+                # Check for docstrings in base classes for inherited attributes
+                for basecls in self.object.__mro__[1:]:  # Skip the class itself
+                    basens = '.'.join(self.objpath[:-1] + [basecls.__name__])
+                    if (basens, membername) in attr_docs:
+                        if want_all and isprivate:
+                            if self.options.private_members is None:
+                                keep = False
+                            else:
+                                keep = membername in self.options.private_members
+                        else:
+                            # keep documented attributes from base classes
+                            keep = True
+                        isattr = True
+                        break
             elif want_all and isprivate:
                 if has_doc or self.options.undoc_members:
                     if self.options.private_members is None:
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
