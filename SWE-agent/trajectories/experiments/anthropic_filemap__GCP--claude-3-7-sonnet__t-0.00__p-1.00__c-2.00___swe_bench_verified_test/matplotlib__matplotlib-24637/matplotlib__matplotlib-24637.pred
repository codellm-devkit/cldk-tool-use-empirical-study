{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "matplotlib__matplotlib-24637", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex efa34dd078..b1601fbab2 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1453,12 +1453,33 @@ or callable, default: value of *xycoords*\n         if not self.get_visible() or not self._check_xy(renderer):\n             return\n         self.update_positions(renderer)\n+        \n         if self.arrow_patch is not None:\n             if self.arrow_patch.figure is None and self.figure is not None:\n                 self.arrow_patch.figure = self.figure\n             self.arrow_patch.draw(renderer)\n         self.patch.draw(renderer)\n+        \n+        # Get the graphics context and set the gid\n+        if self.get_gid() is not None and self.offsetbox is not None:\n+            # For OffsetImage, set the gid on the image\n+            if isinstance(self.offsetbox, OffsetImage):\n+                self.offsetbox.image.set_gid(self.get_gid())\n+            # For TextArea, set the gid on the _text\n+            elif isinstance(self.offsetbox, TextArea):\n+                self.offsetbox._text.set_gid(self.get_gid())\n+            # For other types, we'll use a graphics context\n+            else:\n+                gc = renderer.new_gc()\n+                gc.set_gid(self.get_gid())\n+                renderer.open_group('annotationbox', self.get_gid())\n+        \n         self.offsetbox.draw(renderer)\n+        \n+        # Close the group if we opened one\n+        if self.get_gid() is not None and self.offsetbox is not None and not (isinstance(self.offsetbox, OffsetImage) or isinstance(self.offsetbox, TextArea)):\n+            renderer.close_group('annotationbox')\n+        \n         self.stale = False\n \n \n"}