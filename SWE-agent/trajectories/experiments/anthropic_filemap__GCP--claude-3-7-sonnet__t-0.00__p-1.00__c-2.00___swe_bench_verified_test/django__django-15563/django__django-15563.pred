{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15563", "model_patch": "diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py\nindex 04063f73bc..f9cb757ab6 100644\n--- a/django/db/models/sql/subqueries.py\n+++ b/django/db/models/sql/subqueries.py\n@@ -134,7 +134,23 @@ class UpdateQuery(Query):\n             query = UpdateQuery(model)\n             query.values = values\n             if self.related_ids is not None:\n-                query.add_filter(\"pk__in\", self.related_ids)\n+                # For multi-table inheritance, we need to find the correct parent link field\n+                if len(self.model._meta.parents) > 1:\n+                    # Find the link field from child to this parent model\n+                    for parent, parent_link in self.model._meta.parents.items():\n+                        if parent._meta.concrete_model == model._meta.concrete_model:\n+                            # Use the correct parent link field to filter\n+                            parent_link_name = parent_link.name\n+                            # Get the parent IDs from the child objects\n+                            query.add_filter(f\"pk__in\", \n+                                self.model.objects.filter(pk__in=self.related_ids).values_list(parent_link_name, flat=True))\n+                            break\n+                    else:\n+                        # Fallback to the default behavior if no parent link is found\n+                        query.add_filter(\"pk__in\", self.related_ids)\n+                else:\n+                    # Default behavior for single inheritance or non-inheritance models\n+                    query.add_filter(\"pk__in\", self.related_ids)\n             result.append(query)\n         return result\n \n"}