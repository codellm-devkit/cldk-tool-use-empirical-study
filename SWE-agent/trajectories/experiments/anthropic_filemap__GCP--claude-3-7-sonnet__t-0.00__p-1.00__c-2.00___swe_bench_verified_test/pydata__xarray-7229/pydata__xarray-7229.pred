{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "pydata__xarray-7229", "model_patch": "diff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 3f7e8f74..bacfc2b4 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1855,6 +1855,9 @@ def where(cond, x, y, keep_attrs=None):\n     Dataset.where, DataArray.where :\n         equivalent methods\n     \"\"\"\n+    from .dataarray import DataArray\n+    from .dataset import Dataset\n+\n     if keep_attrs is None:\n         keep_attrs = _get_keep_attrs(default=False)\n     if keep_attrs is True:\n@@ -1863,7 +1866,7 @@ def where(cond, x, y, keep_attrs=None):\n         keep_attrs = lambda attrs, context: getattr(x, \"attrs\", {})\n \n     # alignment for three arguments is complicated, so don't support it yet\n-    return apply_ufunc(\n+    result = apply_ufunc(\n         duck_array_ops.where,\n         cond,\n         x,\n@@ -1874,6 +1877,16 @@ def where(cond, x, y, keep_attrs=None):\n         keep_attrs=keep_attrs,\n     )\n \n+    # Preserve coordinate attributes if keep_attrs is True and x has coordinates\n+    if keep_attrs is not False and hasattr(x, \"coords\") and hasattr(result, \"coords\"):\n+        # For DataArrays and Datasets\n+        for coord_name in result.coords:\n+            if coord_name in x.coords:\n+                # Completely replace the attributes instead of updating them\n+                result.coords[coord_name].attrs = dict(x.coords[coord_name].attrs)\n+\n+    return result\n+\n \n @overload\n def polyval(\n"}