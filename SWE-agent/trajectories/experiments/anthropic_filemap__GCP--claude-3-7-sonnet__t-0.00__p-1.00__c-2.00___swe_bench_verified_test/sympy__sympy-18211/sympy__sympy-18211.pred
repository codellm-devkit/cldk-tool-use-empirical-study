{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "sympy__sympy-18211", "model_patch": "diff --git a/sympy/core/relational.py b/sympy/core/relational.py\nindex f581bfa3c4..b69f1f0340 100644\n--- a/sympy/core/relational.py\n+++ b/sympy/core/relational.py\n@@ -389,10 +389,19 @@ def __nonzero__(self):\n     def _eval_as_set(self):\n         # self is univariate and periodicity(self, x) in (0, None)\n         from sympy.solvers.inequalities import solve_univariate_inequality\n+        from sympy.sets import ConditionSet\n+        from sympy.core.singleton import S\n         syms = self.free_symbols\n         assert len(syms) == 1\n         x = syms.pop()\n-        return solve_univariate_inequality(self, x, relational=False)\n+        try:\n+            return solve_univariate_inequality(self, x, relational=False)\n+        except NotImplementedError:\n+            # For equations that can't be solved, return a ConditionSet\n+            if self.is_Equality:\n+                return ConditionSet(x, self, S.Reals)\n+            else:\n+                raise\n \n     @property\n     def binary_symbols(self):\n"}