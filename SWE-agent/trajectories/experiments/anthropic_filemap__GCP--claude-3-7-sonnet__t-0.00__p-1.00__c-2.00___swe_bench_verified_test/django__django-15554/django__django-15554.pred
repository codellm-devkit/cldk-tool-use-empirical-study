{"model_name_or_path": "anthropic_filemap__GCP--claude-3-7-sonnet__t-0.00__p-1.00__c-2.00___swe_bench_verified_test", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/datastructures.py b/django/db/models/sql/datastructures.py\nindex 1edf040e82..f4176881ca 100644\n--- a/django/db/models/sql/datastructures.py\n+++ b/django/db/models/sql/datastructures.py\n@@ -100,6 +100,9 @@ class Join:\n             join_conditions.append(\"(%s)\" % extra_sql)\n             params.extend(extra_params)\n         if self.filtered_relation:\n+            # Set the alias for the filtered relation to the current table alias\n+            # to ensure correct SQL generation\n+            self.filtered_relation.alias = self.table_alias\n             extra_sql, extra_params = compiler.compile(self.filtered_relation)\n             if extra_sql:\n                 join_conditions.append(\"(%s)\" % extra_sql)\n@@ -162,8 +165,25 @@ class Join:\n         return hash(self.identity)\n \n     def equals(self, other):\n-        # Ignore filtered_relation in equality check.\n-        return self.identity[:-1] == other.identity[:-1]\n+        # Include filtered_relation in equality check.\n+        if not isinstance(other, Join):\n+            return False\n+            \n+        # Check if both have filtered_relation or both don't have filtered_relation\n+        if bool(self.filtered_relation) != bool(other.filtered_relation):\n+            return False\n+            \n+        # If both have filtered_relation, check if they have the same condition\n+        if self.filtered_relation and other.filtered_relation:\n+            if self.filtered_relation.condition != other.filtered_relation.condition:\n+                return False\n+                \n+        # Check the rest of the identity\n+        return (\n+            self.table_name == other.table_name and\n+            self.parent_alias == other.parent_alias and\n+            self.join_field == other.join_field\n+        )\n \n     def demote(self):\n         new = self.relabeled_clone({})\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 54f3258eac..1b1c3a9c6a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1598,7 +1598,11 @@ class Query(BaseExpression):\n                         \"relations deeper than the relation_name (got %r for \"\n                         \"%r).\" % (lookup, filtered_relation.relation_name)\n                     )\n-        self._filtered_relations[filtered_relation.alias] = filtered_relation\n+        \n+        # Store the filtered relation with a unique alias\n+        # This ensures multiple FilteredRelation objects with the same relation_name\n+        # but different conditions are handled correctly\n+        self._filtered_relations[filtered_relation.alias] = filtered_relation.clone()\n \n     def names_to_path(self, names, opts, allow_many=True, fail_on_missing=False):\n         \"\"\"\n"}