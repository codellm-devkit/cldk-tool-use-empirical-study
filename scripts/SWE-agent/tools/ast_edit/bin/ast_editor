# Flip an incorrect comparison:
# From if foo == bar: to if foo != bar:
matches = find_node_by_semantics("utils/data.py", lambda n: 
    isinstance(n, ast.Compare) and uses_var(n, "foo") and uses_var(n, "bar")
)

for match in matches:
    patch = edit_ast_node(match["path"], match["span"], new_operator="NotEq")

# Replace deprecated function calls
# Replace old_func(x) with new_func(x)
matches = find_node_by_semantics("core/legacy.py", lambda n:
    isinstance(n, ast.Call) and getattr(n.func, "id", "") == "old_func"
)

for match in matches:
    patch = edit_ast_node(match["path"], match["span"], new_func="new_func")
