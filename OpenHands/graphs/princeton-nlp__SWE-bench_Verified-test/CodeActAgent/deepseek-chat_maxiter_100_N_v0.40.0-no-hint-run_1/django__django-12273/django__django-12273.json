{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-12273",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__3.1"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "test*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:find"
    },
    {
      "label": "cat",
      "args": [
        "./tests/model_inheritance_regress/tests.py"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "3:cat"
    },
    {
      "label": "cat",
      "args": [
        "./tests/model_fields/test_autofield.py"
      ],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "4:cat"
    },
    {
      "label": "grep",
      "args": [
        "./django/db/models/"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "5:grep"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/base.py",
        "|",
        "grep",
        "def save("
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "6:cat"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/base.py",
        "|",
        "grep",
        "class ModelBase("
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "7:cat"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/fields/__init__.py",
        "|",
        "grep",
        "class AutoField("
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "8:cat"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/fields/__init__.py",
        "|",
        "grep",
        "class AutoFieldMixin"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "9:cat"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/base.py",
        "|",
        "grep",
        "def save_base("
      ],
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "10:cat"
    },
    {
      "label": "cat",
      "args": [
        "./django/db/models/fields/__init__.py",
        "|",
        "grep",
        "def get_pk_value_on_save"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "11:cat"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.1/django/db/models/base.py",
        "old_str": "\n    def save_base(self, raw=False, force_insert=False,\n                  force_update=False, using=None, update_fields=None):\n        \"\"\"\n        Handle the parts of saving which should be done only once per save,\n        yet need to be done in raw saves, too. This includes some sanity\n        checks and signal sending.\n\n        The 'raw' argument is telling save_base not to save any parent\n        models and not to do any changes to the values before save. This\n        is used by fixture loading.\n        \"\"\"",
        "new_str": "\n    def save_base(self, raw=False, force_insert=False,\n                  force_update=False, using=None, update_fields=None):\n        \"\"\"\n        Handle the parts of saving which should be done only once per save,\n        yet need to be done in raw saves, too. This includes some sanity\n        checks and signal sending.\n\n        The 'raw' argument is telling save_base not to save any parent\n        models and not to do any changes to the values before save. This\n        is used by fixture loading.\n        \"\"\"\n        # Force insert if primary key is None\n        if not raw and not force_insert and self._meta.pk.attname in self.__dict__ and getattr(self, self._meta.pk.attname) is None:\n            force_insert = True",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "12:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:find",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:find",
      "target": "3:cat",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:cat",
      "target": "4:cat",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:cat",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:grep",
      "target": "6:cat",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:cat",
      "target": "7:cat",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:cat",
      "target": "8:cat",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:cat",
      "target": "9:cat",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:cat",
      "target": "10:cat",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "10:cat",
      "target": "11:cat",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "11:cat",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}