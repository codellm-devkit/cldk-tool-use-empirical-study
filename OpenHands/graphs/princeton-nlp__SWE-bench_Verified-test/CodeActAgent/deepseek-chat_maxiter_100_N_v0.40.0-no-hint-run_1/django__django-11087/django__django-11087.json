{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-11087",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        11
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__3.0"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        3,
        4,
        5,
        8
      ],
      "id": "1:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:find"
    },
    {
      "label": "python",
      "args": [],
      "phase": "verification",
      "step_indices": [
        1,
        2
      ],
      "id": "3:python"
    },
    {
      "label": "python",
      "args": [
        "test"
      ],
      "phase": "verification",
      "step_indices": [
        2
      ],
      "id": "4:python"
    },
    {
      "label": "find",
      "args": [
        "tests",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        3,
        4,
        4
      ],
      "id": "5:find"
    },
    {
      "label": "ls",
      "args": [],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "6:ls"
    },
    {
      "label": "grep",
      "args": [
        "django/db/models/query.py"
      ],
      "phase": "general",
      "step_indices": [
        5,
        8
      ],
      "id": "7:grep"
    },
    {
      "label": "grep",
      "args": [
        "django/db/models/deletion.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "8:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/query.py",
        "view_range": [
          600,
          650
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/query.py",
        "view_range": [
          1000,
          1050
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/query.py",
        "view_range": [
          678,
          700
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "view_range": [
          200,
          250
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        12
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "view_range": [
          100,
          150
        ]
      },
      "phase": "localization",
      "step_indices": [
        13
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "old_str": "    def related_objects(self, related, objs):\n        \"\"\"\n        Get a QuerySet of objects related to `objs` via the relation `related`.\n        \"\"\"\n        return related.related_model._base_manager.using(self.using).filter(\n            **{\"%s__in\" % related.field.name: objs}\n        )",
        "new_str": "    def related_objects(self, related, objs):\n        \"\"\"\n        Get a QuerySet of objects related to `objs` via the relation `related`.\n        Only fetches primary key and foreign key fields needed for deletion.\n        \"\"\"\n        model = related.related_model\n        fields = [model._meta.pk.name]\n        if hasattr(related.field, 'column'):\n            fields.append(related.field.column)\n        return model._base_manager.using(self.using).filter(\n            **{\"%s__in\" % related.field.name: objs}\n        ).only(*fields)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "old_str": "\n    def collect(self, objs, source=None, source_attr=None, nullable=False,\n                collect_related=True, reverse_dependency=False, keep_parents=False):\n        \"\"\"\n        Add 'objs' to the collection of objects to be deleted as well as all\n        parent instances.  'objs' must be a homogeneous iterable collection of\n        model instances (e.g. a QuerySet).  If 'collect_related' is True,\n        related objects will be handled by their respective on_delete handler.\n        \"\"\"\n        if self.can_fast_delete(objs):\n            self.fast_deletes.append(objs)\n            return\n        new_objs = self.add(objs, source, source_attr, nullable,\n                            reverse_dependency)\n        if not new_objs:\n            return new_objs\n",
        "new_str": "\n    def collect(self, objs, source=None, source_attr=None, nullable=False,\n                collect_related=True, reverse_dependency=False, keep_parents=False):\n        \"\"\"\n        Add 'objs' to the collection of objects to be deleted as well as all\n        parent instances.  'objs' must be a homogeneous iterable collection of\n        model instances (e.g. a QuerySet).  If 'collect_related' is True,\n        related objects will be handled by their respective on_delete handler.\n        Only fields required for deletion (PKs and FKs) will be fetched.\n        \"\"\"\n        if self.can_fast_delete(objs):\n            self.fast_deletes.append(objs)\n            return\n        new_objs = self.add(objs, source, source_attr, nullable,\n                            reverse_dependency)\n        if not new_objs:\n            return new_objs\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        15,
        16
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "view_range": [
          150,
          200
        ]
      },
      "phase": "localization",
      "step_indices": [
        17
      ],
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/models/deletion.py",
        "old_str": "\n    def collect(self, objs, source=None, nullable=False, collect_related=True,\n                source_attr=None, reverse_dependency=False, keep_parents=False):\n        \"\"\"\n        Add 'objs' to the collection of objects to be deleted as well as all\n        parent instances.  'objs' must be a homogeneous iterable collection of\n        model instances (e.g. a QuerySet).  If 'collect_related' is True,\n        related objects will be handled by their respective on_delete handler.\n\n        If the call is the result of a cascade, 'source' should be the model\n        that caused it and 'nullable' should be set to True, if the relation\n        can be null.\n\n        If 'reverse_dependency' is True, 'source' will be deleted before the\n        current model, rather than after. (Needed for cascading to parent\n        models, the one case in which the cascade follows the forwards\n        direction of an FK rather than the reverse direction.)\n\n        If 'keep_parents' is True, data of parent model's will be not deleted.\n        \"\"\"\n",
        "new_str": "\n    def collect(self, objs, source=None, nullable=False, collect_related=True,\n                source_attr=None, reverse_dependency=False, keep_parents=False):\n        \"\"\"\n        Add 'objs' to the collection of objects to be deleted as well as all\n        parent instances.  'objs' must be a homogeneous iterable collection of\n        model instances (e.g. a QuerySet).  If 'collect_related' is True,\n        related objects will be handled by their respective on_delete handler.\n        Only fields required for deletion (PKs and FKs) will be fetched.\n\n        If the call is the result of a cascade, 'source' should be the model\n        that caused it and 'nullable' should be set to True, if the relation\n        can be null.\n\n        If 'reverse_dependency' is True, 'source' will be deleted before the\n        current model, rather than after. (Needed for cascading to parent\n        models, the one case in which the cascade follows the forwards\n        direction of an FK rather than the reverse direction.)\n\n        If 'keep_parents' is True, data of parent model's will be not deleted.\n        \"\"\"\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "18:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "0:empty action",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:find",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "1:cd",
      "target": "5:find",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "1:cd",
      "target": "5:find",
      "key": 1
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:cd",
      "target": "7:grep",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "7:grep",
      "key": 1
    },
    {
      "label": "1",
      "type": "exec",
      "source": "2:find",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:python",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "4:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "5:find",
      "target": "6:ls",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:find",
      "target": "5:find",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:find",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "6:ls",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "7:grep",
      "target": "8:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:grep",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "8:grep",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}