{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pytest-dev__pytest-5787",
    "difficulty": "1-4 hours",
    "golden_patch_difficulty": "very hard",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/pytest-dev__pytest__5.1"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        3,
        8,
        9,
        12,
        13,
        15,
        19
      ],
      "id": "1:cd"
    },
    {
      "label": "python",
      "args": [],
      "phase": "verification",
      "step_indices": [
        1
      ],
      "id": "2:python"
    },
    {
      "label": "python",
      "args": [
        "basic/test_basic.py"
      ],
      "phase": "verification",
      "step_indices": [
        1,
        1
      ],
      "id": "3:python"
    },
    {
      "label": "find",
      "args": [
        ".",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        2,
        8
      ],
      "id": "4:find"
    },
    {
      "label": "grep",
      "args": [
        "."
      ],
      "phase": "general",
      "step_indices": [
        3,
        3,
        3
      ],
      "id": "5:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py"
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          500,
          600
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          600,
          700
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          700,
          800
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "src/_pytest/_code/code.py"
      ],
      "phase": "general",
      "step_indices": [
        9,
        12,
        13
      ],
      "id": "10:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          880,
          950
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          400,
          500
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          825,
          850
        ]
      },
      "phase": "localization",
      "step_indices": [
        14
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def __reduce__",
        "src/_pytest/_code/code.py"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "14:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "view_range": [
          380,
          450
        ]
      },
      "phase": "localization",
      "step_indices": [
        16
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/src/_pytest/_code/code.py",
        "old_str": "@attr.s(repr=False)\nclass ExceptionInfo(Generic[_E]):\n    \"\"\" wraps sys.exc_info() objects and offers\n        help for navigating the traceback.\n    \"\"\"\n\n    _assert_start_repr = \"AssertionError('assert \"\n\n    _excinfo = attr.ib(type=Optional[Tuple[\"Type[_E]\", \"_E\", TracebackType]])\n    _striptext = attr.ib(type=str, default=\"\")\n    _traceback = attr.ib(type=Optional[Traceback], default=None)",
        "new_str": "@attr.s(repr=False)\nclass ExceptionInfo(Generic[_E]):\n    \"\"\" wraps sys.exc_info() objects and offers\n        help for navigating the traceback.\n    \"\"\"\n\n    _assert_start_repr = \"AssertionError('assert \"\n\n    _excinfo = attr.ib(type=Optional[Tuple[\"Type[_E]\", \"_E\", TracebackType]])\n    _striptext = attr.ib(type=str, default=\"\")\n    _traceback = attr.ib(type=Optional[Traceback], default=None)\n\n    def __reduce__(self):\n        \"\"\"Custom serialization that preserves exception chains.\"\"\"\n        if self._excinfo is None:\n            return (self.__class__.for_later, ())\n        \n        type_, value, tb = self._excinfo\n        # Get chain information\n        chain = []\n        if hasattr(value, '__cause__') and value.__cause__ is not None:\n            chain.append(('cause', value.__cause__))\n        if hasattr(value, '__context__') and value.__context__ is not None and not value.__suppress_context__:\n            chain.append(('context', value.__context__))\n            \n        return (\n            self.__class__._reconstruct,\n            (type_, value, tb, self._striptext, chain)\n        )\n\n    @classmethod\n    def _reconstruct(cls, type_, value, tb, striptext, chain):\n        \"\"\"Reconstruct exception with chain information.\"\"\"\n        # Rebuild main exception\n        exc_info = (type_, value, tb)\n        instance = cls(exc_info, striptext)\n        \n        # Rebuild chain\n        if chain:\n            for link_type, link_exc in chain:\n                if link_type == 'cause':\n                    value.__cause__ = link_exc\n                else:\n                    value.__context__ = link_exc\n                    \n        return instance",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        17
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.1/testing/test_exception_chains.py",
        "file_text": "\nimport pytest\n\ndef test_chained_exception_with_from():\n    try:\n        try:\n            raise ValueError(11)\n        except Exception as e1:\n            raise ValueError(12) from e1\n    except Exception as e2:\n        raise ValueError(13) from e2\n\ndef test_chained_exception_without_from():\n    try:\n        try:\n            raise ValueError(21)\n        except Exception:\n            raise ValueError(22)\n    except Exception:\n        raise ValueError(23)\n"
      },
      "phase": "verification",
      "step_indices": [
        18
      ],
      "id": "17:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "args": [
        "testing/test_exception_chains.py"
      ],
      "phase": "verification",
      "step_indices": [
        19,
        19
      ],
      "id": "18:python"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "4:find",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "4:find",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "1:cd",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "1:cd",
      "target": "10:grep",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "1:cd",
      "target": "10:grep",
      "key": 1
    },
    {
      "label": "13",
      "type": "exec",
      "source": "1:cd",
      "target": "10:grep",
      "key": 2
    },
    {
      "label": "15",
      "type": "exec",
      "source": "1:cd",
      "target": "14:grep",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "1:cd",
      "target": "18:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "2:python",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "3:python",
      "target": "3:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "4:find",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "4:find",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "5:grep",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "5:grep",
      "target": "5:grep",
      "key": 1
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:grep",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 1
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "10:grep",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:grep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "10:grep",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "14:grep",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "17:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "17:str_replace_editor\ncreate",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "18:python",
      "target": "18:python",
      "key": 0
    }
  ]
}