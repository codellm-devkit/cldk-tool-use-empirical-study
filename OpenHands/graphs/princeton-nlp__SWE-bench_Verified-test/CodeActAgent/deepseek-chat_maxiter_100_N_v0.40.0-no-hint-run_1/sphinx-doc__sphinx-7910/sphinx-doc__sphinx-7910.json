{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "sphinx-doc__sphinx-7910",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        12,
        13
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/sphinx-doc__sphinx__3.2"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        4,
        16
      ],
      "id": "1:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "test*",
        "d"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:find"
    },
    {
      "label": "find",
      "args": [
        ".",
        "Makefile",
        "*.sh",
        "tox.ini",
        "pytest.ini"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "3:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/tox.ini"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "."
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "5:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          50,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          100,
          150
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          200,
          250
        ]
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          300,
          350
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          350,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "view_range": [
          400,
          450
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "old_str": "                    if '.' in cls_path:\n                        import importlib\n                        import functools\n\n                        mod = importlib.import_module(obj.__module__)\n                        mod_path = cls_path.split('.')\n                        cls = functools.reduce(getattr, mod_path, mod)\n                    else:\n                        cls = obj.__globals__[cls_path]",
        "new_str": "                    try:\n                        if '.' in cls_path:\n                            import importlib\n                            import functools\n                            import inspect\n\n                            mod = importlib.import_module(obj.__module__)\n                            mod_path = cls_path.split('.')\n                            cls = functools.reduce(getattr, mod_path, mod)\n                        else:\n                            # First try standard lookup\n                            try:\n                                cls = obj.__globals__[cls_path]\n                            except (KeyError, AttributeError):\n                                # Fallback for decorated methods\n                                if hasattr(obj, '__wrapped__'):\n                                    obj = obj.__wrapped__\n                                    cls = obj.__globals__[cls_path]\n                                else:\n                                    # Final fallback via module inspection\n                                    mod = importlib.import_module(obj.__module__)\n                                    cls = getattr(mod, cls_path)\n                    except Exception:\n                        cls_is_owner = False",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.2/sphinx/ext/napoleon/__init__.py",
        "old_str": "\n                try:\n                    try:\n                        if '.' in cls_path:\n                            import importlib\n                            import functools\n                            import inspect\n\n                            mod = importlib.import_module(obj.__module__)\n                            mod_path = cls_path.split('.')\n                            cls = functools.reduce(getattr, mod_path, mod)\n                        else:\n                            # First try standard lookup\n                            try:\n                                cls = obj.__globals__[cls_path]\n                            except (KeyError, AttributeError):\n                                # Fallback for decorated methods\n                                if hasattr(obj, '__wrapped__'):\n                                    obj = obj.__wrapped__\n                                    cls = obj.__globals__[cls_path]\n                                else:\n                                    # Final fallback via module inspection\n                                    mod = importlib.import_module(obj.__module__)\n                                    cls = getattr(mod, cls_path)\n                    except Exception:\n                        cls_is_owner = False\n                except Exception:\n                    cls_is_owner = False\n",
        "new_str": "\n                try:\n                    if '.' in cls_path:\n                        import importlib\n                        import functools\n                        import inspect\n\n                        mod = importlib.import_module(obj.__module__)\n                        mod_path = cls_path.split('.')\n                        cls = functools.reduce(getattr, mod_path, mod)\n                    else:\n                        # First try standard lookup\n                        try:\n                            cls = obj.__globals__[cls_path]\n                        except (KeyError, AttributeError):\n                            # Fallback for decorated methods\n                            if hasattr(obj, '__wrapped__'):\n                                obj = obj.__wrapped__\n                                cls = obj.__globals__[cls_path]\n                            else:\n                                # Final fallback via module inspection\n                                mod = importlib.import_module(obj.__module__)\n                                cls = getattr(mod, cls_path)\n                except Exception:\n                    cls_is_owner = False\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        15
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "args": [
        "tests/test_ext_napoleon.py"
      ],
      "phase": "verification",
      "step_indices": [
        16
      ],
      "id": "15:python"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "0:empty action",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "0:empty action",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:find",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "3:find",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "1:cd",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "1:cd",
      "target": "15:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:find",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:find",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:grep",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    }
  ]
}