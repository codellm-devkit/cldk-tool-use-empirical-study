{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-16662",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__5.0"
      ],
      "phase": "general",
      "step_indices": [
        0,
        1,
        2,
        5
      ],
      "id": "0:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "tests",
        "d"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:find"
    },
    {
      "label": "\ngrep",
      "args": [
        "|",
        "grep",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:\ngrep"
    },
    {
      "label": "\nls",
      "args": [],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "3:\nls"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/django/db/migrations/writer.py"
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__5.0/django/db/migrations/writer.py",
        "old_str": "        # Sort imports by the package / module to be imported (the part after\n        # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n        items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"",
        "new_str": "        # Separate and sort imports by type (import statements before from imports)\n        import_statements = sorted(\n            [i for i in imports if i.startswith('import ')],\n            key=lambda i: i.split()[1]\n        )\n        from_imports = sorted(\n            [i for i in imports if i.startswith('from ')],\n            key=lambda i: i.split()[1]\n        )\n        sorted_imports = import_statements + from_imports\n        items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "\npython",
      "args": [],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "6:\npython"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_migration_generation.py",
        "file_text": "\nimport os\nimport sys\nfrom django.conf import settings\nfrom django.db import migrations, models\nimport datetime\nimport time\nfrom django.conf import settings\nimport os\n\n# Minimal Django settings\nif not settings.configured:\n    settings.configure(\n        USE_TZ=True,\n        SECRET_KEY='test',\n        DATABASES={\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': ':memory:'\n            }\n        }\n    )\n\n# Create test migration\nmigration = migrations.Migration('test', 'test_app')\nmigration.operations = [\n    migrations.CreateModel(\n        'TestModel',\n        [\n            ('id', models.AutoField(primary_key=True)),\n            ('created', models.DateTimeField(default=datetime.datetime.now)),\n        ],\n    )\n]\n\nfrom django.db.migrations.writer import MigrationWriter\nprint(\"Generated migration with imports:\")\nprint(MigrationWriter(migration).as_string())\n"
      },
      "phase": "verification",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "args": [
        "/workspace"
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "8:cd"
    },
    {
      "label": "python",
      "args": [
        "test_migration_generation.py"
      ],
      "phase": "verification",
      "step_indices": [
        7
      ],
      "id": "9:python"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:find",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "0:cd",
      "target": "2:\ngrep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "0:cd",
      "target": "3:\nls",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "0:cd",
      "target": "6:\npython",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:find",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:\ngrep",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:\nls",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:\npython",
      "target": "7:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\ncreate",
      "target": "8:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:cd",
      "target": "9:python",
      "key": 0
    }
  ]
}