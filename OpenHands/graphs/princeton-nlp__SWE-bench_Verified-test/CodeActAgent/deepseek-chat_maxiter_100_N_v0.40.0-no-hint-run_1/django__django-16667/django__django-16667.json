{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-16667",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__5.0"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        3,
        4,
        7,
        10,
        13,
        15,
        16
      ],
      "id": "1:cd"
    },
    {
      "label": "grep",
      "args": [
        "."
      ],
      "phase": "general",
      "step_indices": [
        1,
        3
      ],
      "id": "2:grep"
    },
    {
      "label": "find",
      "args": [
        ".",
        "test*",
        "d"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "3:find"
    },
    {
      "label": "find",
      "args": [
        ".",
        "1",
        "f",
        "readme*",
        "contributing*",
        "testing*",
        "|",
        "xargs",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/README.rst"
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/docs/internals/contributing/writing-code/unit-tests.txt"
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "class SelectDateWidget",
        "."
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "7:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/django/forms/widgets.py",
        "view_range": [
          1000,
          1100
        ]
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/django/forms/widgets.py",
        "view_range": [
          1150,
          1170
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "SelectDateWidget",
        "tests/forms_tests/"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "10:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__5.0/tests/forms_tests/widget_tests/test_selectdatewidget.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__5.0/django/forms/widgets.py",
        "old_str": "            try:\n                date_value = datetime.date(int(y), int(m), int(d))\n            except ValueError:\n                # Return pseudo-ISO dates with zeros for any unselected values,\n                # e.g. '2017-0-23'.\n                return \"%s-%s-%s\" % (y or 0, m or 0, d or 0)",
        "new_str": "            try:\n                date_value = datetime.date(int(y), int(m), int(d))\n            except (ValueError, OverflowError):\n                # Return pseudo-ISO dates with zeros for any unselected values,\n                # e.g. '2017-0-23'.\n                return \"%s-%s-%s\" % (y or 0, m or 0, d or 0)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "grep",
      "args": [
        "OverflowError",
        "tests/forms_tests/"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "13:grep"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__5.0/tests/forms_tests/widget_tests/test_selectdatewidget.py",
        "old_str": "\n    def test_render_empty(self):\n        self.check_html(\n            self.widget,\n            \"mydate\",\n            \"\",\n            html=(\n                \"\"\"\n            <select name=\"mydate_month\" id=\"id_mydate_month\">\n                <option selected value=\"\">---</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n            </select>\n",
        "new_str": "\n    def test_overflow_error_handling(self):\n        \"\"\"Extremely large year values should return pseudo-ISO string.\"\"\"\n        data = {\n            'mydate_year': '1234567821345678',\n            'mydate_month': '1',\n            'mydate_day': '1'\n        }\n        result = self.widget.value_from_datadict(data, {}, 'mydate')\n        self.assertEqual(result, '1234567821345678-1-1')\n\n    def test_render_empty(self):\n        self.check_html(\n            self.widget,\n            \"mydate\",\n            \"\",\n            html=(\n                \"\"\"\n            <select name=\"mydate_month\" id=\"id_mydate_month\">\n                <option selected value=\"\">---</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n            </select>\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "args": [
        "tests/forms_tests/widget_tests/test_selectdatewidget.py::SelectDateWidgetTest::test_overflow_error_handling"
      ],
      "phase": "verification",
      "step_indices": [
        15
      ],
      "id": "15:python"
    },
    {
      "label": "python",
      "args": [
        "tests/runtests.py",
        "forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest.test_overflow_error_handling"
      ],
      "phase": "verification",
      "step_indices": [
        16
      ],
      "id": "16:python"
    },
    {
      "label": "set_env",
      "args": [
        "PYTHONPATH=/workspace/django__django__5.0"
      ],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "17:set_env"
    },
    {
      "label": "python",
      "args": [
        "/workspace/django__django__5.0/tests/runtests.py",
        "forms_tests.widget_tests.test_selectdatewidget.SelectDateWidgetTest.test_overflow_error_handling"
      ],
      "phase": "verification",
      "step_indices": [
        17
      ],
      "id": "18:python"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "1:cd",
      "target": "2:grep",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "3:find",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "1:cd",
      "target": "4:find",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "1:cd",
      "target": "7:grep",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "1:cd",
      "target": "10:grep",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "1:cd",
      "target": "13:grep",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "1:cd",
      "target": "15:python",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "1:cd",
      "target": "16:python",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:grep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "2:grep",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:find",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:find",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:grep",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:grep",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:grep",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:python",
      "target": "17:set_env",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "17:set_env",
      "target": "18:python",
      "key": 0
    }
  ]
}