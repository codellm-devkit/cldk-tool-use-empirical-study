{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "django__django-11964",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__3.1"
      ],
      "phase": "general",
      "step_indices": [
        0,
        3,
        5,
        7,
        8,
        9,
        10
      ],
      "id": "0:cd"
    },
    {
      "label": "grep",
      "args": [
        ".",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.1/django/db/models/enums.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/django__django__3.1/enum_test.py",
        "file_text": "\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\n\nclass MyChoice(models.TextChoices):\n    FIRST_CHOICE = \"first\", _(\"The first choice\")\n    SECOND_CHOICE = \"second\", _(\"The second choice\")\n\nclass MyObject(models.Model):\n    my_str_value = models.CharField(max_length=10, choices=MyChoice.choices)\n\n# Test case\nobj = MyObject(my_str_value=MyChoice.FIRST_CHOICE)\nprint(f\"Value type: {type(obj.my_str_value)}\")\nprint(f\"String value: {obj.my_str_value}\")\nprint(f\"Expected string: 'first'\")\n"
      },
      "phase": "verification",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "args": [
        "enum_test.py"
      ],
      "phase": "verification",
      "step_indices": [
        3,
        5,
        7
      ],
      "id": "4:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.1/enum_test.py",
        "old_str": "\nfrom django.db import models\nfrom django.utils.translation import gettext_lazy as _\n\nclass MyChoice(models.TextChoices):\n    FIRST_CHOICE = \"first\", _(\"The first choice\")\n    SECOND_CHOICE = \"second\", _(\"The second choice\")\n\nclass MyObject(models.Model):\n    my_str_value = models.CharField(max_length=10, choices=MyChoice.choices)\n\n# Test case\nobj = MyObject(my_str_value=MyChoice.FIRST_CHOICE)\nprint(f\"Value type: {type(obj.my_str_value)}\")\nprint(f\"String value: {obj.my_str_value}\")\nprint(f\"Expected string: 'first'\")\n",
        "new_str": "\nfrom django.db.models.enums import TextChoices\n\nclass MyChoice(TextChoices):\n    FIRST_CHOICE = \"first\", \"The first choice\"\n    SECOND_CHOICE = \"second\", \"The second choice\"\n\n# Test case\nvalue = MyChoice.FIRST_CHOICE\nprint(f\"Value type: {type(value)}\")\nprint(f\"String value: {value}\")\nprint(f\"Expected string: 'first'\")\nprint(f\"Actual string representation: {str(value)}\")\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.1/django/db/models/enums.py",
        "old_str": "\nclass Choices(enum.Enum, metaclass=ChoicesMeta):\n    \"\"\"Class for creating enumerated choices.\"\"\"\n    pass\n",
        "new_str": "\nclass Choices(enum.Enum, metaclass=ChoicesMeta):\n    \"\"\"Class for creating enumerated choices.\"\"\"\n    def __str__(self):\n        return str(self.value)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "python",
      "args": [
        "django/db/models/enums.py"
      ],
      "phase": "verification",
      "step_indices": [
        8
      ],
      "id": "7:python"
    },
    {
      "label": "python",
      "args": [
        "test",
        "django.db.models.enums"
      ],
      "phase": "verification",
      "step_indices": [
        9
      ],
      "id": "8:python"
    },
    {
      "label": "find",
      "args": [
        "tests",
        "*enum*",
        "*choice*",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "9:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.1/tests/model_enums"
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.1/tests/model_enums/tests.py"
      },
      "phase": "localization",
      "step_indices": [
        12
      ],
      "id": "11:str_replace_editor\nview"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "0:cd",
      "target": "4:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "0:cd",
      "target": "4:python",
      "key": 1
    },
    {
      "label": "7",
      "type": "exec",
      "source": "0:cd",
      "target": "4:python",
      "key": 2
    },
    {
      "label": "8",
      "type": "exec",
      "source": "0:cd",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "0:cd",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "0:cd",
      "target": "9:find",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\ncreate",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:python",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "4:python",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "4:python",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:python",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:python",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:find",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "10:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 1
    }
  ]
}