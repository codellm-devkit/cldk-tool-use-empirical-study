{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sympy__sympy-17318",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 2,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "find",
      "args": [
        "/workspace/sympy__sympy__1.5",
        "sqrtdenest.py",
        "radsimp.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py",
        "view_range": [
          1060,
          1080
        ]
      },
      "phase": "localization",
      "step_indices": [
        1,
        6
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py",
        "view_range": [
          1080,
          1100
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py",
        "view_range": [
          1050,
          1070
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py",
        "view_range": [
          1100,
          1120
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/radsimp.py",
        "old_str": "def _split_gcd(*a):\n    \"\"\"\n    split the list of integers ``a`` into a list of integers, ``a1`` having\n    ``g = gcd(a1)``, and a list ``a2`` whose elements are not divisible by\n    ``g``.  Returns ``g, a1, a2``\n\n    Examples\n    ========\n\n    >>> from sympy.simplify.radsimp import _split_gcd\n    >>> _split_gcd(55, 35, 22, 14, 77, 10)\n    (5, [55, 35, 10], [22, 14, 77])\n    \"\"\"\n    g = a[0]\n    b1 = [g]\n    b2 = []\n    for x in a[1:]:\n        g1 = gcd(g, x)",
        "new_str": "def _split_gcd(*a):\n    \"\"\"\n    split the list of integers ``a`` into a list of integers, ``a1`` having\n    ``g = gcd(a1)``, and a list ``a2`` whose elements are not divisible by\n    ``g``.  Returns ``g, a1, a2``\n\n    Examples\n    ========\n\n    >>> from sympy.simplify.radsimp import _split_gcd\n    >>> _split_gcd(55, 35, 22, 14, 77, 10)\n    (5, [55, 35, 10], [22, 14, 77])\n    >>> _split_gcd()\n    (1, [], [])\n    \"\"\"\n    if not a:\n        return 1, [], []\n    g = a[0]\n    b1 = [g]\n    b2 = []\n    for x in a[1:]:\n        g1 = gcd(g, x)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.5/sympy/simplify/sqrtdenest.py",
        "view_range": [
          150,
          170
        ]
      },
      "phase": "localization",
      "step_indices": [
        8
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        9,
        12
      ],
      "id": "8:empty action"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_sqrtdenest.py",
        "file_text": "\nfrom sympy import sqrt, I, sqrtdenest\n\n# Original failing case\nexpr1 = (3 - sqrt(2)*sqrt(4 + 3*I) + 3*I)/2\nresult1 = sqrtdenest(expr1)\nprint(f\"Original case result: {result1}\")  # Should return expr unchanged\n\n# Standard cases\nexpr2 = sqrt(2 + sqrt(2))\nresult2 = sqrtdenest(expr2)\nprint(f\"Standard case 1 result: {result2}\")\n\nexpr3 = sqrt(5 + 2*sqrt(6))\nresult3 = sqrtdenest(expr3)\nprint(f\"Standard case 2 result: {result3}\")\n\n# Edge case - empty surds\nexpr4 = sqrt(4 + 3*I)\nresult4 = sqrtdenest(expr4)\nprint(f\"Edge case result: {result4}\")  # Should return expr unchanged\n"
      },
      "phase": "verification",
      "step_indices": [
        10
      ],
      "id": "9:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "args": [
        "/workspace"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "10:cd"
    },
    {
      "label": "python",
      "args": [
        "test_sqrtdenest.py"
      ],
      "phase": "verification",
      "step_indices": [
        11
      ],
      "id": "11:python"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:find",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:grep",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:empty action",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:empty action",
      "target": "9:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:str_replace_editor\ncreate",
      "target": "10:cd",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:cd",
      "target": "11:python",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:python",
      "target": "8:empty action",
      "key": 0
    }
  ]
}