{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "astropy__astropy-8872",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        24,
        25
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/astropy__astropy__3.1"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:cd"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          200,
          300
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          300,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)",
        "new_str": "if dtype is None and (not (np.can_cast(np.float32, value.dtype) \n                                   or value.dtype == np.float16  # Explicitly preserve float16\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "complex_command",
      "args": [
        "cat << 'EOF' > /workspace/test_float16.py\nimport numpy as np\nfrom astropy import units as u\n\n# Test float16 preservation\nq16 = np.float16(1) * u.km\nprint(f\"float16 dtype: {q16.dtype} (should be float16)\")\n\n# Test other float types\nq32 = np.float32(1) * u.km\nprint(f\"float32 dtype: {q32.dtype} (should be float32)\")\n\nq64 = np.float64(1) * u.km\nprint(f\"float64 dtype: {q64.dtype} (should be float64)\")\n\n# Test non-float types\nqint = 1 * u.km\nprint(f\"int dtype: {qint.dtype} (should be float64)\")\nEOF\n\npython3 /workspace/test_float16.py"
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "6:complex_command"
    },
    {
      "label": "python3",
      "args": [
        "/workspace/test_float16.py"
      ],
      "phase": "general",
      "step_indices": [
        7,
        11,
        14,
        17,
        21,
        23
      ],
      "id": "7:python3"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\nif dtype is None and (not (np.can_cast(np.float32, value.dtype) \n                                   or value.dtype == np.float16  # Explicitly preserve float16\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
        "new_str": "\nif dtype is None and (value.dtype.kind not in 'fcmM'  # Preserve all float/complex types\n                              and not value.dtype.fields\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          379,
          384
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(np.float32, value.dtype) \n                                   or value.dtype == np.float16  # Explicitly preserve float16\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
        "new_str": "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (value.dtype.kind not in 'fcmM'  # Preserve all float/complex types\n                              and not value.dtype.fields\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          360,
          370
        ]
      },
      "phase": "localization",
      "step_indices": [
        12
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n",
        "new_str": "\n        # Preserve float16/32/64 dtype if not explicitly specified\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n\n        # Preserve float16/32/64 dtype if not explicitly specified\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "new_str": "\n\n        # Handle numpy scalar types explicitly\n        if (dtype is None and isinstance(value, np.generic) \n            and value.dtype.kind in 'fcmM':\n            dtype = value.dtype\n            \n        # For array-like inputs, preserve existing float dtypes\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        15
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n\n        # Handle numpy scalar types explicitly\n        if (dtype is None and isinstance(value, np.generic) \n            and value.dtype.kind in 'fcmM':\n            dtype = value.dtype\n            \n        # For array-like inputs, preserve existing float dtypes\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "new_str": "\n\n        # Explicitly handle numpy float16 scalars\n        if (dtype is None and isinstance(value, np.floating) \n            and value.dtype == np.float16):\n            dtype = np.float16\n            \n        # Handle other numpy scalar types\n        elif (dtype is None and isinstance(value, np.generic) \n              and value.dtype.kind in 'fcmM'):\n            dtype = value.dtype\n            \n        # For array-like inputs, preserve existing float dtypes\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        16
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n\n\n        # Explicitly handle numpy float16 scalars\n        if (dtype is None and isinstance(value, np.floating) \n            and value.dtype == np.float16):\n            dtype = np.float16\n            \n        # Handle other numpy scalar types\n        elif (dtype is None and isinstance(value, np.generic) \n              and value.dtype.kind in 'fcmM'):\n            dtype = value.dtype\n            \n        # For array-like inputs, preserve existing float dtypes\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n\n",
        "new_str": "\n\n\n        # First convert to numpy array while preserving dtype\n        if isinstance(value, (np.number, np.ndarray)):\n            temp_value = np.asarray(value)\n            if dtype is None and temp_value.dtype.kind in 'fcmM':\n                dtype = temp_value.dtype\n                \n        # Special handling for float16 scalars\n        elif (dtype is None and isinstance(value, np.float16)):\n            dtype = np.float16\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          368,
          385
        ]
      },
      "phase": "localization",
      "step_indices": [
        19
      ],
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n        # Explicitly handle numpy float16 scalars\n        if (dtype is None and isinstance(value, np.floating) \n            and value.dtype == np.float16):\n            dtype = np.float16\n            \n        # Handle other numpy scalar types\n        elif (dtype is None and isinstance(value, np.generic) \n              and value.dtype.kind in 'fcmM'):\n            dtype = value.dtype\n            \n        # For array-like inputs, preserve existing float dtypes\n        input_dtype = getattr(value, 'dtype', None)\n        if (dtype is None and input_dtype is not None \n            and input_dtype.kind in 'fcmM'):\n            dtype = input_dtype\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n",
        "new_str": "\n        # First convert to numpy array while preserving dtype\n        if isinstance(value, (np.number, np.ndarray)):\n            temp_value = np.asarray(value)\n            if dtype is None and temp_value.dtype.kind in 'fcmM':\n                dtype = temp_value.dtype\n                \n        # Special handling for float16 scalars\n        elif (dtype is None and isinstance(value, np.float16)):\n            dtype = np.float16\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        20
      ],
      "id": "17:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n\n        # First convert to numpy array while preserving dtype\n        if isinstance(value, (np.number, np.ndarray)):\n            temp_value = np.asarray(value)\n            if dtype is None and temp_value.dtype.kind in 'fcmM':\n                dtype = temp_value.dtype\n                \n        # Special handling for float16 scalars\n        elif (dtype is None and isinstance(value, np.float16)):\n            dtype = np.float16\n            \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "new_str": "\n\n        # Special handling for float16 scalars - convert to array first\n        if isinstance(value, np.float16):\n            value = np.array(value, dtype=np.float16)\n            if dtype is None:\n                dtype = np.float16\n        # General case for other types\n        elif isinstance(value, (np.number, np.ndarray)):\n            temp_value = np.asarray(value)\n            if dtype is None and temp_value.dtype.kind in 'fcmM':\n                dtype = temp_value.dtype\n                \n        value = np.array(value, dtype=dtype, copy=copy, order=order,\n                         subok=False, ndmin=ndmin)\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        22
      ],
      "id": "18:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "view_range": [
          200,
          220
        ]
      },
      "phase": "localization",
      "step_indices": [
        26
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__3.1/astropy/units/quantity.py",
        "old_str": "\n\n    dtype : ~numpy.dtype, optional\n        The dtype of the resulting Numpy array or scalar that will\n        hold the value.  If not provided, it is determined from the input,\n        except that any input that cannot represent float (integer and bool)\n        is converted to float.\n\n",
        "new_str": "\n\n    dtype : ~numpy.dtype, optional\n        The dtype of the resulting Numpy array or scalar that will\n        hold the value.  If not provided, it is determined from the input,\n        except that any input that cannot represent float (integer and bool)\n        is converted to float. Note that numpy.float16 scalar inputs may be\n        automatically promoted to float64 following numpy's type promotion rules,\n        while float16 arrays will preserve their dtype.\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        27
      ],
      "id": "20:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "0:empty action",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "0:empty action",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "6:complex_command",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:complex_command",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:python3",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "7:python3",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "7:python3",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "7:python3",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "7:python3",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "7:python3",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "16:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "17:str_replace_editor\nstr_replace",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "18:str_replace_editor\nstr_replace",
      "target": "7:python3",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}