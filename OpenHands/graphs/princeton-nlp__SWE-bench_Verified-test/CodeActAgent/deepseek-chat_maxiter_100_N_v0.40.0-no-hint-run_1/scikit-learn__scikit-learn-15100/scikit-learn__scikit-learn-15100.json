{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "scikit-learn__scikit-learn-15100",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "find",
      "args": [
        "/workspace/scikit-learn__scikit-learn__0.22",
        "test*",
        "d"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:find"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "view_range": [
          200,
          250
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "view_range": [
          300,
          350
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "5:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "view_range": [
          100,
          130
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "view_range": [
          130,
          160
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.22/sklearn/feature_extraction/text.py",
        "old_str": "def strip_accents_unicode(s):\n    \"\"\"Transform accentuated unicode symbols into their simple counterpart\n\n    Warning: the python-level loop and join operations make this\n    implementation 20 times slower than the strip_accents_ascii basic\n    normalization.\n\n    Parameters\n    ----------\n    s : string\n        The string to strip\n\n    See also\n    --------\n    strip_accents_ascii\n        Remove accentuated char for any unicode symbol that has a direct\n        ASCII equivalent.\n    \"\"\"\n    normalized = unicodedata.normalize('NFKD', s)\n    if normalized == s:\n        return s\n    else:\n        return ''.join([c for c in normalized if not unicodedata.combining(c)])",
        "new_str": "def strip_accents_unicode(s):\n    \"\"\"Transform accentuated unicode symbols into their simple counterpart\n\n    Warning: the python-level loop and join operations make this\n    implementation 20 times slower than the strip_accents_ascii basic\n    normalization.\n\n    Parameters\n    ----------\n    s : string\n        The string to strip\n\n    See also\n    --------\n    strip_accents_ascii\n        Remove accentuated char for any unicode symbol that has a direct\n        ASCII equivalent.\n    \"\"\"\n    normalized = unicodedata.normalize('NFKD', s)\n    return ''.join([c for c in normalized if not unicodedata.combining(c)])",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "8:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:find",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:grep",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:grep",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}