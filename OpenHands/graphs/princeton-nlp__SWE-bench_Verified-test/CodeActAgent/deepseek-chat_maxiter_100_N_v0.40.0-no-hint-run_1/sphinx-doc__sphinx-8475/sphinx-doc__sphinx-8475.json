{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "sphinx-doc__sphinx-8475",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/sphinx-doc__sphinx__3.4"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:cd"
    },
    {
      "label": "grep",
      "args": [
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.4/sphinx/builders/linkcheck.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.4/sphinx/builders/linkcheck.py",
        "view_range": [
          20,
          25
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.4/sphinx/builders/linkcheck.py",
        "old_str": "from requests.exceptions import HTTPError",
        "new_str": "from requests.exceptions import HTTPError, TooManyRedirects",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__3.4/sphinx/builders/linkcheck.py",
        "old_str": "                    except HTTPError:\n                        # retry with GET request if that fails, some servers\n                        # don't like HEAD requests.\n                        response = requests.get(req_url, stream=True, config=self.app.config,\n                                                auth=auth_info, **kwargs)\n                        response.raise_for_status()",
        "new_str": "                    except (HTTPError, TooManyRedirects):\n                        # retry with GET request if that fails, some servers\n                        # don't like HEAD requests or have redirect loops with HEAD\n                        response = requests.get(req_url, stream=True, config=self.app.config,\n                                                auth=auth_info, **kwargs)\n                        response.raise_for_status()",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}