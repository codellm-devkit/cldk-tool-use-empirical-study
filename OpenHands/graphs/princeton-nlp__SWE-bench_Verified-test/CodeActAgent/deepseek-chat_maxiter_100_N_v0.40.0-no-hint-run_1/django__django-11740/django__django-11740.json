{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-11740",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__3.0"
      ],
      "phase": "general",
      "step_indices": [
        0,
        13,
        16
      ],
      "id": "0:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/migrations/operations/fields.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/migrations/autodetector.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/migrations/writer.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/migrations/state.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        5,
        7,
        21
      ],
      "id": "6:empty action"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.0/django/db/migrations/operations/fields.py",
        "old_str": "    def state_forwards(self, app_label, state):\n        if not self.preserve_default:\n            field = self.field.clone()\n            field.default = NOT_PROVIDED\n        else:\n            field = self.field\n        state.models[app_label, self.model_name_lower].fields = [\n            (n, field if n == self.name else f)\n            for n, f in\n            state.models[app_label, self.model_name_lower].fields\n        ]\n        # TODO: investigate if old relational fields must be reloaded or if it's\n        # sufficient if the new field is (#27737).\n        # Delay rendering of relationships if it's not a relational field and\n        # not referenced by a foreign key.\n        delay = (\n            not field.is_relation and\n            not is_referenced_by_foreign_key(state, self.model_name_lower, self.field, self.name)\n        )\n        state.reload_model(app_label, self.model_name_lower, delay=delay)",
        "new_str": "    def state_forwards(self, app_label, state):\n        if not self.preserve_default:\n            field = self.field.clone()\n            field.default = NOT_PROVIDED\n        else:\n            field = self.field\n        \n        # Get old field before replacing it\n        old_field = next(\n            f for n, f in state.models[app_label, self.model_name_lower].fields\n            if n == self.name\n        )\n        \n        state.models[app_label, self.model_name_lower].fields = [\n            (n, field if n == self.name else f)\n            for n, f in\n            state.models[app_label, self.model_name_lower].fields\n        ]\n        \n        # Special case: When changing from non-relation to relation field,\n        # ensure the target model's migration is added as a dependency\n        if not old_field.is_relation and field.is_relation:\n            related_model = field.remote_field.model\n            if isinstance(related_model, str):\n                related_app_label, related_model_name = related_model.split('.')\n            else:\n                related_app_label = related_model._meta.app_label\n                related_model_name = related_model._meta.model_name\n            state.add_relation(\n                app_label,\n                self.model_name_lower,\n                related_app_label,\n                related_model_name\n            )\n            \n        # Delay rendering of relationships if it's not a relational field and\n        # not referenced by a foreign key.\n        delay = (\n            not field.is_relation and\n            not is_referenced_by_foreign_key(state, self.model_name_lower, self.field, self.name)\n        )\n        state.reload_model(app_label, self.model_name_lower, delay=delay)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "complex_command",
      "args": [
        "mkdir -p /workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/migrations &amp;&amp;\nmkdir -p /workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app2/migrations &amp;&amp;\ntouch /workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/__init__.py &amp;&amp;\ntouch /workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/__init__.py &amp;&amp;\ntouch /workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app2/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:complex_command"
    },
    {
      "label": "mkdir",
      "args": [],
      "phase": "general",
      "step_indices": [
        9,
        9
      ],
      "id": "9:mkdir"
    },
    {
      "label": "touch",
      "args": [
        "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "10:touch"
    },
    {
      "label": "touch",
      "args": [
        "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "11:touch"
    },
    {
      "label": "touch",
      "args": [
        "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app2/__init__.py"
      ],
      "phase": "general",
      "step_indices": [
        9
      ],
      "id": "12:touch"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/models.py",
        "file_text": "\nfrom django.db import models\nimport uuid\n\nclass App1(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    text = models.CharField(max_length=100)\n    another_app = models.UUIDField(null=True, blank=True)\n"
      },
      "phase": "verification",
      "step_indices": [
        10
      ],
      "id": "13:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app2/models.py",
        "file_text": "\n\nfrom django.db import models\nimport uuid\n\nclass App2(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    text = models.CharField(max_length=100)\n\n"
      },
      "phase": "verification",
      "step_indices": [
        11
      ],
      "id": "14:str_replace_editor\ncreate"
    },
    {
      "label": "complex_command",
      "args": [
        "cd /workspace/django__django__3.0 &amp;&amp;\npython -m django makemigrations app1 --empty --name initial"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "15:complex_command"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/test_settings.py",
        "file_text": "\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': ':memory:',\n    }\n}\nINSTALLED_APPS = [\n    'tests.migrations_test_apps.uuid_fk_conversion.app1',\n    'tests.migrations_test_apps.uuid_fk_conversion.app2',\n]\nSECRET_KEY = 'test'\n"
      },
      "phase": "verification",
      "step_indices": [
        14
      ],
      "id": "16:str_replace_editor\ncreate"
    },
    {
      "label": "complex_command",
      "args": [
        "cd /workspace/django__django__3.0 &amp;&amp;\nDJANGO_SETTINGS_MODULE=tests.migrations_test_apps.uuid_fk_conversion.test_settings \\\npython -m django makemigrations app1 --name initial"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "17:complex_command"
    },
    {
      "label": "set_env",
      "args": [
        "DJANGO_SETTINGS_MODULE=tests.migrations_test_apps.uuid_fk_conversion.test_settings"
      ],
      "phase": "general",
      "step_indices": [
        17,
        19
      ],
      "id": "18:set_env"
    },
    {
      "label": "\npython",
      "args": [
        "makemigrations",
        "app2"
      ],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "19:\npython"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/models.py",
        "old_str": "\nfrom django.db import models\nimport uuid\n\nclass App1(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    text = models.CharField(max_length=100)\n    another_app = models.UUIDField(null=True, blank=True)\n",
        "new_str": "\nfrom django.db import models\nimport uuid\n\nclass App1(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    text = models.CharField(max_length=100)\n    another_app = models.ForeignKey('app2.App2', null=True, blank=True, on_delete=models.SET_NULL)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "20:str_replace_editor\nstr_replace"
    },
    {
      "label": "\npython",
      "args": [
        "makemigrations",
        "app1"
      ],
      "phase": "general",
      "step_indices": [
        19
      ],
      "id": "21:\npython"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__3.0/tests/migrations_test_apps/uuid_fk_conversion/app1/migrations/0002_convert_uuid_to_fk.py"
      },
      "phase": "localization",
      "step_indices": [
        20
      ],
      "id": "22:str_replace_editor\nview"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:find",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "0:cd",
      "target": "16:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "0:cd",
      "target": "18:set_env",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:find",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:empty action",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:empty action",
      "target": "8:complex_command",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "6:empty action",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:complex_command",
      "target": "9:mkdir",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:mkdir",
      "target": "9:mkdir",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:mkdir",
      "target": "10:touch",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:touch",
      "target": "11:touch",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "11:touch",
      "target": "12:touch",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "12:touch",
      "target": "13:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "13:str_replace_editor\ncreate",
      "target": "14:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "14:str_replace_editor\ncreate",
      "target": "15:complex_command",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "15:complex_command",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "16:str_replace_editor\ncreate",
      "target": "17:complex_command",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "17:complex_command",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "18:set_env",
      "target": "19:\npython",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "18:set_env",
      "target": "21:\npython",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "19:\npython",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "18:set_env",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "21:\npython",
      "target": "22:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "22:str_replace_editor\nview",
      "target": "6:empty action",
      "key": 0
    }
  ]
}