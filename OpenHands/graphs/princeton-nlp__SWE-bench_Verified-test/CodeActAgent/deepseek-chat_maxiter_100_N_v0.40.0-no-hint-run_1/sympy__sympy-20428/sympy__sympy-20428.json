{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unsubmitted",
    "instance_name": "sympy__sympy-20428",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 4
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/sympy__sympy__1.8"
      ],
      "phase": "general",
      "step_indices": [
        0,
        1,
        4,
        6,
        8,
        13,
        14,
        17,
        23,
        25,
        28,
        32,
        34
      ],
      "id": "0:cd"
    },
    {
      "label": "grep",
      "args": [
        "."
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "view_range": [
          400,
          450
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "view_range": [
          500,
          550
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "sympy/polys/polyclasses.py"
      ],
      "phase": "general",
      "step_indices": [
        4
      ],
      "id": "4:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "view_range": [
          580,
          620
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def dmp_clear_denoms",
        "."
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "6:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/densetools.py",
        "view_range": [
          1220,
          1260
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def _rec_clear_denoms",
        "."
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/densetools.py",
        "view_range": [
          1200,
          1225
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/densetools.py",
        "old_str": "    if not K1.is_one(common):\n        f = dmp_mul_ground(f, common, u, K0)\n\n    if not convert:\n        return common, f\n    else:\n        return common, dmp_convert(f, u, K0, K1)",
        "new_str": "    if not K1.is_one(common):\n        f = dmp_mul_ground(f, common, u, K0)\n\n    # Normalize zero polynomials in EX domain\n    if K0 == EX and dmp_zero_p(f, u):\n        f = dmp_zero(u)\n\n    if not convert:\n        return common, f\n    else:\n        return common, dmp_convert(f, u, K0, K1)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_clear_denoms.py",
        "file_text": "\nfrom sympy import *\nfrom sympy.polys.polytools import Poly\nfrom sympy.polys.domains import EX\n\nx = symbols(\"x\")\nf = Poly(sympify(\"-117968192370600*18**(1/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + 2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) - 15720318185*2**(2/3)*3**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + 2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) + 15720318185*12**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + 2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) + 117968192370600*2**(1/3)*3**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + 2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3))\"), x)\n\n# Test clear_denoms behavior\ncoeff, bad_poly = f.clear_denoms()\n\n# Verify fixes\nassert bad_poly.is_zero == True, \"is_zero should return True for zero poly\"\nassert bad_poly.as_expr() == 0, \"as_expr() should return 0\"\nassert bad_poly.terms_gcd()[1] == Poly(0, x), \"terms_gcd should work on zero poly\"\nassert bad_poly.rep.rep == [], \"DMP representation should be empty list\"\n\nprint(\"All tests passed - fix is working correctly!\")\n"
      },
      "phase": "verification",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "args": [
        "/workspace"
      ],
      "phase": "general",
      "step_indices": [
        12,
        20,
        22,
        31,
        37
      ],
      "id": "12:cd"
    },
    {
      "label": "python",
      "args": [
        "test_clear_denoms.py"
      ],
      "phase": "verification",
      "step_indices": [
        12,
        20,
        22,
        31,
        37
      ],
      "id": "13:python"
    },
    {
      "label": "grep",
      "args": [
        "@property.*is_zero",
        "sympy/polys/"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "14:grep"
    },
    {
      "label": "grep",
      "args": [
        "def is_zero",
        "sympy/polys/"
      ],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "15:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          3780,
          3790
        ]
      },
      "phase": "localization",
      "step_indices": [
        15
      ],
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          3780,
          3820
        ]
      },
      "phase": "localization",
      "step_indices": [
        16
      ],
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def is_zero",
        "sympy/polys/polyclasses.py"
      ],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "18:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "view_range": [
          840,
          850
        ]
      },
      "phase": "localization",
      "step_indices": [
        18
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "old_str": "\n    @property\n    def is_zero(f):\n        \"\"\"Returns ``True`` if ``f`` is a zero polynomial. \"\"\"\n        return dmp_zero_p(f.rep, f.lev)\n",
        "new_str": "\n    @property\n    def is_zero(f):\n        \"\"\"Returns ``True`` if ``f`` is a zero polynomial. \"\"\"\n        if f.dom == EX and f.rep == [f.dom.zero]:\n            return True\n        return dmp_zero_p(f.rep, f.lev)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        19
      ],
      "id": "20:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "\n\n    @property\n    def is_zero(f):\n        \"\"\"\n        Returns ``True`` if ``f`` is a zero polynomial.\n\n        Examples\n        ========\n\n        >>> from sympy import Poly\n        >>> from sympy.abc import x\n\n        >>> Poly(0, x).is_zero\n        True\n        >>> Poly(1, x).is_zero\n        False\n\n        \"\"\"\n        return f.rep.is_zero\n\n",
        "new_str": "\n\n    @property\n    def is_zero(f):\n        \"\"\"\n        Returns ``True`` if ``f`` is a zero polynomial.\n\n        Examples\n        ========\n\n        >>> from sympy import Poly\n        >>> from sympy.abc import x\n\n        >>> Poly(0, x).is_zero\n        True\n        >>> Poly(1, x).is_zero\n        False\n\n        \"\"\"\n        if f.domain == EX and f.as_expr() == 0:\n            return True\n        return f.rep.is_zero\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        21
      ],
      "id": "21:str_replace_editor\nstr_replace"
    },
    {
      "label": "grep",
      "args": [
        "def __init__",
        "sympy/polys/polytools.py"
      ],
      "phase": "general",
      "step_indices": [
        23
      ],
      "id": "22:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          100,
          200
        ]
      },
      "phase": "localization",
      "step_indices": [
        24
      ],
      "id": "23:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def _from_expr",
        "sympy/polys/polytools.py"
      ],
      "phase": "general",
      "step_indices": [
        25
      ],
      "id": "24:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          289,
          320
        ]
      },
      "phase": "localization",
      "step_indices": [
        26
      ],
      "id": "25:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          289,
          300
        ]
      },
      "phase": "localization",
      "step_indices": [
        27
      ],
      "id": "26:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def _from_dict",
        "sympy/polys/polytools.py"
      ],
      "phase": "general",
      "step_indices": [
        28
      ],
      "id": "27:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "view_range": [
          224,
          240
        ]
      },
      "phase": "localization",
      "step_indices": [
        29
      ],
      "id": "28:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "\n        if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n",
        "new_str": "\n        if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n            \n        # Normalize zero polynomials in EX domain\n        if domain == EX and not rep:\n            rep = {tuple([0]*len(gens)): domain.zero}\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        30
      ],
      "id": "29:str_replace_editor\nstr_replace"
    },
    {
      "label": "grep",
      "args": [
        "def from_dict",
        "sympy/polys/polyclasses.py"
      ],
      "phase": "general",
      "step_indices": [
        32
      ],
      "id": "30:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polyclasses.py",
        "view_range": [
          274,
          290
        ]
      },
      "phase": "localization",
      "step_indices": [
        33
      ],
      "id": "31:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "def dmp_from_dict",
        "sympy/polys/"
      ],
      "phase": "general",
      "step_indices": [
        34
      ],
      "id": "32:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/densebasic.py",
        "view_range": [
          975,
          995
        ]
      },
      "phase": "localization",
      "step_indices": [
        35
      ],
      "id": "33:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/densebasic.py",
        "old_str": "\n    if not u:\n        return dup_from_dict(f, K)\n    if not f:\n        return dmp_zero(u)\n",
        "new_str": "\n    if not u:\n        return dup_from_dict(f, K)\n    if not f or (K == EX and all(K.is_zero(c) for c in f.values())):\n        return dmp_zero(u)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        36
      ],
      "id": "34:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "\n\n        if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "new_str": "\n\n        if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n\n        # Normalize zero polynomials in EX domain\n        if domain == EX and (not rep or all(domain.is_zero(c) for c in rep.values())):\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        38
      ],
      "id": "35:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)",
        "new_str": "if domain is None:\n            domain, rep = construct_domain(rep, opt=opt)\n        else:\n            for monom, coeff in rep.items():\n                rep[monom] = domain.convert(coeff)\n\n        # Normalize zero polynomials in EX domain\n        if domain == EX and (not rep or all(domain.is_zero(c) for c in rep.values())):\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        39
      ],
      "id": "36:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "new_str": "\n        # Normalize zero polynomials in EX domain\n        if domain == EX and (not rep or all(domain.is_zero(c) for c in rep.values())):\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        40
      ],
      "id": "37:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.8/sympy/polys/polytools.py",
        "old_str": "\n        # Normalize zero polynomials in EX domain\n        if domain == EX and not rep:\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        # Normalize zero polynomials in EX domain\n        if domain == EX and (not rep or all(domain.is_zero(c) for c in rep.values())):\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "new_str": "\n        # Normalize zero polynomials in EX domain\n        if domain == EX and (not rep or all(domain.is_zero(c) for c in rep.values())):\n            rep = {tuple([0]*len(gens)): domain.zero}\n\n        return cls.new(DMP.from_dict(rep, level, domain), *gens)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        41
      ],
      "id": "38:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:cd",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "0:cd",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "0:cd",
      "target": "4:grep",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "0:cd",
      "target": "6:grep",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "0:cd",
      "target": "8:grep",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "0:cd",
      "target": "14:grep",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "0:cd",
      "target": "15:grep",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "0:cd",
      "target": "18:grep",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "0:cd",
      "target": "22:grep",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "0:cd",
      "target": "24:grep",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "0:cd",
      "target": "27:grep",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "0:cd",
      "target": "30:grep",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "0:cd",
      "target": "32:grep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:grep",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:grep",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\ncreate",
      "target": "12:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "12:cd",
      "target": "13:python",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "12:cd",
      "target": "13:python",
      "key": 1
    },
    {
      "label": "22",
      "type": "exec",
      "source": "12:cd",
      "target": "13:python",
      "key": 2
    },
    {
      "label": "31",
      "type": "exec",
      "source": "12:cd",
      "target": "13:python",
      "key": 3
    },
    {
      "label": "37",
      "type": "exec",
      "source": "12:cd",
      "target": "13:python",
      "key": 4
    },
    {
      "label": "13",
      "type": "exec",
      "source": "13:python",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "13:python",
      "target": "0:cd",
      "key": 1
    },
    {
      "label": "32",
      "type": "exec",
      "source": "13:python",
      "target": "0:cd",
      "key": 2
    },
    {
      "label": "21",
      "type": "exec",
      "source": "13:python",
      "target": "21:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "13:python",
      "target": "35:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "14:grep",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "15:grep",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "type": "hier",
      "source": "17:str_replace_editor\nview",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "18:grep",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "12:cd",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "21:str_replace_editor\nstr_replace",
      "target": "12:cd",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "22:grep",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "23:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "24:grep",
      "target": "25:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "25:str_replace_editor\nview",
      "target": "26:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "25:str_replace_editor\nview",
      "target": "26:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "28",
      "type": "exec",
      "source": "26:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "27:grep",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "28:str_replace_editor\nview",
      "target": "29:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "29:str_replace_editor\nstr_replace",
      "target": "12:cd",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "30:grep",
      "target": "31:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "31:str_replace_editor\nview",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "32:grep",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "33:str_replace_editor\nview",
      "target": "34:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "34:str_replace_editor\nstr_replace",
      "target": "12:cd",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "35:str_replace_editor\nstr_replace",
      "target": "36:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "36:str_replace_editor\nstr_replace",
      "target": "37:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "37:str_replace_editor\nstr_replace",
      "target": "38:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}