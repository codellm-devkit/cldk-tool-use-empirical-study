{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "pydata__xarray-4966",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        3
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/pydata__xarray__0.12"
      ],
      "phase": "general",
      "step_indices": [
        1,
        5,
        7,
        8,
        9,
        10,
        12,
        14
      ],
      "id": "1:cd"
    },
    {
      "label": "python",
      "args": [],
      "phase": "verification",
      "step_indices": [
        1,
        5,
        7,
        8,
        9,
        10,
        12,
        14
      ],
      "id": "2:python"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/coding/variables.py",
        "view_range": [
          300,
          320
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/coding/variables.py",
        "old_str": "            if data.dtype.kind == \"i\":\n                if unsigned == \"true\":\n                    unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=unsigned_dtype)\n                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n            else:\n                warnings.warn(",
        "new_str": "            if data.dtype.kind == \"i\":\n                if unsigned == \"true\":\n                    unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=unsigned_dtype)\n                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n                elif unsigned == \"false\" and data.dtype.kind == \"u\":\n                    signed_dtype = np.dtype(\"i%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=signed_dtype)\n                    data = lazy_elemwise_func(data, transform, signed_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = signed_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n            else:\n                warnings.warn(",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "C-c",
      "args": [],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "5:C-c"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/coding/variables.py",
        "view_range": [
          300,
          330
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/coding/variables.py",
        "old_str": "\n            if data.dtype.kind == \"i\":\n                if unsigned == \"true\":\n                    unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=unsigned_dtype)\n                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n                elif unsigned == \"false\" and data.dtype.kind == \"u\":\n                    signed_dtype = np.dtype(\"i%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=signed_dtype)\n                    data = lazy_elemwise_func(data, transform, signed_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = signed_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n            else:\n                warnings.warn(\n",
        "new_str": "\n            if data.dtype.kind in [\"i\", \"u\"]:\n                if unsigned == \"true\" and data.dtype.kind == \"i\":\n                    unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=unsigned_dtype)\n                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n                elif unsigned == \"false\" and data.dtype.kind == \"u\":\n                    signed_dtype = np.dtype(\"i%s\" % data.dtype.itemsize)\n                    transform = partial(np.asarray, dtype=signed_dtype)\n                    data = lazy_elemwise_func(data, transform, signed_dtype)\n                    if \"_FillValue\" in attrs:\n                        new_fill = signed_dtype.type(attrs[\"_FillValue\"])\n                        attrs[\"_FillValue\"] = new_fill\n            elif data.dtype.kind not in [\"i\", \"u\"]:\n                warnings.warn(\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13
      ],
      "id": "7:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "0:empty action",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 1
    },
    {
      "label": "7",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 2
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 3
    },
    {
      "label": "9",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 4
    },
    {
      "label": "10",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 5
    },
    {
      "label": "12",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 6
    },
    {
      "label": "14",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 7
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:python",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "2:python",
      "target": "5:C-c",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "2:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "2:python",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "2:python",
      "target": "1:cd",
      "key": 2
    },
    {
      "label": "11",
      "type": "exec",
      "source": "2:python",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "2:python",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:C-c",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    }
  ]
}