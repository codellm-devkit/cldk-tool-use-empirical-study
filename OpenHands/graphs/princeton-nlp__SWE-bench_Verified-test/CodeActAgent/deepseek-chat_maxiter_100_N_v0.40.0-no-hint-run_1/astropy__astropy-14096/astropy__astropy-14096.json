{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "astropy__astropy-14096",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/astropy__astropy__5.1"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:cd"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          590,
          610
        ]
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          580,
          620
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py"
      ],
      "phase": "general",
      "step_indices": [
        3,
        25
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          869,
          880
        ]
      },
      "phase": "localization",
      "step_indices": [
        4,
        24
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          875,
          900
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "        # Fail\n        raise AttributeError(\n            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n        )",
        "new_str": "        # First check if this is a property access\n        if attr in self.__class__.__dict__ or attr in self.__dict__:\n            # If we get here, the attribute exists but accessing it raised AttributeError\n            # This means it's a property trying to access a non-existent attribute\n            raise AttributeError(\n                f\"'{self.__class__.__name__}' object property '{attr}' tried to access non-existent attribute\"\n            )\n        \n        # Otherwise, the attribute truly doesn't exist\n        raise AttributeError(\n            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n        )",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "file_text": "\nimport astropy.coordinates as coord\n\nclass CustomCoord(coord.SkyCoord):\n    @property\n    def prop(self):\n        return self.random_attr\n\nc = CustomCoord('00h42m30s', '+41d12m00s', frame='icrs')\ntry:\n    c.prop\nexcept AttributeError as e:\n    print(f\"Error message: {str(e)}\")\n    assert \"tried to access non-existent attribute\" in str(e)\n"
      },
      "phase": "verification",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "args": [
        "/workspace/test_skycoord_subclass.py"
      ],
      "phase": "verification",
      "step_indices": [
        8,
        16,
        18,
        22,
        37,
        39
      ],
      "id": "8:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n        # First check if this is a property access\n        if attr in self.__class__.__dict__ or attr in self.__dict__:\n            # If we get here, the attribute exists but accessing it raised AttributeError\n            # This means it's a property trying to access a non-existent attribute\n            raise AttributeError(\n                f\"'{self.__class__.__name__}' object property '{attr}' tried to access non-existent attribute\"\n            )\n        \n        # Otherwise, the attribute truly doesn't exist\n        raise AttributeError(\n            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n        )\n",
        "new_str": "\n        # Fail\n        raise AttributeError(\n            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n        )\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n__all__ = [\"SkyCoord\", \"SkyCoordInfo\"]\n\n\nclass SkyCoordInfo(MixinInfo):\n",
        "new_str": "\n__all__ = [\"SkyCoord\", \"SkyCoordInfo\"]\n\n\ndef skycoord_property(fget):\n    \"\"\"Custom property decorator that improves attribute error messages.\n    \n    Wraps properties to properly report when they fail due to missing attributes\n    rather than reporting the property itself as missing.\n    \"\"\"\n    def wrapper(self):\n        try:\n            return fget(self)\n        except AttributeError as e:\n            raise AttributeError(\n                f\"'{self.__class__.__name__}' object property '{fget.__name__}' \"\n                f\"tried to access non-existent attribute: {str(e)}\"\n            ) from None\n    return property(wrapper)\n\n\nclass SkyCoordInfo(MixinInfo):\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n\nimport astropy.coordinates as coord\n\nclass CustomCoord(coord.SkyCoord):\n    @property\n    def prop(self):\n        return self.random_attr\n\n",
        "new_str": "\n\nimport astropy.coordinates as coord\nfrom astropy.coordinates.sky_coordinate import skycoord_property\n\nclass CustomCoord(coord.SkyCoord):\n    @skycoord_property\n    def prop(self):\n        return self.random_attr\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py"
      },
      "phase": "localization",
      "step_indices": [
        13,
        20
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "@property\n    def prop(self):\n        return self.random_attr",
        "new_str": "@skycoord_property\n    def prop(self):\n        return self.random_attr",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\nimport astropy.coordinates as coord\n",
        "new_str": "\nimport astropy.coordinates as coord\nfrom astropy.coordinates.sky_coordinate import skycoord_property\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        15
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\nimport astropy.coordinates as coord\nfrom astropy.coordinates.sky_coordinate import skycoord_property\n",
        "new_str": "\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates import sky_coordinate\nfrom astropy.coordinates import SkyCoord as coord\nskycoord_property = sky_coordinate.skycoord_property\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        17
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates import sky_coordinate\nfrom astropy.coordinates import SkyCoord as coord\nskycoord_property = sky_coordinate.skycoord_property\n\n",
        "new_str": "\n\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates import sky_coordinate\nfrom astropy.coordinates.sky_coordinate import SkyCoord\nskycoord_property = sky_coordinate.skycoord_property\n\nclass CustomCoord(SkyCoord):\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        19
      ],
      "id": "17:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\nfrom astropy.coordinates import SkyCoord as coord\nskycoord_property = sky_coordinate.skycoord_property\n\nclass CustomCoord(coord.SkyCoord):\n",
        "new_str": "\nfrom astropy.coordinates.sky_coordinate import SkyCoord\nskycoord_property = sky_coordinate.skycoord_property\n\nclass CustomCoord(SkyCoord):\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        21
      ],
      "id": "18:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n\ndef __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n        if \"_sky_coord_frame\" in self.__dict__:\n            if self._is_name(attr):\n                return self  # Should this be a deepcopy of self?\n\n",
        "new_str": "\n\ndef __getattribute__(self, attr):\n        try:\n            return object.__getattribute__(self, attr)\n        except AttributeError as e:\n            # Check if this is a property access that failed\n            cls = type(self)\n            if attr in cls.__dict__ and isinstance(cls.__dict__[attr], property):\n                raise AttributeError(\n                    f\"'{cls.__name__}' object property '{attr}' \"\n                    f\"tried to access non-existent attribute: {str(e)}\"\n                ) from None\n            raise\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n        if \"_sky_coord_frame\" in self.__dict__:\n            if self._is_name(attr):\n                return self  # Should this be a deepcopy of self?\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        23
      ],
      "id": "19:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "view_range": [
          880,
          900
        ]
      },
      "phase": "localization",
      "step_indices": [
        26
      ],
      "id": "20:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n\n",
        "new_str": "\n\n    def __getattribute__(self, attr):\n        try:\n            return object.__getattribute__(self, attr)\n        except AttributeError as e:\n            # Check if this is a property access that failed\n            cls = type(self)\n            if attr in cls.__dict__ and isinstance(cls.__dict__[attr], property):\n                raise AttributeError(\n                    f\"'{cls.__name__}' object property '{attr}' \"\n                    f\"tried to access non-existent attribute: {str(e)}\"\n                ) from None\n            raise\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        27
      ],
      "id": "21:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n",
        "new_str": "\n    def __getattribute__(self, attr):\n        try:\n            return object.__getattribute__(self, attr)\n        except AttributeError as e:\n            # Check if this is a property access that failed\n            cls = type(self)\n            if attr in cls.__dict__ and isinstance(cls.__dict__[attr], property):\n                raise AttributeError(\n                    f\"'{cls.__name__}' object property '{attr}' \"\n                    f\"tried to access non-existent attribute: {str(e)}\"\n                ) from None\n            raise\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        28
      ],
      "id": "22:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n\n@skycoord_property\n    def prop(self):\n\n",
        "new_str": "\n\n@property\n    def prop(self):\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        29
      ],
      "id": "23:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "view_range": [
          5,
          15
        ]
      },
      "phase": "localization",
      "step_indices": [
        30
      ],
      "id": "24:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n\n    @skycoord_property\n    def prop(self):\n\n",
        "new_str": "\n\n    @property\n    def prop(self):\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        31
      ],
      "id": "25:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n    @skycoord_property\n    def prop(self):\n",
        "new_str": "\n    @property\n    def prop(self):\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        32
      ],
      "id": "26:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\n\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates import sky_coordinate\nfrom astropy.coordinates.sky_coordinate import SkyCoord\nskycoord_property = sky_coordinate.skycoord_property\n\n",
        "new_str": "\n\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates.sky_coordinate import SkyCoord\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        33,
        35
      ],
      "id": "27:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "view_range": [
          1,
          10
        ]
      },
      "phase": "localization",
      "step_indices": [
        34
      ],
      "id": "28:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_skycoord_subclass.py",
        "old_str": "\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates import sky_coordinate\nfrom astropy.coordinates.sky_coordinate import SkyCoord\nskycoord_property = sky_coordinate.skycoord_property\n",
        "new_str": "\nimport sys\nsys.path.insert(0, '/workspace/astropy__astropy__5.1')\nfrom astropy.coordinates.sky_coordinate import SkyCoord\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        36
      ],
      "id": "29:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.1/astropy/coordinates/sky_coordinate.py",
        "old_str": "\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n        if \"_sky_coord_frame\" in self.__dict__:\n            if self._is_name(attr):\n                return self  # Should this be a deepcopy of self?\n\n",
        "new_str": "\n\n    def __getattr__(self, attr):\n        \"\"\"\n        Overrides getattr to return coordinates that this can be transformed\n        to, based on the alias attr in the primary transform graph.\n        \"\"\"\n        # First check if this is a property access that failed\n        cls = type(self)\n        if attr in cls.__dict__ and isinstance(cls.__dict__[attr], property):\n            raise AttributeError(\n                f\"'{cls.__name__}' object property '{attr}' \"\n                f\"tried to access non-existent attribute\"\n            )\n\n        if \"_sky_coord_frame\" in self.__dict__:\n            if self._is_name(attr):\n                return self  # Should this be a deepcopy of self?\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        38
      ],
      "id": "30:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:cd",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "3:grep",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "5:str_replace_editor\nview",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\ncreate",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:python",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "8:python",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "8:python",
      "target": "17:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "8:python",
      "target": "19:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "8:python",
      "target": "30:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "13:str_replace_editor\nview",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "13:str_replace_editor\nview",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "17:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "18:str_replace_editor\nstr_replace",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "19:str_replace_editor\nstr_replace",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "20:str_replace_editor\nview",
      "target": "21:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "21:str_replace_editor\nstr_replace",
      "target": "22:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "22:str_replace_editor\nstr_replace",
      "target": "23:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "23:str_replace_editor\nstr_replace",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "24:str_replace_editor\nview",
      "target": "25:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "25:str_replace_editor\nstr_replace",
      "target": "26:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "26:str_replace_editor\nstr_replace",
      "target": "27:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "27:str_replace_editor\nstr_replace",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "27:str_replace_editor\nstr_replace",
      "target": "29:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "28:str_replace_editor\nview",
      "target": "27:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "29:str_replace_editor\nstr_replace",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "30:str_replace_editor\nstr_replace",
      "target": "8:python",
      "key": 0
    }
  ]
}