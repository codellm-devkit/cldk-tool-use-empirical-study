{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "astropy__astropy-13453",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/astropy__astropy__5.0"
      ],
      "phase": "general",
      "step_indices": [
        1,
        3,
        4,
        5,
        7,
        8,
        10,
        12,
        18
      ],
      "id": "1:cd"
    },
    {
      "label": "\nfind",
      "args": [
        ".",
        "*.py",
        "|",
        "xargs",
        "grep",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        1,
        4
      ],
      "id": "2:\nfind"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/tests/test_html.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "\nfind",
      "args": [
        ".",
        "*.py",
        "|",
        "xargs",
        "grep",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "4:\nfind"
    },
    {
      "label": "\nfind",
      "args": [
        "astropy/io/ascii",
        "*.py",
        "|",
        "xargs",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        5,
        8
      ],
      "id": "5:\nfind"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py"
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "astropy/io/ascii/html.py"
      ],
      "phase": "general",
      "step_indices": [
        7,
        18
      ],
      "id": "7:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/core.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "astropy/io/ascii/core.py",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        10
      ],
      "id": "9:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "view_range": [
          340,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "astropy/io/ascii/core.py"
      ],
      "phase": "general",
      "step_indices": [
        12
      ],
      "id": "11:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "view_range": [
          356,
          370
        ]
      },
      "phase": "localization",
      "step_indices": [
        13
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "        self.data._set_fill_values(cols)\n\n        lines = []",
        "new_str": "        self.data._set_fill_values(cols)\n        self._set_col_formats()\n\n        lines = []",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "file_text": "\nfrom astropy.table import Table\nfrom io import StringIO\n\ndef test_html_formats():\n    # Create test table with floating point numbers\n    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))\n    \n    # Test HTML output with formatting\n    with StringIO() as sp:\n        t.write(sp, format=\"html\", formats={\"a\": lambda x: f\"{x:.2e}\"})\n        html_output = sp.getvalue()\n    \n    # Verify formatted values appear in HTML\n    assert \"1.24e-24\" in html_output\n    assert \"3.23e-15\" in html_output\n    assert \"1.23875234858e-24\" not in html_output  # Original unformatted value\n    \n    print(\"Test passed - HTML formats working correctly\")\n\nif __name__ == \"__main__\":\n    test_html_formats()\n"
      },
      "phase": "verification",
      "step_indices": [
        15
      ],
      "id": "14:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "args": [
        "/workspace"
      ],
      "phase": "general",
      "step_indices": [
        16,
        25,
        29,
        32,
        36,
        40
      ],
      "id": "15:cd"
    },
    {
      "label": "python",
      "args": [
        "test_html_formats.py"
      ],
      "phase": "verification",
      "step_indices": [
        16,
        25,
        29,
        32,
        36,
        40
      ],
      "id": "16:python"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                new_col_iter_str_vals = self.fill_values(\n                                    col, new_col.info.iter_str_vals())\n                                col_str_iters.append(new_col_iter_str_vals)\n                                new_cols_escaped.append(col_escaped)\n                                new_cols.append(new_col)\n                            else:\n",
        "new_str": "\n                                new_col_iter_str_vals = self.fill_values(\n                                    col, new_col.info.iter_str_vals())\n                                col_str_iters.append(new_col_iter_str_vals)\n                                new_cols_escaped.append(col_escaped)\n                                new_cols.append(new_col)\n                            else:\n                                col_str_iters.append(self.fill_values(\n                                    col, col.info.iter_str_vals()))\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        17
      ],
      "id": "17:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                else:\n                                    col_iter_str_vals = self.fill_values(\n                                        col, col.info.iter_str_vals())\n                                    col_str_iters.append(col_iter_str_vals)\n",
        "new_str": "\n                                else:\n                                    col_iter_str_vals = self.fill_values(\n                                        col, col.info.iter_str_vals())\n                                    col_str_iters.append(col_iter_str_vals)\n                                    new_cols_escaped.append(col_escaped)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        19
      ],
      "id": "18:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "view_range": [
          430,
          450
        ]
      },
      "phase": "localization",
      "step_indices": [
        20
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                else:\n\n                                    col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                    col_str_iters.append(col_iter_str_vals)\n\n                                    new_cols_escaped.append(col_escaped)\n",
        "new_str": "\n                                else:\n                                    # Use formatted values from column\n                                    col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                    col_str_iters.append(col_iter_str_vals)\n                                    new_cols_escaped.append(col_escaped)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        21,
        22
      ],
      "id": "20:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "view_range": [
          438,
          445
        ]
      },
      "phase": "localization",
      "step_indices": [
        23
      ],
      "id": "21:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                    new_cols.append(new_col)\n                            else:\n\n                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                col_str_iters.append(col_iter_str_vals)\n\n                                new_cols_escaped.append(col_escaped)\n\n",
        "new_str": "\n                                    new_cols.append(new_col)\n                            else:\n                                # Use formatted values from column\n                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                col_str_iters.append(col_iter_str_vals)\n                                new_cols_escaped.append(col_escaped)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        24
      ],
      "id": "22:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                # Potentially disable HTML escaping for column\n                                method = ('escape_xml' if col_escaped else 'bleach_clean')\n                                with w.tag('td'):\n                                    getattr(w, method)(el)\n",
        "new_str": "\n                                # Potentially disable HTML escaping for column\n                                method = ('escape_xml' if col_escaped else 'bleach_clean')\n                                with w.tag('td'):\n                                    # Use formatted value from column\n                                    formatted_val = col.info.format(col.info.dtype.type(el))\n                                    getattr(w, method)(formatted_val)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        26
      ],
      "id": "23:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "view_range": [
          445,
          455
        ]
      },
      "phase": "localization",
      "step_indices": [
        27
      ],
      "id": "24:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                # Potentially disable HTML escaping for column\n                                method = ('escape_xml' if col_escaped else 'bleach_clean')\n                                with w.xml_cleaning_method(method, **raw_html_clean_kwargs):\n                                    w.start('td')\n                                    w.data(el.strip())\n                                    w.end(indent=False)\n",
        "new_str": "\n                                # Potentially disable HTML escaping for column\n                                method = ('escape_xml' if col_escaped else 'bleach_clean')\n                                with w.xml_cleaning_method(method, **raw_html_clean_kwargs):\n                                    w.start('td')\n                                    # Use formatted value from column\n                                    formatted_val = str(col.info.dtype.type(el)) if col.info.format is None else col.info.format(el)\n                                    w.data(formatted_val.strip())\n                                    w.end(indent=False)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        28
      ],
      "id": "25:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n\n                                    # Use formatted value from column\n                                    formatted_val = str(col.info.dtype.type(el)) if col.info.format is None else col.info.format(el)\n                                    w.data(formatted_val.strip())\n\n",
        "new_str": "\n\n                                    # Use formatted value from column\n                                    col_obj = cols[new_cols_escaped.index(col_escaped)]\n                                    formatted_val = str(col_obj.info.dtype.type(el)) if col_obj.info.format is None else col_obj.info.format(el)\n                                    w.data(formatted_val.strip())\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        30
      ],
      "id": "26:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/astropy__astropy__5.0/astropy/io/ascii/html.py",
        "old_str": "\n                                    # Use formatted value from column\n                                    formatted_val = str(col.info.dtype.type(el)) if col.info.format is None else col.info.format(el)\n                                    w.data(formatted_val.strip())\n",
        "new_str": "\n                                    # Use formatted value from column\n                                    col_obj = cols[new_cols_escaped.index(col_escaped)]\n                                    formatted_val = str(col_obj.info.dtype.type(el)) if col_obj.info.format is None else col_obj.info.format(el)\n                                    w.data(formatted_val.strip())\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        31
      ],
      "id": "27:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "old_str": "\n\n    # Test HTML output with formatting\n    with StringIO() as sp:\n        t.write(sp, format=\"html\", formats={\"a\": lambda x: f\"{x:.2e}\"})\n        html_output = sp.getvalue()\n    \n    # Verify formatted values appear in HTML\n    assert \"1.24e-24\" in html_output\n",
        "new_str": "\n\n    # Test HTML output with formatting\n    print(\"Column formats before write:\", t['a'].info.format)\n    with StringIO() as sp:\n        t.write(sp, format=\"html\", formats={\"a\": lambda x: f\"{x:.2e}\"})\n        html_output = sp.getvalue()\n    \n    print(\"HTML output:\", html_output)\n    # Verify formatted values appear in HTML\n    assert \"1.24e-24\" in html_output\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        33
      ],
      "id": "28:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "view_range": [
          10,
          20
        ]
      },
      "phase": "localization",
      "step_indices": [
        34
      ],
      "id": "29:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "old_str": "\n    with StringIO() as sp:\n        t.write(sp, format=\"html\", formats={\"a\": lambda x: f\"{x:.2e}\"})\n        html_output = sp.getvalue()\n    \n    # Verify formatted values appear in HTML\n    assert \"1.24e-24\" in html_output\n",
        "new_str": "\n    print(\"Column formats before write:\", t['a'].info.format)\n    with StringIO() as sp:\n        t.write(sp, format=\"html\", formats={\"a\": lambda x: f\"{x:.2e}\"})\n        html_output = sp.getvalue()\n    \n    print(\"HTML output:\", html_output)\n    # Verify formatted values appear in HTML\n    assert \"1.24e-24\" in html_output\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        35
      ],
      "id": "30:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "old_str": "\n\n    # Create test table with floating point numbers\n    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))\n    \n    # Test HTML output with formatting\n    print(\"Column formats before write:\", t['a'].info.format)\n\n",
        "new_str": "\n\n    # Create test table with floating point numbers\n    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))\n    \n    # Explicitly set column format\n    t['a'].format = '.2e'\n    print(\"Column formats after setting:\", t['a'].format)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        37
      ],
      "id": "31:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "view_range": [
          5,
          10
        ]
      },
      "phase": "localization",
      "step_indices": [
        38
      ],
      "id": "32:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/test_html_formats.py",
        "old_str": "\ndef test_html_formats():\n    # Create test table with floating point numbers\n    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))\n    \n    # Test HTML output with formatting\n    print(\"Column formats before write:\", t['a'].info.format)\n",
        "new_str": "\ndef test_html_formats():\n    # Create test table with floating point numbers\n    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))\n    \n    # Explicitly set column format\n    t['a'].format = '.2e'\n    print(\"Column formats after setting:\", t['a'].format)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        39
      ],
      "id": "33:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 1
    },
    {
      "label": "3",
      "type": "exec",
      "source": "1:cd",
      "target": "4:\nfind",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:cd",
      "target": "5:\nfind",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "5:\nfind",
      "key": 1
    },
    {
      "label": "7",
      "type": "exec",
      "source": "1:cd",
      "target": "7:\ngrep",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "1:cd",
      "target": "7:\ngrep",
      "key": 1
    },
    {
      "label": "10",
      "type": "exec",
      "source": "1:cd",
      "target": "9:\ngrep",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "1:cd",
      "target": "11:\ngrep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:\nfind",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "2:\nfind",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:\nfind",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:\nfind",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "5:\nfind",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "6:str_replace_editor\nview",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:\ngrep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "7:\ngrep",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "9:\ngrep",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "type": "hier",
      "source": "10:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "11:\ngrep",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "14:str_replace_editor\ncreate",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 1
    },
    {
      "label": "29",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 2
    },
    {
      "label": "32",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 3
    },
    {
      "label": "36",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 4
    },
    {
      "label": "40",
      "type": "exec",
      "source": "15:cd",
      "target": "16:python",
      "key": 5
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:python",
      "target": "17:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "16:python",
      "target": "23:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "16:python",
      "target": "26:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "16:python",
      "target": "28:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "16:python",
      "target": "31:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "18:str_replace_editor\nstr_replace",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "19:str_replace_editor\nview",
      "target": "21:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "20:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "20:str_replace_editor\nstr_replace",
      "target": "21:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "21:str_replace_editor\nview",
      "target": "22:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "22:str_replace_editor\nstr_replace",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "23:str_replace_editor\nstr_replace",
      "target": "24:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "24:str_replace_editor\nview",
      "target": "25:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "25:str_replace_editor\nstr_replace",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "26:str_replace_editor\nstr_replace",
      "target": "27:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "27:str_replace_editor\nstr_replace",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "28:str_replace_editor\nstr_replace",
      "target": "29:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "29:str_replace_editor\nview",
      "target": "30:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "30:str_replace_editor\nstr_replace",
      "target": "15:cd",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "31:str_replace_editor\nstr_replace",
      "target": "32:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "32:str_replace_editor\nview",
      "target": "33:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "33:str_replace_editor\nstr_replace",
      "target": "15:cd",
      "key": 0
    }
  ]
}