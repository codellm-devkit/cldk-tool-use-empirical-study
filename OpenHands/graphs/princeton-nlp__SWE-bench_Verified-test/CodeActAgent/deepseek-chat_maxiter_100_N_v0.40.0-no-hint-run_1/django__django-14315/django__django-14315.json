{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-14315",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 2,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__4.0"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:cd"
    },
    {
      "label": "find",
      "args": [
        ".",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "view_range": [
          1,
          30
        ]
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/base/client.py",
        "view_range": [
          1,
          30
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/base/client.py",
        "view_range": [
          1,
          26
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "        if user:\n            args += ['-U', user]",
        "new_str": "        if user:\n            args += ['-U', user]\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n        if user:\n            args += ['-U', user]\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n",
        "new_str": "\n        if user:\n            args += ['-U', user]\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n\n        if user:\n            args += ['-U', user]\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        if dbname:\n            args += [dbname]\n        args.extend(parameters)\n\n",
        "new_str": "\n\n        if user:\n            args += ['-U', user]\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n        if dbname:\n            args += [dbname]\n        args.extend(parameters)\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "view_range": [
          25,
          55
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n        if not dbname and not service:\n            # Connect to the default 'postgres' db.\n            dbname = 'postgres'\n        if user:\n            args += ['-U', user]\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        if dbname:\n            args += [dbname]\n        args.extend(parameters)\n\n        env = {}\n",
        "new_str": "\n        if not dbname and not service:\n            # Connect to the default 'postgres' db.\n            dbname = 'postgres'\n        if user:\n            args += ['-U', user]\n        if host:\n            args += ['-h', host]\n        if port:\n            args += ['-p', str(port)]\n        if dbname:\n            args += [dbname]\n        args.extend(parameters)\n        \n        env = {}\n        if passwd:\n            env['PGPASSWORD'] = passwd\n        if passfile:\n            env['PGPASSFILE'] = passfile\n        if sslmode:\n            env['PGSSLMODE'] = sslmode\n        if sslrootcert:\n            env['PGSSLROOTCERT'] = sslrootcert\n        if sslcert:\n            env['PGSSLCERT'] = sslcert\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        8
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n\n        return args, (env or None)\n        if passwd:\n            env['PGPASSWORD'] = str(passwd)\n        if service:\n            env['PGSERVICE'] = str(service)\n        if sslmode:\n\n",
        "new_str": "\n\n        return args, (env or None)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        9
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "view_range": [
          50,
          60
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        if passwd:\n            env['PGPASSWORD'] = str(passwd)\n        if service:\n            env['PGSERVICE'] = str(service)\n        if sslmode:\n            env['PGSSLMODE'] = str(sslmode)\n        if sslrootcert:\n",
        "new_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n            env['PGSSLROOTCERT'] = str(sslrootcert)\n        if sslcert:\n            env['PGSSLCERT'] = str(sslcert)\n        if sslkey:\n            env['PGSSLKEY'] = str(sslkey)\n\n",
        "new_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "view_range": [
          45,
          60
        ]
      },
      "phase": "localization",
      "step_indices": [
        13,
        16
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n            env['PGSSLROOTCERT'] = str(sslrootcert)\n        if sslcert:\n            env['PGSSLCERT'] = str(sslcert)\n        if sslkey:\n            env['PGSSLKEY'] = str(sslkey)\n        if passfile:\n            env['PGPASSFILE'] = str(passfile)\n",
        "new_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        return args, env\n\n",
        "new_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        15
      ],
      "id": "16:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        return args, env\n\n\n",
        "new_str": "\n\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        17
      ],
      "id": "17:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.0/django/db/backends/postgresql/client.py",
        "old_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n        return args, env\n",
        "new_str": "\n        if sslkey:\n            env['PGSSLKEY'] = sslkey\n            \n        return args, (env or None)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "18:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:find",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:find",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "17:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "14:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:str_replace_editor\nstr_replace",
      "target": "18:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}