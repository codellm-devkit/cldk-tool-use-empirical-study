{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unsubmitted",
    "instance_name": "sphinx-doc__sphinx-10323",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "very hard",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        5
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/sphinx-doc__sphinx__5.0"
      ],
      "phase": "general",
      "step_indices": [
        1,
        6,
        11,
        13,
        15
      ],
      "id": "1:cd"
    },
    {
      "label": "\nfind",
      "args": [
        ".",
        "*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:\nfind"
    },
    {
      "label": "\nls",
      "args": [
        "doc/"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "3:\nls"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/sphinx/directives/code.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/sphinx/directives/code.py",
        "view_range": [
          343,
          355
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/sphinx/directives/code.py",
        "old_str": "    def prepend_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n        prepend = self.options.get('prepend')\n        if prepend:\n            lines.insert(0, prepend + '\\n')\n\n        return lines\n\n    def append_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n        append = self.options.get('append')\n        if append:\n            lines.append(append + '\\n')\n\n        return lines",
        "new_str": "    def prepend_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n        prepend = self.options.get('prepend')\n        if prepend:\n            # Preserve original whitespace and only add newline if not present\n            if not prepend.endswith('\\n'):\n                prepend += '\\n'\n            lines.insert(0, prepend)\n\n        return lines\n\n    def append_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n        append = self.options.get('append')\n        if append:\n            # Preserve original whitespace and only add newline if not present\n            if not append.endswith('\\n'):\n                append += '\\n'\n            lines.append(append)\n\n        return lines",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "\nfind",
      "args": [
        "tests",
        "test_literal*"
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "7:\nfind"
    },
    {
      "label": "\nls",
      "args": [
        "tests/roots/"
      ],
      "phase": "general",
      "step_indices": [
        6
      ],
      "id": "8:\nls"
    },
    {
      "label": "ls",
      "args": [
        "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/"
      ],
      "phase": "general",
      "step_indices": [
        7
      ],
      "id": "9:ls"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/whitespace-test.xml",
        "file_text": "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>com.example</groupId>\n        <artifactId>test-plugin</artifactId>\n        <version>1.0.0</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n"
      },
      "phase": "verification",
      "step_indices": [
        8
      ],
      "id": "10:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/whitespace-test.rst",
        "file_text": "\n\nWhitespace Preservation Test\n===========================\n\nTesting prepend/append whitespace:\n\n.. literalinclude:: whitespace-test.xml\n   :language: xml\n   :prepend:       <plugin>\n   :start-at: <groupId>com.example</groupId>\n   :end-at: </plugin>\n\nExpected Output:\n---------------\n\nThe prepended ``<plugin>`` tag should maintain its indentation to match the included XML.\n\n"
      },
      "phase": "verification",
      "step_indices": [
        9
      ],
      "id": "11:str_replace_editor\ncreate"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/conf.py"
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "\nsphinx-build",
      "args": [
        "tests/roots/test-directive-code/",
        "tests/roots/test-directive-code/_build/html"
      ],
      "phase": "general",
      "step_indices": [
        11,
        13,
        15
      ],
      "id": "13:\nsphinx-build"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/whitespace-test.rst",
        "old_str": "\nWhitespace Preservation Test\n===========================\n\nTesting prepend/append whitespace:\n",
        "new_str": "\nWhitespace Preservation Test\n=============================\n\nTesting prepend/append whitespace:\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/whitespace-test.rst",
        "old_str": "\nExpected Output:\n---------------\n\nThe prepended ``<plugin>`` tag should maintain its indentation to match the included XML.\n",
        "new_str": "\nExpected Output:\n----------------\n\nThe prepended ``<plugin>`` tag should maintain its indentation to match the included XML.\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "cat",
      "args": [
        "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/_build/html/whitespace-test.html",
        "|",
        "grep",
        "literalinclude"
      ],
      "phase": "general",
      "step_indices": [
        16
      ],
      "id": "16:cat"
    },
    {
      "label": "cat",
      "args": [
        "/workspace/sphinx-doc__sphinx__5.0/tests/roots/test-directive-code/_build/html/whitespace-test.html",
        "|",
        "grep",
        "<pre>"
      ],
      "phase": "general",
      "step_indices": [
        17
      ],
      "id": "17:cat"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "1:cd",
      "target": "7:\nfind",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "1:cd",
      "target": "13:\nsphinx-build",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "1:cd",
      "target": "13:\nsphinx-build",
      "key": 1
    },
    {
      "label": "15",
      "type": "exec",
      "source": "1:cd",
      "target": "13:\nsphinx-build",
      "key": 2
    },
    {
      "label": "1",
      "type": "exec",
      "source": "2:\nfind",
      "target": "3:\nls",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:\nls",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 1
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:\nfind",
      "target": "8:\nls",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:\nls",
      "target": "9:ls",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:ls",
      "target": "10:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:str_replace_editor\ncreate",
      "target": "11:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:str_replace_editor\ncreate",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "13:\nsphinx-build",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:\nsphinx-build",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "13:\nsphinx-build",
      "target": "16:cat",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:cat",
      "target": "17:cat",
      "key": 0
    }
  ]
}