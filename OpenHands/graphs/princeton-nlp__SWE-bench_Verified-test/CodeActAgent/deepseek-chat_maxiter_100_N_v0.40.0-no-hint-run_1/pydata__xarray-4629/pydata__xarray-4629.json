{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "pydata__xarray-4629",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/pydata__xarray__0.12"
      ],
      "phase": "general",
      "step_indices": [
        0,
        4
      ],
      "id": "0:cd"
    },
    {
      "label": "python",
      "args": [
        "xarray/tests/test_merge.py"
      ],
      "phase": "verification",
      "step_indices": [
        0,
        4
      ],
      "id": "1:python"
    },
    {
      "label": "find",
      "args": [
        "/workspace/pydata__xarray__0.12",
        "merge.py"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:find"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/merge.py"
      ],
      "phase": "general",
      "step_indices": [
        1,
        12,
        16,
        18
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          490,
          510
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "elif combine_attrs == \"override\":\n        return variable_attrs[0]",
        "new_str": "elif combine_attrs == \"override\":\n        return dict(variable_attrs[0])",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "5:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_merge_attrs.py",
        "file_text": "\nimport xarray as xr\n\n# Original issue reproduction\nxds1 = xr.Dataset(attrs={'a':'b'})\nxds2 = xr.Dataset(attrs={'a':'c'})\nprint(f\"Initial: a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}\")\n\nxds3 = xr.merge([xds1, xds2], combine_attrs='override')\nprint(f\"Merged: a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}, a3: {xds3.attrs['a']}\")\n\nxds3.attrs['a'] = 'd'\nprint(f\"Modified: a1: {xds1.attrs['a']}, a2: {xds2.attrs['a']}, a3: {xds3.attrs['a']}\")\n\n# Verify fix worked\nassert xds1.attrs['a'] == 'b', \"Original dataset attribute was modified!\"\nassert xds3.attrs['a'] == 'd', \"Merged dataset attribute not updated correctly\"\nprint(\"Test passed - attributes are now independent\")\n"
      },
      "phase": "verification",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "cd",
      "args": [
        "/workspace"
      ],
      "phase": "general",
      "step_indices": [
        6,
        28,
        35,
        44,
        57
      ],
      "id": "7:cd"
    },
    {
      "label": "python",
      "args": [
        "test_merge_attrs.py"
      ],
      "phase": "verification",
      "step_indices": [
        6,
        28,
        35,
        44,
        57
      ],
      "id": "8:python"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          800,
          820
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        8,
        10
      ],
      "id": "10:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          650,
          670
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          620,
          650
        ]
      },
      "phase": "localization",
      "step_indices": [
        13
      ],
      "id": "13:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          620,
          700
        ]
      },
      "phase": "localization",
      "step_indices": [
        14
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          700,
          750
        ]
      },
      "phase": "localization",
      "step_indices": [
        15
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          100,
          150
        ]
      },
      "phase": "localization",
      "step_indices": [
        17
      ],
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          520,
          550
        ]
      },
      "phase": "localization",
      "step_indices": [
        19
      ],
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "|",
        "grep",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        20,
        23,
        36,
        37
      ],
      "id": "18:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          870,
          900
        ]
      },
      "phase": "localization",
      "step_indices": [
        21
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          750,
          800
        ]
      },
      "phase": "localization",
      "step_indices": [
        22,
        30
      ],
      "id": "20:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\ndef merge_attrs(variable_attrs, combine_attrs):\n    \"\"\"Combine attributes from different variables according to combine_attrs\"\"\"\n    if not variable_attrs:\n        # no attributes to merge\n        return None\n\n    if combine_attrs == \"drop\":\n        return {}\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0])\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs)\n            except ValueError:\n                raise ValueError(\n                    \"combine_attrs='no_conflicts', but some values are not \"\n                    \"the same. %r != %r\" % (result, attrs)\n        return result\n    elif combine_attrs == \"identical\":\n        result = dict(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            if not dict_equiv(result, attrs):\n                raise ValueError(\n                    \"combine_attrs='identical', but attrs differ. First is %s \"\n                    \", other is %s.\" % (str(result), str(attrs))\n        return result\n    else:\n        raise ValueError(\"Unrecognised value for combine_attrs=%s\" % combine_attrs)\n",
        "new_str": "\ndef merge_attrs(variable_attrs, combine_attrs):\n    \"\"\"Combine attributes from different variables according to combine_attrs\"\"\"\n    if not variable_attrs:\n        # no attributes to merge\n        return None\n\n    if combine_attrs == \"drop\":\n        return {}\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs.copy())\n            except ValueError:\n                raise ValueError(\n                    \"combine_attrs='no_conflicts', but some values are not \"\n                    \"the same. %r != %r\" % (result, attrs))\n        return result\n    elif combine_attrs == \"identical\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            if not dict_equiv(result, attrs):\n                raise ValueError(\n                    \"combine_attrs='identical', but attrs differ. First is %s \"\n                    \", other is %s.\" % (str(result), str(attrs))\n        return result\n    else:\n        raise ValueError(\"Unrecognised value for combine_attrs=%s\" % combine_attrs)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        24
      ],
      "id": "21:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n    elif combine_attrs == \"override\":\n        return variable_attrs[0]\n",
        "new_str": "\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        25
      ],
      "id": "22:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          500,
          510
        ]
      },
      "phase": "localization",
      "step_indices": [
        26
      ],
      "id": "23:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0])\n",
        "new_str": "\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        27
      ],
      "id": "24:str_replace_editor\nstr_replace"
    },
    {
      "label": "grep",
      "args": [
        "Dataset(",
        "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "|",
        "grep",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        29
      ],
      "id": "25:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          495,
          515
        ]
      },
      "phase": "localization",
      "step_indices": [
        31,
        42
      ],
      "id": "26:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs)\n\n",
        "new_str": "\n\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs.copy())\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        32
      ],
      "id": "27:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          505,
          515
        ]
      },
      "phase": "localization",
      "step_indices": [
        33
      ],
      "id": "28:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs)\n",
        "new_str": "\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs.copy())\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        34
      ],
      "id": "29:str_replace_editor\nstr_replace"
    },
    {
      "label": "find",
      "args": [
        "/workspace/pydata__xarray__0.12",
        "dataset.py"
      ],
      "phase": "general",
      "step_indices": [
        38
      ],
      "id": "30:find"
    },
    {
      "label": "head",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "|",
        "grep",
        "__init__"
      ],
      "phase": "general",
      "step_indices": [
        38
      ],
      "id": "31:head"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n\ndef merge_attrs(variable_attrs, combine_attrs):\n    \"\"\"Combine attributes from different variables according to combine_attrs\"\"\"\n    if not variable_attrs:\n        # no attributes to merge\n        return None\n\n    if combine_attrs == \"drop\":\n        return {}\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n    elif combine_attrs == \"no_conflicts\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, attrs.copy())\n            except ValueError:\n                raise MergeError(\n                    \"combine_attrs='no_conflicts', but some values are not \"\n                    \"the same. Merging %s with %s\" % (str(result), str(attrs))\n        return result\n    elif combine_attrs == \"identical\":\n        result = dict(variable_attrs[0].copy())\n        for attrs in variable_attrs[1:]:\n            if not dict_equiv(result, attrs):\n                raise ValueError(\n                    \"combine_attrs='identical', but attrs differ. First is %s \"\n                    \", other is %s.\" % (str(result), str(attrs))\n        return result\n    else:\n        raise ValueError(\"Unrecognised value for combine_attrs=%s\" % combine_attrs)\n\n",
        "new_str": "\n\ndef merge_attrs(variable_attrs, combine_attrs):\n    \"\"\"Combine attributes from different variables according to combine_attrs\"\"\"\n    from copy import deepcopy\n    \n    if not variable_attrs:\n        # no attributes to merge\n        return None\n\n    if combine_attrs == \"drop\":\n        return {}\n    elif combine_attrs == \"override\":\n        return deepcopy(variable_attrs[0])\n    elif combine_attrs == \"no_conflicts\":\n        result = deepcopy(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            try:\n                result = compat_dict_union(result, deepcopy(attrs))\n            except ValueError:\n                raise MergeError(\n                    \"combine_attrs='no_conflicts', but some values are not \"\n                    \"the same. Merging %s with %s\" % (str(result), str(attrs))\n        return result\n    elif combine_attrs == \"identical\":\n        result = deepcopy(variable_attrs[0])\n        for attrs in variable_attrs[1:]:\n            if not dict_equiv(result, attrs):\n                raise ValueError(\n                    \"combine_attrs='identical', but attrs differ. First is %s \"\n                    \", other is %s.\" % (str(result), str(attrs))\n        return result\n    else:\n        raise ValueError(\"Unrecognised value for combine_attrs=%s\" % combine_attrs)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        39
      ],
      "id": "32:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "view_range": [
          500,
          504
        ]
      },
      "phase": "localization",
      "step_indices": [
        40
      ],
      "id": "33:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n\n",
        "new_str": "\n\n    elif combine_attrs == \"override\":\n        from copy import deepcopy\n        return deepcopy(variable_attrs[0])\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        41
      ],
      "id": "34:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/merge.py",
        "old_str": "\n    elif combine_attrs == \"override\":\n        return dict(variable_attrs[0].copy())\n",
        "new_str": "\n    elif combine_attrs == \"override\":\n        from copy import deepcopy\n        return deepcopy(variable_attrs[0])\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        43
      ],
      "id": "35:str_replace_editor\nstr_replace"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/dataset.py"
      ],
      "phase": "general",
      "step_indices": [
        45,
        51
      ],
      "id": "36:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "view_range": [
          600,
          620
        ]
      },
      "phase": "localization",
      "step_indices": [
        46
      ],
      "id": "37:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "view_range": [
          620,
          640
        ]
      },
      "phase": "localization",
      "step_indices": [
        47
      ],
      "id": "38:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "old_str": "\n\n        self._attrs = dict(attrs) if attrs is not None else None\n\n",
        "new_str": "\n\n        from copy import deepcopy\n        self._attrs = deepcopy(attrs) if attrs is not None else None\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        48,
        50,
        54
      ],
      "id": "39:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "view_range": [
          630,
          636
        ]
      },
      "phase": "localization",
      "step_indices": [
        49
      ],
      "id": "40:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "old_str": "\n\n634:        self._attrs = dict(attrs) if attrs is not None else None\n\n",
        "new_str": "\n\n634:        from copy import deepcopy\n634:        self._attrs = deepcopy(attrs) if attrs is not None else None\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        52
      ],
      "id": "41:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/dataset.py",
        "view_range": [
          633,
          635
        ]
      },
      "phase": "localization",
      "step_indices": [
        53,
        56
      ],
      "id": "42:str_replace_editor\nview"
    },
    {
      "label": "sed",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/dataset.py"
      ],
      "phase": "general",
      "step_indices": [
        55
      ],
      "id": "43:sed"
    },
    {
      "label": "\nsed",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/dataset.py"
      ],
      "phase": "general",
      "step_indices": [
        55
      ],
      "id": "44:\nsed"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/pydata__xarray__0.12/xarray/core/variable.py"
      ],
      "phase": "general",
      "step_indices": [
        58,
        62,
        65
      ],
      "id": "45:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/variable.py",
        "view_range": [
          305,
          315
        ]
      },
      "phase": "localization",
      "step_indices": [
        59
      ],
      "id": "46:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/variable.py",
        "view_range": [
          330,
          340
        ]
      },
      "phase": "localization",
      "step_indices": [
        60
      ],
      "id": "47:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/variable.py",
        "view_range": [
          400,
          410
        ]
      },
      "phase": "localization",
      "step_indices": [
        61
      ],
      "id": "48:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/variable.py",
        "view_range": [
          855,
          865
        ]
      },
      "phase": "localization",
      "step_indices": [
        63
      ],
      "id": "49:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pydata__xarray__0.12/xarray/core/variable.py",
        "old_str": "\n\n\n    @attrs.setter\n    def attrs(self, value: Mapping[Hashable, Any]) -> None:\n        self._attrs = dict(value)\n\n\n",
        "new_str": "\n\n\n    @attrs.setter\n    def attrs(self, value: Mapping[Hashable, Any]) -> None:\n        from copy import deepcopy\n        self._attrs = deepcopy(value) if value is not None else None\n\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        64
      ],
      "id": "50:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:python",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "0:cd",
      "target": "1:python",
      "key": 1
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:python",
      "target": "2:find",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:python",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "2:find",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "3:grep",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "3:grep",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "3:grep",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "4:str_replace_editor\nview",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:str_replace_editor\nstr_replace",
      "target": "0:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 1
    },
    {
      "label": "35",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 2
    },
    {
      "label": "44",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 3
    },
    {
      "label": "57",
      "type": "exec",
      "source": "7:cd",
      "target": "8:python",
      "key": 4
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:python",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "8:python",
      "target": "25:grep",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "8:python",
      "target": "18:grep",
      "key": 0
    },
    {
      "label": "45",
      "type": "exec",
      "source": "8:python",
      "target": "36:grep",
      "key": 0
    },
    {
      "label": "58",
      "type": "exec",
      "source": "8:python",
      "target": "45:grep",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:grep",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:grep",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "10:grep",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:str_replace_editor\nview",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "14:str_replace_editor\nview",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "14:str_replace_editor\nview",
      "target": "13:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "18:grep",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "18:grep",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "18:grep",
      "target": "21:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "18:grep",
      "target": "18:grep",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "18:grep",
      "target": "30:find",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "20:str_replace_editor\nview",
      "target": "18:grep",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "20:str_replace_editor\nview",
      "target": "26:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "21:str_replace_editor\nstr_replace",
      "target": "22:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "22:str_replace_editor\nstr_replace",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "23:str_replace_editor\nview",
      "target": "24:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "23:str_replace_editor\nview",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "24:str_replace_editor\nstr_replace",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "25:grep",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "26:str_replace_editor\nview",
      "target": "27:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "43",
      "type": "exec",
      "source": "26:str_replace_editor\nview",
      "target": "35:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "26:str_replace_editor\nview",
      "target": "23:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "26:str_replace_editor\nview",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "26:str_replace_editor\nview",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "27:str_replace_editor\nstr_replace",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "28:str_replace_editor\nview",
      "target": "29:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "29:str_replace_editor\nstr_replace",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "30:find",
      "target": "31:head",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "31:head",
      "target": "32:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "32:str_replace_editor\nstr_replace",
      "target": "33:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "33:str_replace_editor\nview",
      "target": "34:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "42",
      "type": "exec",
      "source": "34:str_replace_editor\nstr_replace",
      "target": "26:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "44",
      "type": "exec",
      "source": "35:str_replace_editor\nstr_replace",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "46",
      "type": "exec",
      "source": "36:grep",
      "target": "37:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "52",
      "type": "exec",
      "source": "36:grep",
      "target": "41:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "47",
      "type": "exec",
      "source": "37:str_replace_editor\nview",
      "target": "38:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "48",
      "type": "exec",
      "source": "38:str_replace_editor\nview",
      "target": "39:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "38:str_replace_editor\nview",
      "target": "40:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "38:str_replace_editor\nview",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "49",
      "type": "exec",
      "source": "39:str_replace_editor\nstr_replace",
      "target": "40:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "51",
      "type": "exec",
      "source": "39:str_replace_editor\nstr_replace",
      "target": "36:grep",
      "key": 0
    },
    {
      "label": "55",
      "type": "exec",
      "source": "39:str_replace_editor\nstr_replace",
      "target": "43:sed",
      "key": 0
    },
    {
      "label": "50",
      "type": "exec",
      "source": "40:str_replace_editor\nview",
      "target": "39:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "40:str_replace_editor\nview",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "53",
      "type": "exec",
      "source": "41:str_replace_editor\nstr_replace",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "54",
      "type": "exec",
      "source": "42:str_replace_editor\nview",
      "target": "39:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "57",
      "type": "exec",
      "source": "42:str_replace_editor\nview",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "55",
      "type": "exec",
      "source": "43:sed",
      "target": "44:\nsed",
      "key": 0
    },
    {
      "label": "56",
      "type": "exec",
      "source": "44:\nsed",
      "target": "42:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "59",
      "type": "exec",
      "source": "45:grep",
      "target": "46:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "63",
      "type": "exec",
      "source": "45:grep",
      "target": "49:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "60",
      "type": "exec",
      "source": "46:str_replace_editor\nview",
      "target": "47:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "61",
      "type": "exec",
      "source": "47:str_replace_editor\nview",
      "target": "48:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "62",
      "type": "exec",
      "source": "48:str_replace_editor\nview",
      "target": "45:grep",
      "key": 0
    },
    {
      "label": "64",
      "type": "exec",
      "source": "49:str_replace_editor\nview",
      "target": "50:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "65",
      "type": "exec",
      "source": "50:str_replace_editor\nstr_replace",
      "target": "45:grep",
      "key": 0
    }
  ]
}