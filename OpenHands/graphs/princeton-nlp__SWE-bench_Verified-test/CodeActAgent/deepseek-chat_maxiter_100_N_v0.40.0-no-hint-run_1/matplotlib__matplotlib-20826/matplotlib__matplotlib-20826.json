{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "matplotlib__matplotlib-20826",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/matplotlib__matplotlib__3.4"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        3,
        6,
        8
      ],
      "id": "1:cd"
    },
    {
      "label": "ls",
      "args": [],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:ls"
    },
    {
      "label": "grep",
      "args": [
        "lib/",
        "src/",
        "tests.py"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "3:grep"
    },
    {
      "label": "grep",
      "args": [
        "lib/",
        "src/"
      ],
      "phase": "general",
      "step_indices": [
        3
      ],
      "id": "4:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "view_range": [
          1000,
          1100
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "view_range": [
          1500,
          1600
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "lib/matplotlib/axes/_base.py"
      ],
      "phase": "general",
      "step_indices": [
        6,
        8
      ],
      "id": "7:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "view_range": [
          1470,
          1500
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "view_range": [
          1180,
          1250
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "view_range": [
          1150,
          1185
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "old_str": "\n    def cla(self):\n        \"\"\"Clear the axes.\"\"\"\n        # Note: this is called by Axes.__init__()\n\n        # stash the current visibility state\n        if hasattr(self, 'patch'):\n            patch_visible = self.patch.get_visible()\n        else:\n            patch_visible = True\n\n        xaxis_visible = self.xaxis.get_visible()\n        yaxis_visible = self.yaxis.get_visible()\n\n        self.xaxis.clear()\n        self.yaxis.clear()\n",
        "new_str": "\n    def cla(self):\n        \"\"\"Clear the axes.\"\"\"\n        # Note: this is called by Axes.__init__()\n\n        # stash the current visibility state\n        if hasattr(self, 'patch'):\n            patch_visible = self.patch.get_visible()\n        else:\n            patch_visible = True\n\n        xaxis_visible = self.xaxis.get_visible()\n        yaxis_visible = self.yaxis.get_visible()\n        \n        # Store shared axis tick visibility before clearing\n        if self._sharex:\n            sharex_tick_params = {k: v for k, v in self._sharex.xaxis._major_tick_kw.items() \n                                 if k in ['labelbottom', 'labeltop']}\n        if self._sharey:\n            sharey_tick_params = {k: v for k, v in self._sharey.yaxis._major_tick_kw.items()\n                                 if k in ['labelleft', 'labelright']}\n\n        self.xaxis.clear()\n        self.yaxis.clear()\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "old_str": "\n\n        if self._sharex is not None:\n            self.sharex(self._sharex)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n        else:\n            self.yaxis._set_scale('linear')\n            try:\n                self.set_ylim(0, 1)\n            except TypeError:\n                pass\n\n",
        "new_str": "\n\n        if self._sharex is not None:\n            self.sharex(self._sharex)\n            # Restore shared x-axis tick visibility\n            if hasattr(self, 'sharex_tick_params'):\n                self.tick_params(axis='x', **sharex_tick_params)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n            # Restore shared y-axis tick visibility\n            if hasattr(self, 'sharey_tick_params'):\n                self.tick_params(axis='y', **sharey_tick_params)\n        else:\n            self.yaxis._set_scale('linear')\n            try:\n                self.set_ylim(0, 1)\n            except TypeError:\n                pass\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "old_str": "\n        # Store shared axis tick visibility before clearing\n        if self._sharex:\n            sharex_tick_params = {k: v for k, v in self._sharex.xaxis._major_tick_kw.items() \n                                 if k in ['labelbottom', 'labeltop']}\n        if self._sharey:\n            sharey_tick_params = {k: v for k, v in self._sharey.yaxis._major_tick_kw.items()\n                                 if k in ['labelleft', 'labelright']}\n",
        "new_str": "\n        # Store shared axis tick visibility before clearing\n        if self._sharex:\n            self._sharex_tick_params = {k: v for k, v in self._sharex.xaxis._major_tick_kw.items() \n                                      if k in ['labelbottom', 'labeltop']}\n        if self._sharey:\n            self._sharey_tick_params = {k: v for k, v in self._sharey.yaxis._major_tick_kw.items()\n                                      if k in ['labelleft', 'labelright']}\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        13
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "old_str": "\n\n            # Restore shared x-axis tick visibility\n            if hasattr(self, 'sharex_tick_params'):\n                self.tick_params(axis='x', **sharex_tick_params)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n            # Restore shared y-axis tick visibility\n            if hasattr(self, 'sharey_tick_params'):\n                self.tick_params(axis='y', **sharey_tick_params)\n\n",
        "new_str": "\n\n            # Restore shared x-axis tick visibility\n            if hasattr(self, '_sharex_tick_params'):\n                self.tick_params(axis='x', **self._sharex_tick_params)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n            # Restore shared y-axis tick visibility\n            if hasattr(self, '_sharey_tick_params'):\n                self.tick_params(axis='y', **self._sharey_tick_params)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "14:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/matplotlib__matplotlib__3.4/lib/matplotlib/axes/_base.py",
        "old_str": "\n            # Restore shared x-axis tick visibility\n            if hasattr(self, 'sharex_tick_params'):\n                self.tick_params(axis='x', **sharex_tick_params)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n            # Restore shared y-axis tick visibility\n            if hasattr(self, 'sharey_tick_params'):\n                self.tick_params(axis='y', **sharey_tick_params)\n",
        "new_str": "\n            # Restore shared x-axis tick visibility\n            if hasattr(self, '_sharex_tick_params'):\n                self.tick_params(axis='x', **self._sharex_tick_params)\n        else:\n            self.xaxis._set_scale('linear')\n            try:\n                self.set_xlim(0, 1)\n            except TypeError:\n                pass\n        if self._sharey is not None:\n            self.sharey(self._sharey)\n            # Restore shared y-axis tick visibility\n            if hasattr(self, '_sharey_tick_params'):\n                self.tick_params(axis='y', **self._sharey_tick_params)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        15
      ],
      "id": "15:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:ls",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "1:cd",
      "target": "4:grep",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "1:cd",
      "target": "7:grep",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "7:grep",
      "key": 1
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:ls",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:grep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:grep",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:grep",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nview",
      "target": "11:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\nstr_replace",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "14:str_replace_editor\nstr_replace",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}