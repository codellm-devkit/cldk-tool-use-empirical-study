{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unsubmitted",
    "instance_name": "sympy__sympy-19637",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "find",
      "args": [
        "/workspace/sympy__sympy__1.7",
        "test_sympify.py"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:find"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/sympy__sympy__1.7"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.7/sympy/core/sympify.py"
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/sympy__sympy__1.7/sympy/core/sympify.py"
      ],
      "phase": "general",
      "step_indices": [
        3,
        5
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.7/sympy/core/sympify.py",
        "view_range": [
          440,
          470
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.7/sympy/core/sympify.py",
        "view_range": [
          500,
          520
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.7/sympy/core/sympify.py",
        "old_str": "def kernS(s):\n    \"\"\"Use a hack to try keep autosimplification from distributing a\n    a number into an Add; this modification doesn't\n    prevent the 2-arg Mul from becoming an Add, however.\n\n    Examples\n    ========\n\n    >>> from sympy.core.sympify import kernS\n    >>> from sympy.abc import x, y\n\n    The 2-arg Mul distributes a number (or minus sign) across the terms\n    of an expression, but kernS will prevent that:\n\n    >>> 2*(x + y), -(x + 1)\n    (2*x + 2*y, -x - 1)\n    >>> kernS('2*(x + y)')\n    2*(x + y)\n    >>> kernS('-(x + 1)')\n    -(x + 1)\n\n    If use of the hack fails, the un-hacked string will be passed to sympify...\n    and you get what you get.\n\n    XXX This hack should not be necessary once issue 4596 has been resolved.\n    \"\"\"\n    import string\n    from random import choice\n    from sympy.core.symbol import Symbol",
        "new_str": "def kernS(s):\n    \"\"\"Use a hack to try keep autosimplification from distributing a\n    a number into an Add; this modification doesn't\n    prevent the 2-arg Mul from becoming an Add, however.\n\n    Examples\n    ========\n\n    >>> from sympy.core.sympify import kernS\n    >>> from sympy.abc import x, y\n\n    The 2-arg Mul distributes a number (or minus sign) across the terms\n    of an expression, but kernS will prevent that:\n\n    >>> 2*(x + y), -(x + 1)\n    (2*x + 2*y, -x - 1)\n    >>> kernS('2*(x + y)')\n    2*(x + y)\n    >>> kernS('-(x + 1)')\n    -(x + 1)\n\n    If use of the hack fails, the un-hacked string will be passed to sympify...\n    and you get what you get.\n\n    XXX This hack should not be necessary once issue 4596 has been resolved.\n    \"\"\"\n    import string\n    from random import choice\n    from sympy.core.symbol import Symbol\n    kern = '_'  # Initialize kern variable at function start",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "6:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/sympy__sympy__1.7"
      ],
      "phase": "general",
      "step_indices": [
        8,
        9
      ],
      "id": "7:cd"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:find",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "type": "hier",
      "source": "2:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "3:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:str_replace_editor\nstr_replace",
      "target": "7:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:cd",
      "target": "7:cd",
      "key": 0
    }
  ]
}