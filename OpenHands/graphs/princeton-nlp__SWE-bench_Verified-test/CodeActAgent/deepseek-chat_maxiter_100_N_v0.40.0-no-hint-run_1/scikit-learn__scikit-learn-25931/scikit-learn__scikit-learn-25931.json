{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "scikit-learn__scikit-learn-25931",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 2
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/scikit-learn__scikit-learn__1.3"
      ],
      "phase": "general",
      "step_indices": [
        1,
        5,
        8,
        13,
        17,
        19
      ],
      "id": "1:cd"
    },
    {
      "label": "\nfind",
      "args": [
        ".",
        "*.py",
        "|",
        "grep",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "2:\nfind"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/tests/test_iforest.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "view_range": [
          330,
          340
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "view_range": [
          300,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "sklearn/ensemble/tests/"
      ],
      "phase": "general",
      "step_indices": [
        5
      ],
      "id": "6:\ngrep"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/tests/test_iforest.py",
        "old_str": "def test_iforest(global_random_seed):\n    \"\"\"Check Isolation Forest for various parameter settings.\"\"\"\n    X_train = np.array([[0, 1], [1, 2]])\n    X_test = np.array([[2, 1], [1, 1]])\n\n    grid = ParameterGrid(\n        {\"n_estimators\": [3], \"max_samples\": [0.5, 1.0, 3], \"bootstrap\": [True, False]}\n    )\n\n    with ignore_warnings():\n        for params in grid:\n            IsolationForest(random_state=global_random_seed, **params).fit(\n                X_train\n            ).predict(X_test)",
        "new_str": "def test_iforest(global_random_seed):\n    \"\"\"Check Isolation Forest for various parameter settings.\"\"\"\n    X_train = np.array([[0, 1], [1, 2]])\n    X_test = np.array([[2, 1], [1, 1]])\n\n    grid = ParameterGrid(\n        {\"n_estimators\": [3], \"max_samples\": [0.5, 1.0, 3], \"bootstrap\": [True, False]}\n    )\n\n    with ignore_warnings():\n        for params in grid:\n            IsolationForest(random_state=global_random_seed, **params).fit(\n                X_train\n            ).predict(X_test)\n\n\ndef test_iforest_feature_names_warning():\n    \"\"\"Check that IsolationForest doesn't warn about feature names with DataFrames.\"\"\"\n    pd = pytest.importorskip(\"pandas\")\n    X = pd.DataFrame({\"a\": [-1.1, 0.3, 0.5, 100]})\n    \n    # Should not raise warning about feature names\n    with warnings.catch_warnings():\n        warnings.simplefilter(\"error\")\n        IsolationForest(random_state=0, contamination=0.05).fit(X)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        6
      ],
      "id": "7:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "old_str": "\n        # else, define offset_ wrt contamination parameter\n        self.offset_ = np.percentile(self.score_samples(X), 100.0 * self.contamination)\n\n        return self\n",
        "new_str": "\n        # else, define offset_ wrt contamination parameter\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\", UserWarning)  # Skip feature name check for training data\n            self.offset_ = np.percentile(self.score_samples(X), 100.0 * self.contamination)\n\n        return self\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        7
      ],
      "id": "8:str_replace_editor\nstr_replace"
    },
    {
      "label": "\npython",
      "args": [
        "sklearn/ensemble/tests/test_iforest.py::test_iforest_feature_names_warning"
      ],
      "phase": "general",
      "step_indices": [
        8,
        13,
        17,
        19
      ],
      "id": "9:\npython"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "old_str": "\n    def fit(self, X, y=None, sample_weight=None):\n        \"\"\"\n        Fit estimator.\n        \"\"\"\n        X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n",
        "new_str": "\n    def fit(self, X, y=None, sample_weight=None):\n        \"\"\"\n        Fit estimator.\n        \"\"\"\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\", UserWarning)  # Skip feature name check\n            X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        9,
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "view_range": [
          280,
          300
        ]
      },
      "phase": "localization",
      "step_indices": [
        11
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "old_str": "        self._validate_params()\n        X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n        if issparse(X):\n            # Pre-sort indices to avoid that each individual tree of the\n            # ensemble sorts the indices.\n            X.sort_indices()",
        "new_str": "        self._validate_params()\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\", UserWarning)  # Skip feature name check\n            X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n        if issparse(X):\n            # Pre-sort indices to avoid that each individual tree of the\n            # ensemble sorts the indices.\n            X.sort_indices()",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        12
      ],
      "id": "12:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "old_str": "\n\"\"\"\nTesting for Isolation Forest algorithm (sklearn.ensemble.iforest).\n\"\"\"\n\n# Authors: Nicolas Goix <nicolas.goix@telecom-paristech.fr>\n#          Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>\n# License: BSD 3 clause\n\nimport numbers\nfrom warnings import warn\n",
        "new_str": "\n\"\"\"\nTesting for Isolation Forest algorithm (sklearn.ensemble.iforest).\n\"\"\"\n\n# Authors: Nicolas Goix <nicolas.goix@telecom-paristech.fr>\n#          Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>\n# License: BSD 3 clause\n\nimport numbers\nimport warnings\nfrom warnings import warn\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        14
      ],
      "id": "13:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "view_range": [
          1,
          20
        ]
      },
      "phase": "localization",
      "step_indices": [
        15
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/_iforest.py",
        "old_str": "\nimport numbers\nimport numpy as np\nfrom scipy.sparse import issparse\nfrom warnings import warn\nfrom numbers import Integral, Real\n",
        "new_str": "\nimport numbers\nimport numpy as np\nfrom scipy.sparse import issparse\nimport warnings\nfrom warnings import warn\nfrom numbers import Integral, Real\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        16
      ],
      "id": "15:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__1.3/sklearn/ensemble/tests/test_iforest.py",
        "old_str": "\ndef test_iforest_feature_names_warning():\n    \"\"\"Check that IsolationForest doesn't warn about feature names with DataFrames.\"\"\"\n    pd = pytest.importorskip(\"pandas\")\n    X = pd.DataFrame({\"a\": [-1.1, 0.3, 0.5, 100]})\n    \n    # Should not raise warning about feature names\n    with warnings.catch_warnings():\n        warnings.simplefilter(\"error\")\n        IsolationForest(random_state=0, contamination=0.05).fit(X)\n",
        "new_str": "\ndef test_iforest_feature_names_warning():\n    \"\"\"Check that IsolationForest doesn't warn about feature names with DataFrames.\"\"\"\n    pd = pytest.importorskip(\"pandas\")\n    X = pd.DataFrame({\"a\": [-1.1, 0.3, 0.5, 100]})\n    \n    # Should not raise warning about feature names\n    with warnings.catch_warnings():\n        warnings.simplefilter(\"error\", category=UserWarning)  # Only error on UserWarnings\n        warnings.filterwarnings(\"ignore\", category=DeprecationWarning)  # Ignore pandas deprecation\n        IsolationForest(random_state=0, contamination=0.05).fit(X)\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        18
      ],
      "id": "16:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "1:cd",
      "target": "6:\ngrep",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "9:\npython",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "1:cd",
      "target": "9:\npython",
      "key": 1
    },
    {
      "label": "17",
      "type": "exec",
      "source": "1:cd",
      "target": "9:\npython",
      "key": 2
    },
    {
      "label": "19",
      "type": "exec",
      "source": "1:cd",
      "target": "9:\npython",
      "key": 3
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:\nfind",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "type": "hier",
      "source": "5:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "6:\ngrep",
      "target": "7:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "7:str_replace_editor\nstr_replace",
      "target": "8:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "8:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "9:\npython",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "9:\npython",
      "target": "13:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "9:\npython",
      "target": "16:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "12:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:str_replace_editor\nstr_replace",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "15:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "15:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "16:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    }
  ]
}