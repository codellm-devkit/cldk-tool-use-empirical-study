{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "sympy__sympy-13615",
    "difficulty": "15 min - 1 hour",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "find",
      "args": [
        "/workspace/sympy__sympy__1.1",
        "test_*.py",
        "|",
        "grep"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:find"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/tests/test_sets.py"
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "1:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/sympy__sympy__1.1/sympy"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "2:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          1,
          200
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          200,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          400,
          600
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          600,
          800
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          800,
          1000
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/sympy__sympy__1.1/sympy/sets/sets.py"
      ],
      "phase": "general",
      "step_indices": [
        8
      ],
      "id": "8:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "view_range": [
          1680,
          1780
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/sympy__sympy__1.1/sympy/sets/sets.py",
        "old_str": "    @staticmethod\n    def reduce(A, B):\n        \"\"\"\n        Simplify a :class:`Complement`.\n\n        \"\"\"\n        if B == S.UniversalSet or A.is_subset(B):\n            return EmptySet()\n\n        if isinstance(B, Union):\n            return Intersection(s.complement(A) for s in B.args)\n\n        result = B._complement(A)\n        if result != None:\n            return result\n        else:\n            return Complement(A, B, evaluate=False)",
        "new_str": "    @staticmethod\n    def reduce(A, B):\n        \"\"\"\n        Simplify a :class:`Complement`.\n        \"\"\"\n        if B == S.UniversalSet or A.is_subset(B):\n            return EmptySet()\n\n        if isinstance(B, Union):\n            return Intersection(s.complement(A) for s in B.args)\n\n        # Handle FiniteSet with Interval complement\n        if isinstance(A, FiniteSet) and isinstance(B, Interval):\n            kept = []\n            for el in A:\n                if el.is_Symbol:\n                    kept.append(el)\n                elif el.is_number:\n                    if not B.contains(el):\n                        kept.append(el)\n            return FiniteSet(*kept)\n\n        result = B._complement(A)\n        if result != None:\n            return result\n        else:\n            return Complement(A, B, evaluate=False)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        10
      ],
      "id": "10:str_replace_editor\nstr_replace"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/sympy__sympy__1.1"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "11:cd"
    },
    {
      "label": "x",
      "args": [
        "=",
        "Symbol(x)"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "12:x"
    },
    {
      "label": "y",
      "args": [
        "=",
        "Symbol(y)"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "13:y"
    },
    {
      "label": "a",
      "args": [
        "=",
        "FiniteSet(x,",
        "y,",
        "2)"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "14:a"
    },
    {
      "label": "b",
      "args": [
        "=",
        "Interval(-10,10)"
      ],
      "phase": "general",
      "step_indices": [
        11
      ],
      "id": "15:b"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:find",
      "target": "1:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:str_replace_editor\nview",
      "target": "2:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "2:grep",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:grep",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "8:grep",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "10:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "10:str_replace_editor\nstr_replace",
      "target": "11:cd",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "11:cd",
      "target": "12:x",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:x",
      "target": "13:y",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "13:y",
      "target": "14:a",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "14:a",
      "target": "15:b",
      "key": 0
    }
  ]
}