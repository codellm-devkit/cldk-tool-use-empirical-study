{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "unresolved",
    "instance_name": "django__django-15957",
    "difficulty": "1-4 hours",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 4
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        13
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/django__django__4.2"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2,
        8,
        11,
        14,
        18,
        19,
        23,
        25,
        28,
        35,
        36,
        38,
        39,
        40,
        41,
        42,
        43
      ],
      "id": "1:cd"
    },
    {
      "label": "\nfind",
      "args": [
        ".",
        "*.py",
        "grep",
        "{}",
        "+"
      ],
      "phase": "general",
      "step_indices": [
        1,
        2
      ],
      "id": "2:\nfind"
    },
    {
      "label": "echo",
      "args": [
        "No files found containing prefetch and slice"
      ],
      "phase": "general",
      "step_indices": [
        1
      ],
      "id": "3:echo"
    },
    {
      "label": "echo",
      "args": [
        "Prefetch class not found"
      ],
      "phase": "general",
      "step_indices": [
        2
      ],
      "id": "4:echo"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          1000,
          1100
        ]
      },
      "phase": "localization",
      "step_indices": [
        4
      ],
      "id": "6:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2000,
          2100
        ]
      },
      "phase": "localization",
      "step_indices": [
        5
      ],
      "id": "7:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          3000,
          3100
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2500,
          2626
        ]
      },
      "phase": "localization",
      "step_indices": [
        7
      ],
      "id": "9:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "."
      ],
      "phase": "general",
      "step_indices": [
        8,
        19
      ],
      "id": "10:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          1500,
          1600
        ]
      },
      "phase": "localization",
      "step_indices": [
        9
      ],
      "id": "11:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          1600,
          1700
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "12:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "django/db/models/query.py"
      ],
      "phase": "general",
      "step_indices": [
        11,
        14
      ],
      "id": "13:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2140,
          2200
        ]
      },
      "phase": "localization",
      "step_indices": [
        12
      ],
      "id": "14:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2215,
          2300
        ]
      },
      "phase": "localization",
      "step_indices": [
        15
      ],
      "id": "15:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2300,
          2400
        ]
      },
      "phase": "localization",
      "step_indices": [
        16
      ],
      "id": "16:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "view_range": [
          2400,
          2500
        ]
      },
      "phase": "localization",
      "step_indices": [
        17
      ],
      "id": "17:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "django/db/models/fields/related.py"
      ],
      "phase": "general",
      "step_indices": [
        18
      ],
      "id": "18:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/fields/related_descriptors.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        20
      ],
      "id": "19:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/fields/related_descriptors.py",
        "view_range": [
          300,
          400
        ]
      },
      "phase": "localization",
      "step_indices": [
        21
      ],
      "id": "20:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/fields/related_descriptors.py",
        "view_range": [
          398,
          500
        ]
      },
      "phase": "localization",
      "step_indices": [
        22
      ],
      "id": "21:str_replace_editor\nview"
    },
    {
      "label": "\ngrep",
      "args": [
        "def get_prefetch_queryset",
        "django/db/models/fields/related_descriptors.py",
        "|",
        "grep",
        "def "
      ],
      "phase": "general",
      "step_indices": [
        23
      ],
      "id": "22:\ngrep"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/query.py",
        "old_str": "\n    def __init__(self, lookup, queryset=None, to_attr=None):\n        # `prefetch_through` is the path we traverse to perform the prefetch.\n        self.prefetch_through = lookup\n        # `prefetch_to` is the path to the attribute that stores the result.\n        self.prefetch_to = lookup\n        if queryset is not None and (\n            isinstance(queryset, RawQuerySet)\n            or (\n                hasattr(queryset, \"_iterable_class\")\n                and not issubclass(queryset._iterable_class, ModelIterable)\n            )\n        ):\n            raise ValueError(\n                \"Prefetch querysets cannot use raw(), values(), and values_list().\"\n            )\n        if to_attr:\n            self.prefetch_to = LOOKUP_SEP.join(\n                lookup.split(LOOKUP_SEP)[:-1] + [to_attr]\n            )\n\n        self.queryset = queryset\n        self.to_attr = to_attr\n",
        "new_str": "\n    def __init__(self, lookup, queryset=None, to_attr=None):\n        # `prefetch_through` is the path we traverse to perform the prefetch.\n        self.prefetch_through = lookup\n        # `prefetch_to` is the path to the attribute that stores the result.\n        self.prefetch_to = lookup\n        if queryset is not None and (\n            isinstance(queryset, RawQuerySet)\n            or (\n                hasattr(queryset, \"_iterable_class\")\n                and not issubclass(queryset._iterable_class, ModelIterable)\n            )\n        ):\n            raise ValueError(\n                \"Prefetch querysets cannot use raw(), values(), and values_list().\"\n            )\n        if to_attr:\n            self.prefetch_to = LOOKUP_SEP.join(\n                lookup.split(LOOKUP_SEP)[:-1] + [to_attr]\n            )\n\n        self.queryset = queryset\n        self.to_attr = to_attr\n        self._is_sliced = queryset is not None and queryset.query.is_sliced\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        24
      ],
      "id": "23:str_replace_editor\nstr_replace"
    },
    {
      "label": "\ngrep",
      "args": [
        "django/db/models/fields/related_descriptors.py",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        25
      ],
      "id": "24:\ngrep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/fields/related_descriptors.py",
        "view_range": [
          124,
          200
        ]
      },
      "phase": "localization",
      "step_indices": [
        26
      ],
      "id": "25:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.2/django/db/models/fields/related_descriptors.py",
        "old_str": "\n\n    def get_prefetch_queryset(self, instances, queryset=None):\n        if queryset is None:\n            queryset = self.get_queryset()\n        queryset._add_hints(instance=instances[0])\n\n        rel_obj_attr = self.field.get_foreign_related_value\n        instance_attr = self.field.get_local_related_value\n        instances_dict = {instance_attr(inst): inst for inst in instances}\n        related_field = self.field.foreign_related_fields[0]\n        remote_field = self.field.remote_field\n\n        # FIXME: This will need to be revisited when we introduce support for\n        # composite fields. In the meantime we take this practical approach to\n        # solve a regression on 1.6 when the reverse manager in hidden\n        # (related_name ends with a '+'). Refs #21410.\n        # The check for len(...) == 1 is a special case that allows the query\n        # to be join-less and smaller. Refs #21760.\n        if remote_field.is_hidden() or len(self.field.foreign_related_fields) == 1:\n            query = {\n                \"%s__in\"\n                % related_field.name: {instance_attr(inst)[0] for inst in instances}\n            }\n        else:\n            query = {\"%s__in\" % self.field.related_query_name(): instances}\n        queryset = queryset.filter(**query)\n\n        # Since we're going to assign directly in the cache,\n        # we must manage the reverse relation cache manually.\n        if not remote_field.multiple:\n            for rel_obj in queryset:\n                instance = instances_dict[rel_obj_attr(rel_obj)]\n                remote_field.set_cached_value(rel_obj, instance)\n        return (\n            queryset,\n            rel_obj_attr,\n            instance_attr,\n            True,\n            self.field.get_cache_name(),\n            False,\n        )\n\n",
        "new_str": "\n\n    def get_prefetch_queryset(self, instances, queryset=None):\n        if queryset is None:\n            queryset = self.get_queryset()\n        queryset._add_hints(instance=instances[0])\n\n        rel_obj_attr = self.field.get_foreign_related_value\n        instance_attr = self.field.get_local_related_value\n        instances_dict = {instance_attr(inst): inst for inst in instances}\n        related_field = self.field.foreign_related_fields[0]\n        remote_field = self.field.remote_field\n\n        # Handle sliced querysets by first applying the slice\n        is_sliced = getattr(queryset, '_is_sliced', False)\n        if is_sliced:\n            sliced_queryset = queryset._clone()\n            queryset = queryset._clone()\n            queryset.query.clear_limits()\n\n        if remote_field.is_hidden() or len(self.field.foreign_related_fields) == 1:\n            query = {\n                \"%s__in\"\n                % related_field.name: {instance_attr(inst)[0] for inst in instances}\n            }\n        else:\n            query = {\"%s__in\" % self.field.related_query_name(): instances}\n        queryset = queryset.filter(**query)\n\n        # Reapply slice after filtering if original queryset was sliced\n        if is_sliced:\n            queryset = sliced_queryset._clone()\n            queryset._result_cache = list(queryset._result_cache)[:sliced_queryset.query.high_mark]\n\n        # Since we're going to assign directly in the cache,\n        # we must manage the reverse relation cache manually.\n        if not remote_field.multiple:\n            for rel_obj in queryset:\n                instance = instances_dict[rel_obj_attr(rel_obj)]\n                remote_field.set_cached_value(rel_obj, instance)\n        return (\n            queryset,\n            rel_obj_attr,\n            instance_attr,\n            True,\n            self.field.get_cache_name(),\n            False,\n        )\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        27
      ],
      "id": "26:str_replace_editor\nstr_replace"
    },
    {
      "label": "\nls",
      "args": [
        "tests/prefetch_related/"
      ],
      "phase": "general",
      "step_indices": [
        28
      ],
      "id": "27:\nls"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        29
      ],
      "id": "28:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "old_str": "\n\n\nclass TestDataMixin:\n    @classmethod\n    def setUpTestData(cls):\n        cls.book1 = Book.objects.create(title=\"Poems\")\n        cls.book2 = Book.objects.create(title=\"Jane Eyre\")\n        cls.book3 = Book.objects.create(title=\"Wuthering Heights\")\n        cls.book4 = Book.objects.create(title=\"Sense and Sensibility\")\n\n        cls.author1 = Author.objects.create(name=\"Charlotte\", first_book=cls.book1)\n        cls.author2 = Author.objects.create(name=\"Anne\", first_book=cls.book1)\n\n",
        "new_str": "\n\n\nclass TestDataMixin:\n    @classmethod\n    def setUpTestData(cls):\n        cls.book1 = Book.objects.create(title=\"Poems\")\n        cls.book2 = Book.objects.create(title=\"Jane Eyre\")\n        cls.book3 = Book.objects.create(title=\"Wuthering Heights\")\n        cls.book4 = Book.objects.create(title=\"Sense and Sensibility\")\n\n        cls.author1 = Author.objects.create(name=\"Charlotte\", first_book=cls.book1)\n        cls.author2 = Author.objects.create(name=\"Anne\", first_book=cls.book1)\n        # Add some books with authors for testing prefetch with slices\n        cls.book_with_authors1 = Book.objects.create(title=\"Book with authors 1\")\n        cls.book_with_authors2 = Book.objects.create(title=\"Book with authors 2\")\n        for i in range(10):\n            author = Author.objects.create(name=f\"Author {i}\", first_book=cls.book1)\n            cls.book_with_authors1.authors.add(author)\n            cls.book_with_authors2.authors.add(author)\n\n",
        "edit_status": "failure: not found"
      },
      "phase": "patch",
      "step_indices": [
        30
      ],
      "id": "29:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "view_range": [
          40,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        31
      ],
      "id": "30:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "old_str": "class TestDataMixin:\n    @classmethod\n    def setUpTestData(cls):\n        cls.book1 = Book.objects.create(title=\"Poems\")\n        cls.book2 = Book.objects.create(title=\"Jane Eyre\")\n        cls.book3 = Book.objects.create(title=\"Wuthering Heights\")\n        cls.book4 = Book.objects.create(title=\"Sense and Sensibility\")\n\n        cls.author1 = Author.objects.create(name=\"Charlotte\", first_book=cls.book1)\n        cls.author2 = Author.objects.create(name=\"Anne\", first_book=cls.book1)",
        "new_str": "class TestDataMixin:\n    @classmethod\n    def setUpTestData(cls):\n        cls.book1 = Book.objects.create(title=\"Poems\")\n        cls.book2 = Book.objects.create(title=\"Jane Eyre\")\n        cls.book3 = Book.objects.create(title=\"Wuthering Heights\")\n        cls.book4 = Book.objects.create(title=\"Sense and Sensibility\")\n\n        cls.author1 = Author.objects.create(name=\"Charlotte\", first_book=cls.book1)\n        cls.author2 = Author.objects.create(name=\"Anne\", first_book=cls.book1)\n        # Add some books with authors for testing prefetch with slices\n        cls.book_with_authors1 = Book.objects.create(title=\"Book with authors 1\")\n        cls.book_with_authors2 = Book.objects.create(title=\"Book with authors 2\")\n        for i in range(10):\n            author = Author.objects.create(name=f\"Author {i}\", first_book=cls.book1)\n            cls.book_with_authors1.authors.add(author)\n            cls.book_with_authors2.authors.add(author)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        32
      ],
      "id": "31:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "view_range": [
          500,
          550
        ]
      },
      "phase": "localization",
      "step_indices": [
        33
      ],
      "id": "32:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/django__django__4.2/tests/prefetch_related/tests.py",
        "old_str": "\n    def test_ambiguous(self):\n        # Ambiguous: Lookup was already seen with a different queryset.\n        msg = (\n            \"'houses' lookup was already seen with a different queryset. You \"\n            \"may need to adjust the ordering of your lookups.\"\n        )\n        # lookup.queryset shouldn't be evaluated.\n        with self.assertNumQueries(3):\n            with self.assertRaisesMessage(ValueError, msg):\n                self.traverse_qs(\n                    Person.objects.prefetch_related(\n                        \"houses__rooms\",\n                        Prefetch(\"houses\", queryset=House.objects.all()),\n                    ),\n                    [[\"houses\", \"rooms\"]],\n                )\n\n",
        "new_str": "\n    def test_ambiguous(self):\n        # Ambiguous: Lookup was already seen with a different queryset.\n        msg = (\n            \"'houses' lookup was already seen with a different queryset. You \"\n            \"may need to adjust the ordering of your lookups.\"\n        )\n        # lookup.queryset shouldn't be evaluated.\n        with self.assertNumQueries(3):\n            with self.assertRaisesMessage(ValueError, msg):\n                self.traverse_qs(\n                    Person.objects.prefetch_related(\n                        \"houses__rooms\",\n                        Prefetch(\"houses\", queryset=House.objects.all()),\n                    ),\n                    [[\"houses\", \"rooms\"]],\n                )\n\n    def test_prefetch_with_sliced_queryset(self):\n        # Test that prefetch_related works with sliced querysets\n        books = Book.objects.filter(\n            pk__in=[self.book_with_authors1.pk, self.book_with_authors2.pk]\n        ).prefetch_related(\n            Prefetch(\n                'authors',\n                queryset=Author.objects.order_by('name')[:3],  # Only get first 3 authors\n                to_attr='first_three_authors'\n            )\n        )\n        \n        with self.assertNumQueries(2):\n            for book in books:\n                authors = book.first_three_authors\n                self.assertEqual(len(authors), 3)\n                # Verify we got the first 3 alphabetically\n                self.assertEqual(authors[0].name, \"Author 0\")\n                self.assertEqual(authors[1].name, \"Author 1\")\n                self.assertEqual(authors[2].name, \"Author 2\")\n\n",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        34
      ],
      "id": "33:str_replace_editor\nstr_replace"
    },
    {
      "label": "\npython",
      "args": [
        "tests/prefetch_related/tests.py::PrefetchRelatedTests::test_prefetch_with_sliced_queryset"
      ],
      "phase": "general",
      "step_indices": [
        35
      ],
      "id": "34:\npython"
    },
    {
      "label": "\npython",
      "args": [
        "test",
        "tests.prefetch_related.tests.PrefetchRelatedTests.test_prefetch_with_sliced_queryset"
      ],
      "phase": "general",
      "step_indices": [
        36
      ],
      "id": "35:\npython"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/django__django__4.2/test_settings.py",
        "file_text": "\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': ':memory:',\n    }\n}\nINSTALLED_APPS = [\n    'django.contrib.contenttypes',\n    'django.contrib.auth',\n    'tests.prefetch_related',\n]\nSECRET_KEY = 'test'\n"
      },
      "phase": "verification",
      "step_indices": [
        37
      ],
      "id": "36:str_replace_editor\ncreate"
    },
    {
      "label": "\nDJANGO_SETTINGS_MODULE=test_settings",
      "args": [
        "python",
        "test",
        "tests.prefetch_related.tests.PrefetchRelatedTests.test_prefetch_with_sliced_queryset"
      ],
      "phase": "general",
      "step_indices": [
        38,
        40,
        42
      ],
      "id": "37:\nDJANGO_SETTINGS_MODULE=test_settings"
    },
    {
      "label": "\ngrep",
      "args": [
        "tests/prefetch_related/tests.py",
        "|",
        "head"
      ],
      "phase": "general",
      "step_indices": [
        39
      ],
      "id": "38:\ngrep"
    },
    {
      "label": "\ngrep",
      "args": [
        "tests/prefetch_related/tests.py"
      ],
      "phase": "general",
      "step_indices": [
        41
      ],
      "id": "39:\ngrep"
    },
    {
      "label": "\nDJANGO_SETTINGS_MODULE=test_settings",
      "args": [
        "python",
        "test",
        "tests.prefetch_related.tests"
      ],
      "phase": "general",
      "step_indices": [
        43
      ],
      "id": "40:\nDJANGO_SETTINGS_MODULE=test_settings"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "1:cd",
      "target": "2:\nfind",
      "key": 1
    },
    {
      "label": "8",
      "type": "exec",
      "source": "1:cd",
      "target": "10:\ngrep",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "1:cd",
      "target": "10:\ngrep",
      "key": 1
    },
    {
      "label": "11",
      "type": "exec",
      "source": "1:cd",
      "target": "13:\ngrep",
      "key": 0
    },
    {
      "label": "14",
      "type": "exec",
      "source": "1:cd",
      "target": "13:\ngrep",
      "key": 1
    },
    {
      "label": "18",
      "type": "exec",
      "source": "1:cd",
      "target": "18:\ngrep",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "1:cd",
      "target": "22:\ngrep",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "1:cd",
      "target": "24:\ngrep",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "1:cd",
      "target": "27:\nls",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "1:cd",
      "target": "34:\npython",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "1:cd",
      "target": "35:\npython",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "1:cd",
      "target": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "key": 0
    },
    {
      "label": "40",
      "type": "exec",
      "source": "1:cd",
      "target": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "key": 1
    },
    {
      "label": "42",
      "type": "exec",
      "source": "1:cd",
      "target": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "key": 2
    },
    {
      "label": "39",
      "type": "exec",
      "source": "1:cd",
      "target": "38:\ngrep",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "1:cd",
      "target": "39:\ngrep",
      "key": 0
    },
    {
      "label": "43",
      "type": "exec",
      "source": "1:cd",
      "target": "40:\nDJANGO_SETTINGS_MODULE=test_settings",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "2:\nfind",
      "target": "3:echo",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:\nfind",
      "target": "4:echo",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "3:echo",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "4:echo",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "6:str_replace_editor\nview",
      "target": "7:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "7:str_replace_editor\nview",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "9:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "10:\ngrep",
      "target": "11:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "20",
      "type": "exec",
      "source": "10:\ngrep",
      "target": "19:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "11:str_replace_editor\nview",
      "target": "12:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "12:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "13:\ngrep",
      "target": "14:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "13:\ngrep",
      "target": "15:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "14:str_replace_editor\nview",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "15:str_replace_editor\nview",
      "target": "16:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "17",
      "type": "exec",
      "source": "16:str_replace_editor\nview",
      "target": "17:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "18",
      "type": "exec",
      "source": "17:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "19",
      "type": "exec",
      "source": "18:\ngrep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "21",
      "type": "exec",
      "source": "19:str_replace_editor\nview",
      "target": "20:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "22",
      "type": "exec",
      "source": "20:str_replace_editor\nview",
      "target": "21:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "23",
      "type": "exec",
      "source": "21:str_replace_editor\nview",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "24",
      "type": "exec",
      "source": "22:\ngrep",
      "target": "23:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "25",
      "type": "exec",
      "source": "23:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "26",
      "type": "exec",
      "source": "24:\ngrep",
      "target": "25:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "27",
      "type": "exec",
      "source": "25:str_replace_editor\nview",
      "target": "26:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "28",
      "type": "exec",
      "source": "26:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "29",
      "type": "exec",
      "source": "27:\nls",
      "target": "28:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "30",
      "type": "exec",
      "source": "28:str_replace_editor\nview",
      "target": "29:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "type": "hier",
      "source": "28:str_replace_editor\nview",
      "target": "30:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "31",
      "type": "exec",
      "source": "29:str_replace_editor\nstr_replace",
      "target": "30:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "32",
      "type": "exec",
      "source": "30:str_replace_editor\nview",
      "target": "31:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "33",
      "type": "exec",
      "source": "31:str_replace_editor\nstr_replace",
      "target": "32:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "34",
      "type": "exec",
      "source": "32:str_replace_editor\nview",
      "target": "33:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "35",
      "type": "exec",
      "source": "33:str_replace_editor\nstr_replace",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "36",
      "type": "exec",
      "source": "34:\npython",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "37",
      "type": "exec",
      "source": "35:\npython",
      "target": "36:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "38",
      "type": "exec",
      "source": "36:str_replace_editor\ncreate",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "39",
      "type": "exec",
      "source": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "41",
      "type": "exec",
      "source": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "43",
      "type": "exec",
      "source": "37:\nDJANGO_SETTINGS_MODULE=test_settings",
      "target": "1:cd",
      "key": 2
    },
    {
      "label": "40",
      "type": "exec",
      "source": "38:\ngrep",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "42",
      "type": "exec",
      "source": "39:\ngrep",
      "target": "1:cd",
      "key": 0
    }
  ]
}