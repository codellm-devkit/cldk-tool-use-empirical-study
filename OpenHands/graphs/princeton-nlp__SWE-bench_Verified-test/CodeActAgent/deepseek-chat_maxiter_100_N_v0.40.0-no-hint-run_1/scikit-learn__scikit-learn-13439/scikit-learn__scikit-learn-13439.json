{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "scikit-learn__scikit-learn-13439",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "easy",
    "golden_files_change": 1,
    "patch_difficulty": "easy",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "empty action",
      "args": {},
      "phase": "general",
      "step_indices": [
        0,
        4,
        9
      ],
      "id": "0:empty action"
    },
    {
      "label": "cd",
      "args": [
        "/workspace/scikit-learn__scikit-learn__0.21"
      ],
      "phase": "general",
      "step_indices": [
        1,
        13,
        16
      ],
      "id": "1:cd"
    },
    {
      "label": "python",
      "args": [
        "sklearn/pipeline.py"
      ],
      "phase": "verification",
      "step_indices": [
        1,
        16
      ],
      "id": "2:python"
    },
    {
      "label": "grep",
      "args": [
        "/workspace/scikit-learn__scikit-learn__0.21/sklearn"
      ],
      "phase": "general",
      "step_indices": [
        2,
        5
      ],
      "id": "3:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.21/sklearn/pipeline.py",
        "view_range": [
          1,
          100
        ]
      },
      "phase": "localization",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.21/sklearn/tests/test_pipeline.py",
        "view_range": [
          1,
          50
        ]
      },
      "phase": "localization",
      "step_indices": [
        6
      ],
      "id": "5:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\ncreate",
      "args": {
        "path": "/workspace/test_pipeline_len.py",
        "file_text": "\nfrom sklearn import svm\nfrom sklearn.datasets import make_classification\nfrom sklearn.feature_selection import SelectKBest, f_regression\nfrom sklearn.pipeline import Pipeline\n\n# Test __len__ implementation\ndef test_pipeline_len():\n    X, y = make_classification(n_informative=5, n_redundant=0, random_state=42)\n    anova_filter = SelectKBest(f_regression, k=5)\n    clf = svm.SVC(kernel='linear')\n    pipe = Pipeline([('anova', anova_filter), ('svc', clf)])\n    \n    # Should return number of steps\n    assert len(pipe) == 2\n\nif __name__ == '__main__':\n    test_pipeline_len()\n    print(\"Test passed!\")\n"
      },
      "phase": "verification",
      "step_indices": [
        7
      ],
      "id": "6:str_replace_editor\ncreate"
    },
    {
      "label": "python",
      "args": [
        "/workspace/test_pipeline_len.py"
      ],
      "phase": "verification",
      "step_indices": [
        8,
        12,
        13,
        15
      ],
      "id": "7:python"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.21/sklearn/pipeline.py",
        "view_range": [
          200,
          250
        ]
      },
      "phase": "localization",
      "step_indices": [
        10
      ],
      "id": "8:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/scikit-learn__scikit-learn__0.21/sklearn/pipeline.py",
        "old_str": "    def __getitem__(self, ind):\n        \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n\n        Indexing with an integer will return an estimator; using a slice\n        returns another Pipeline instance which copies a slice of this\n        Pipeline. This copy is shallow: modifying (or fitting) estimators in\n        the sub-pipeline will affect the larger pipeline and vice-versa.\n        However, replacing a value in `step` will not affect a copy.\n        \"\"\"\n        if isinstance(ind, slice):\n            if ind.step not in (1, None):\n                raise ValueError('Pipeline slicing only supports a step of 1')\n            return self.__class__(self.steps[ind])\n        try:\n            name, est = self.steps[ind]\n        except TypeError:\n            # Not an int, try get step by name\n            return self.named_steps[ind]\n        return est",
        "new_str": "    def __getitem__(self, ind):\n        \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n\n        Indexing with an integer will return an estimator; using a slice\n        returns another Pipeline instance which copies a slice of this\n        Pipeline. This copy is shallow: modifying (or fitting) estimators in\n        the sub-pipeline will affect the larger pipeline and vice-versa.\n        However, replacing a value in `step` will not affect a copy.\n        \"\"\"\n        if isinstance(ind, slice):\n            if ind.step not in (1, None):\n                raise ValueError('Pipeline slicing only supports a step of 1')\n            return self.__class__(self.steps[ind])\n        try:\n            name, est = self.steps[ind]\n        except TypeError:\n            # Not an int, try get step by name\n            return self.named_steps[ind]\n        return est\n\n    def __len__(self):\n        \"\"\"Returns the length of the Pipeline\"\"\"\n        return len(self.steps)",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        11
      ],
      "id": "9:str_replace_editor\nstr_replace"
    },
    {
      "label": "pip",
      "args": [
        "install"
      ],
      "phase": "general",
      "step_indices": [
        13
      ],
      "id": "10:pip"
    },
    {
      "label": "C-c",
      "args": [],
      "phase": "general",
      "step_indices": [
        14
      ],
      "id": "11:C-c"
    },
    {
      "label": "set_env",
      "args": [
        "PYTHONPATH=/workspace/scikit-learn__scikit-learn__0.21"
      ],
      "phase": "general",
      "step_indices": [
        15
      ],
      "id": "12:set_env"
    }
  ],
  "edges": [
    {
      "label": "1",
      "type": "exec",
      "source": "0:empty action",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "5",
      "type": "exec",
      "source": "0:empty action",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "10",
      "type": "exec",
      "source": "0:empty action",
      "target": "8:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "1:cd",
      "target": "2:python",
      "key": 1
    },
    {
      "label": "13",
      "type": "exec",
      "source": "1:cd",
      "target": "10:pip",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:python",
      "target": "3:grep",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:grep",
      "target": "4:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "6",
      "type": "exec",
      "source": "3:grep",
      "target": "5:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nview",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "7",
      "type": "exec",
      "source": "5:str_replace_editor\nview",
      "target": "6:str_replace_editor\ncreate",
      "key": 0
    },
    {
      "label": "8",
      "type": "exec",
      "source": "6:str_replace_editor\ncreate",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "9",
      "type": "exec",
      "source": "7:python",
      "target": "0:empty action",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "7:python",
      "target": "1:cd",
      "key": 0
    },
    {
      "label": "16",
      "type": "exec",
      "source": "7:python",
      "target": "1:cd",
      "key": 1
    },
    {
      "label": "14",
      "type": "exec",
      "source": "7:python",
      "target": "11:C-c",
      "key": 0
    },
    {
      "label": "11",
      "type": "exec",
      "source": "8:str_replace_editor\nview",
      "target": "9:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "12",
      "type": "exec",
      "source": "9:str_replace_editor\nstr_replace",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "13",
      "type": "exec",
      "source": "10:pip",
      "target": "7:python",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "11:C-c",
      "target": "12:set_env",
      "key": 0
    },
    {
      "label": "15",
      "type": "exec",
      "source": "12:set_env",
      "target": "7:python",
      "key": 0
    }
  ]
}