{
  "directed": true,
  "multigraph": true,
  "graph": {
    "resolution_status": "resolved",
    "instance_name": "pytest-dev__pytest-7205",
    "difficulty": "<15 min fix",
    "golden_patch_difficulty": "medium",
    "golden_files_change": 1,
    "patch_difficulty": "medium",
    "files_change": 1
  },
  "nodes": [
    {
      "label": "cd",
      "args": [
        "/workspace/pytest-dev__pytest__5.4"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "0:cd"
    },
    {
      "label": "grep",
      "args": [
        "src/"
      ],
      "phase": "general",
      "step_indices": [
        0
      ],
      "id": "1:grep"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.4/src/_pytest/setuponly.py",
        "view_range": [
          60,
          75
        ]
      },
      "phase": "localization",
      "step_indices": [
        1
      ],
      "id": "2:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nview",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.4/src/_pytest/setuponly.py",
        "view_range": [
          1,
          20
        ]
      },
      "phase": "localization",
      "step_indices": [
        2
      ],
      "id": "3:str_replace_editor\nview"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.4/src/_pytest/setuponly.py",
        "old_str": "import pytest\n\n\ndef pytest_addoption(parser):",
        "new_str": "import pytest\nfrom _pytest._io.saferepr import saferepr\n\n\ndef pytest_addoption(parser):",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        3
      ],
      "id": "4:str_replace_editor\nstr_replace"
    },
    {
      "label": "str_replace_editor\nstr_replace",
      "args": {
        "path": "/workspace/pytest-dev__pytest__5.4/src/_pytest/setuponly.py",
        "old_str": "    if hasattr(fixturedef, \"cached_param\"):\n        tw.write(\"[{}]\".format(fixturedef.cached_param))",
        "new_str": "    if hasattr(fixturedef, \"cached_param\"):\n        tw.write(\"[{}]\".format(saferepr(fixturedef.cached_param)))",
        "edit_status": "success"
      },
      "phase": "patch",
      "step_indices": [
        4
      ],
      "id": "5:str_replace_editor\nstr_replace"
    }
  ],
  "edges": [
    {
      "label": "0",
      "type": "exec",
      "source": "0:cd",
      "target": "1:grep",
      "key": 0
    },
    {
      "label": "1",
      "type": "exec",
      "source": "1:grep",
      "target": "2:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "2",
      "type": "exec",
      "source": "2:str_replace_editor\nview",
      "target": "3:str_replace_editor\nview",
      "key": 0
    },
    {
      "label": "3",
      "type": "exec",
      "source": "3:str_replace_editor\nview",
      "target": "4:str_replace_editor\nstr_replace",
      "key": 0
    },
    {
      "label": "4",
      "type": "exec",
      "source": "4:str_replace_editor\nstr_replace",
      "target": "5:str_replace_editor\nstr_replace",
      "key": 0
    }
  ]
}