2025-06-25 20:51:23,420 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_ylptdy9ch0d89tdr_634egmkijx387tjz
2025-06-25 20:54:21,915 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_ylptdy9ch0d89tdr_634egmkijx387tjz] build finished.
2025-06-25 20:54:21,927 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_ylptdy9ch0d89tdr_634egmkijx387tjz] with more generic tag [oh_v0.40.0_ylptdy9ch0d89tdr]
2025-06-25 20:54:21,931 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_ylptdy9ch0d89tdr_634egmkijx387tjz, oh_v0.40.0_ylptdy9ch0d89tdr] built successfully
2025-06-25 20:54:21,953 - INFO - [runtime d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_ylptdy9ch0d89tdr_634egmkijx387tjz
2025-06-25 20:54:22,494 - INFO - [runtime d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Container started: openhands-runtime-d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a. VSCode URL: None
2025-06-25 20:54:22,495 - INFO - [runtime d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Waiting for client to become ready at http://localhost:30543...
2025-06-25 20:54:54,618 - INFO - [runtime d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Runtime is ready.
2025-06-25 20:54:57,204 - INFO - ------------------------------
2025-06-25 20:54:57,205 - INFO - BEGIN Runtime Initialization Fn
2025-06-25 20:54:57,205 - INFO - ------------------------------
2025-06-25 20:54:57,205 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pytest-dev__pytest-6197' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-25 20:54:57,851 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:54:57,852 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-25 20:54:58,493 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:54:58,494 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-25 20:54:59,134 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:54:59,148 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-25 20:54:59,788 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=pytest-dev__pytest-6197
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:54:59,788 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-25 20:55:00,429 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:00,430 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-25 20:55:01,067 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pytest-dev__pytest__5.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:01,067 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__5.2
2025-06-25 20:55:01,706 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:01,707 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-25 20:55:02,347 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at e856638ba Preparing release version 5.2.3 (#6190)
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:02,347 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-25 20:55:02,990 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:02,990 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-25 20:55:03,629 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 20:55:03,629 - INFO - ------------------------------
2025-06-25 20:55:03,630 - INFO - END Runtime Initialization Fn
2025-06-25 20:55:03,630 - INFO - ------------------------------
2025-06-25 20:55:03,653 - INFO - [runtime d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-25 20:55:03,660 - INFO - Loading user workspace microagents: []
2025-06-25 20:55:03,660 - INFO - [Agent Controller d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] AgentController d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a - created new state. start_id: 0
2025-06-25 20:55:03,666 - INFO - [Agent Controller d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-25 21:14:55,797 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-25 21:14:55,797 - INFO - [Agent Controller d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-25 21:14:55,801 - WARNING - Stopping agent due to traffic control
2025-06-25 21:14:55,802 - INFO - [Agent Controller d00b86ec-c4fe-4035-a017-c51197352c37-565589b008e5bb1a] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-25 21:14:55,994 - INFO - ------------------------------
2025-06-25 21:14:55,994 - INFO - BEGIN Runtime Completion Fn
2025-06-25 21:14:55,994 - INFO - ------------------------------
2025-06-25 21:14:55,994 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__5.2
2025-06-25 21:14:56,634 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:56,635 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-25 21:14:57,273 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:57,274 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-25 21:14:57,914 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:57,915 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-25 21:14:58,553 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:58,554 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-25 21:14:59,206 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:59,207 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached e856638ba086fcf5bebf1bebea32d5cf78de87b4 > patch.diff
2025-06-25 21:14:59,847 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "1dddf385a2dc",
  "working_dir": "/workspace/pytest-dev__pytest__5.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:14:59,848 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-25 21:14:59,854 - INFO - [Read from /workspace/pytest-dev__pytest__5.2/patch.diff is successful.]
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 306e5f217..8956a606e 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -176,9 +176,13 @@ def pytest_pyfunc_call(pyfuncitem):
 def pytest_collect_file(path, parent):
     ext = path.ext
     if ext == ".py":
+        # Skip __init__.py unless explicitly given as argument
+        if path.basename == "__init__.py" and not parent.session.isinitpath(path):
+            return
+            
         if not parent.session.isinitpath(path):
             if not path_matches_patterns(
-                path, parent.config.getini("python_files") + ["__init__.py"]
+                path, parent.config.getini("python_files")
             ):
                 return
         ihook = parent.session.gethookproxy(path)
@@ -192,7 +196,10 @@ def path_matches_patterns(path, patterns):
 
 def pytest_pycollect_makemodule(path, parent):
     if path.basename == "__init__.py":
-        return Package(path, parent)
+        # Only return Package for __init__.py if it's in our initial paths
+        if parent.session.isinitpath(path):
+            return Package(path, parent)
+        return None
     return Module(path, parent)
 
 
@@ -562,6 +569,9 @@ class Package(Module):
         nodes.FSCollector.__init__(
             self, fspath, parent=parent, config=config, session=session, nodeid=nodeid
         )
+        # Skip collection if this __init__.py wasn't explicitly requested
+        if not session.isinitpath(fspath):
+            self._skiplist = ["*"]  # Skip all files in this package
         self.name = fspath.dirname
         self.trace = session.trace
         self._norecursepatterns = session._norecursepatterns
@@ -616,7 +626,19 @@ class Package(Module):
         ), "{!r} is not a file (isdir={!r}, exists={!r}, islink={!r})".format(
             path, path.isdir(), path.exists(), path.islink()
         )
+        
+        # Skip __init__.py files unless explicitly given as argument
+        if path.basename == "__init__.py" and not self.isinitpath(path):
+            return ()
+            
         ihook = self.gethookproxy(path)
+        # Skip __init__.py files unless:
+        # 1. They are explicitly given as arguments, or
+        # 2. They are in a package being collected (handled in collect())
+        if path.basename == "__init__.py":
+            if not (self.isinitpath(path) or path.dirname == self.fspath.dirname):
+                return ()
+                
         if not self.isinitpath(path):
             if ihook.pytest_ignore_collect(path=path, config=self.config):
                 return ()
@@ -631,7 +653,9 @@ class Package(Module):
                     duplicate_paths.add(path)
 
         if self.fspath == path:  # __init__.py
-            return [self]
+            if self.isinitpath(path):
+                return [self]
+            return ()
 
         return ihook.pytest_collect_file(path=path, parent=self)
 
@@ -641,9 +665,11 @@ class Package(Module):
     def collect(self):
         self._mount_obj_if_needed()
         this_path = self.fspath.dirpath()
+        # Only collect __init__.py if it's in our initial paths or part of current package
         init_module = this_path.join("__init__.py")
-        if init_module.check(file=1) and path_matches_patterns(
-            init_module, self.config.getini("python_files")
+        if (init_module.check(file=1) and 
+            self.isinitpath(init_module) and
+            path_matches_patterns(init_module, self.config.getini("python_files"))
         ):
             yield Module(init_module, self)
         pkg_prefixes = set()
diff --git a/test_regression/foobar/__init__.py b/test_regression/foobar/__init__.py
new file mode 100644
index 000000000..2cfffa40d
--- /dev/null
+++ b/test_regression/foobar/__init__.py
@@ -0,0 +1 @@
+assert False

2025-06-25 21:14:59,855 - INFO - ------------------------------
2025-06-25 21:14:59,855 - INFO - END Runtime Completion Fn
2025-06-25 21:14:59,856 - INFO - ------------------------------
2025-06-25 21:14:59,856 - INFO - Got git diff for instance pytest-dev__pytest-6197:
--------
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 306e5f217..8956a606e 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -176,9 +176,13 @@ def pytest_pyfunc_call(pyfuncitem):
 def pytest_collect_file(path, parent):
     ext = path.ext
     if ext == ".py":
+        # Skip __init__.py unless explicitly given as argument
+        if path.basename == "__init__.py" and not parent.session.isinitpath(path):
+            return
+            
         if not parent.session.isinitpath(path):
             if not path_matches_patterns(
-                path, parent.config.getini("python_files") + ["__init__.py"]
+                path, parent.config.getini("python_files")
             ):
                 return
         ihook = parent.session.gethookproxy(path)
@@ -192,7 +196,10 @@ def path_matches_patterns(path, patterns):
 
 def pytest_pycollect_makemodule(path, parent):
     if path.basename == "__init__.py":
-        return Package(path, parent)
+        # Only return Package for __init__.py if it's in our initial paths
+        if parent.session.isinitpath(path):
+            return Package(path, parent)
+        return None
     return Module(path, parent)
 
 
@@ -562,6 +569,9 @@ class Package(Module):
         nodes.FSCollector.__init__(
             self, fspath, parent=parent, config=config, session=session, nodeid=nodeid
         )
+        # Skip collection if this __init__.py wasn't explicitly requested
+        if not session.isinitpath(fspath):
+            self._skiplist = ["*"]  # Skip all files in this package
         self.name = fspath.dirname
         self.trace = session.trace
         self._norecursepatterns = session._norecursepatterns
@@ -616,7 +626,19 @@ class Package(Module):
         ), "{!r} is not a file (isdir={!r}, exists={!r}, islink={!r})".format(
             path, path.isdir(), path.exists(), path.islink()
         )
+        
+        # Skip __init__.py files unless explicitly given as argument
+        if path.basename == "__init__.py" and not self.isinitpath(path):
+            return ()
+            
         ihook = self.gethookproxy(path)
+        # Skip __init__.py files unless:
+        # 1. They are explicitly given as arguments, or
+        # 2. They are in a package being collected (handled in collect())
+        if path.basename == "__init__.py":
+            if not (self.isinitpath(path) or path.dirname == self.fspath.dirname):
+                return ()
+                
         if not self.isinitpath(path):
             if ihook.pytest_ignore_collect(path=path, config=self.config):
                 return ()
@@ -631,7 +653,9 @@ class Package(Module):
                     duplicate_paths.add(path)
 
         if self.fspath == path:  # __init__.py
-            return [self]
+            if self.isinitpath(path):
+                return [self]
+            return ()
 
         return ihook.pytest_collect_file(path=path, parent=self)
 
@@ -641,9 +665,11 @@ class Package(Module):
     def collect(self):
         self._mount_obj_if_needed()
         this_path = self.fspath.dirpath()
+        # Only collect __init__.py if it's in our initial paths or part of current package
         init_module = this_path.join("__init__.py")
-        if init_module.check(file=1) and path_matches_patterns(
-            init_module, self.config.getini("python_files")
+        if (init_module.check(file=1) and 
+            self.isinitpath(init_module) and
+            path_matches_patterns(init_module, self.config.getini("python_files"))
         ):
             yield Module(init_module, self)
         pkg_prefixes = set()
diff --git a/test_regression/foobar/__init__.py b/test_regression/foobar/__init__.py
new file mode 100644
index 000000000..2cfffa40d
--- /dev/null
+++ b/test_regression/foobar/__init__.py
@@ -0,0 +1 @@
+assert False
--------
2025-06-25 21:15:03,137 - INFO - Using instance container image: swebench/sweb.eval.x86_64.scikit-learn_1776_scikit-learn-9288:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-25 21:15:03,137 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-25 21:15:03,138 - INFO - Logging LLM completions for instance scikit-learn__scikit-learn-9288 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/scikit-learn__scikit-learn-9288
