2025-06-26 15:51:35,680 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_wbai0922pr671jms_634egmkijx387tjz
2025-06-26 15:54:44,445 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_wbai0922pr671jms_634egmkijx387tjz] build finished.
2025-06-26 15:54:44,456 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_wbai0922pr671jms_634egmkijx387tjz] with more generic tag [oh_v0.40.0_wbai0922pr671jms]
2025-06-26 15:54:44,460 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_wbai0922pr671jms_634egmkijx387tjz, oh_v0.40.0_wbai0922pr671jms] built successfully
2025-06-26 15:54:44,479 - INFO - [runtime aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_wbai0922pr671jms_634egmkijx387tjz
2025-06-26 15:54:46,378 - INFO - [runtime aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Container started: openhands-runtime-aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0. VSCode URL: None
2025-06-26 15:54:46,379 - INFO - [runtime aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Waiting for client to become ready at http://localhost:36215...
2025-06-26 15:55:18,537 - INFO - [runtime aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Runtime is ready.
2025-06-26 15:55:21,120 - INFO - ------------------------------
2025-06-26 15:55:21,120 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 15:55:21,121 - INFO - ------------------------------
2025-06-26 15:55:21,121 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-15629' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 15:55:21,765 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:21,765 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 15:55:22,404 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:22,405 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 15:55:23,044 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:23,057 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 15:55:23,698 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=django__django-15629
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:23,699 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 15:55:24,338 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:24,339 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 15:55:25,484 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__4.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:25,485 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__4.1
2025-06-26 15:55:26,124 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:26,125 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 15:55:27,268 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 694cf458f1 Removed 'tests' path prefix in a couple tests.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:27,268 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 15:55:27,912 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:27,912 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 15:55:28,552 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 15:55:28,552 - INFO - ------------------------------
2025-06-26 15:55:28,553 - INFO - END Runtime Initialization Fn
2025-06-26 15:55:28,553 - INFO - ------------------------------
2025-06-26 15:55:28,574 - INFO - [runtime aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 15:55:28,580 - INFO - Loading user workspace microagents: []
2025-06-26 15:55:28,581 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] AgentController aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0 - created new state. start_id: 0
2025-06-26 15:55:28,587 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 15:57:48,715 - WARNING - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Pending action active for 84.53s: CmdRunAction (id=13)
2025-06-26 15:57:48,716 - WARNING - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Pending action active for 84.53s: CmdRunAction (id=13)
2025-06-26 16:01:38,888 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 16:01:38,892 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 16:04:31,509 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 16:04:31,513 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 16:04:49,452 - INFO - [Agent Controller aaaeea5c-637f-47ba-aba8-d11a93fba72b-d287857ab9af5ff0] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-26 16:04:50,200 - INFO - ------------------------------
2025-06-26 16:04:50,200 - INFO - BEGIN Runtime Completion Fn
2025-06-26 16:04:50,200 - INFO - ------------------------------
2025-06-26 16:04:50,200 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__4.1
2025-06-26 16:04:50,842 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:50,843 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 16:04:51,479 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:51,479 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 16:04:52,115 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:52,115 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 16:04:52,756 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:52,756 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 16:04:53,406 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:53,407 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 694cf458f16b8d340a3195244196980b2dec34fd > patch.diff
2025-06-26 16:04:54,048 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "a5ff96deaefb",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:04:54,049 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 16:04:54,054 - INFO - [Read from /workspace/django__django__4.1/patch.diff is successful.]
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index fad5560486..4441617558 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -951,6 +951,11 @@ class ForeignKey(ForeignObject):
             # the to_field during FK construction. It won't be guaranteed to
             # be correct until contribute_to_class is called. Refs #12190.
             to_field = to_field or (to._meta.pk and to._meta.pk.name)
+            # Propagate db_collation from target field if not explicitly set
+            if 'db_collation' not in kwargs and to_field:
+                target_field = to._meta.get_field(to_field)
+                if hasattr(target_field, 'db_collation') and target_field.db_collation:
+                    kwargs['db_collation'] = target_field.db_collation
         if not callable(on_delete):
             raise TypeError("on_delete must be callable.")
 
@@ -1043,6 +1048,8 @@ class ForeignKey(ForeignObject):
             kwargs["db_index"] = False
         if self.db_constraint is not True:
             kwargs["db_constraint"] = self.db_constraint
+        if hasattr(self, 'db_collation') and self.db_collation:
+            kwargs['db_collation'] = self.db_collation
         # Rel needs more work.
         to_meta = getattr(self.remote_field.model, "_meta", None)
         if self.remote_field.field_name and (
diff --git a/tests/collation_tests.py b/tests/collation_tests.py
new file mode 100644
index 0000000000..a44573e2fe
--- /dev/null
+++ b/tests/collation_tests.py
@@ -0,0 +1,33 @@
+
+from django.db import models
+from django.test import TestCase
+
+class Account(models.Model):
+    id = models.CharField(primary_key=True, max_length=22, db_collation='utf8_bin')
+    
+    class Meta:
+        app_label = 'collation_tests'
+    
+class Address(models.Model):
+    account = models.ForeignKey(Account, on_delete=models.CASCADE)
+    
+    class Meta:
+        app_label = 'collation_tests'
+    
+class Profile(models.Model):
+    account = models.ForeignKey(Account, on_delete=models.CASCADE)
+    
+    class Meta:
+        app_label = 'collation_tests'
+
+class CollationPropagationTests(TestCase):
+    def test_foreign_key_inherits_collation(self):
+        # Verify Address.account inherits collation from Account.id
+        account_field = Account._meta.get_field('id')
+        address_field = Address._meta.get_field('account')
+        self.assertEqual(address_field.db_collation, account_field.db_collation)
+        
+    def test_explicit_collation_preserved(self):
+        # Verify Profile.account keeps its explicit collation
+        profile_field = Profile._meta.get_field('account')
+        self.assertEqual(profile_field.db_collation, 'utf8_general_ci')

2025-06-26 16:04:54,055 - INFO - ------------------------------
2025-06-26 16:04:54,055 - INFO - END Runtime Completion Fn
2025-06-26 16:04:54,056 - INFO - ------------------------------
2025-06-26 16:04:54,056 - INFO - Got git diff for instance django__django-15629:
--------
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index fad5560486..4441617558 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -951,6 +951,11 @@ class ForeignKey(ForeignObject):
             # the to_field during FK construction. It won't be guaranteed to
             # be correct until contribute_to_class is called. Refs #12190.
             to_field = to_field or (to._meta.pk and to._meta.pk.name)
+            # Propagate db_collation from target field if not explicitly set
+            if 'db_collation' not in kwargs and to_field:
+                target_field = to._meta.get_field(to_field)
+                if hasattr(target_field, 'db_collation') and target_field.db_collation:
+                    kwargs['db_collation'] = target_field.db_collation
         if not callable(on_delete):
             raise TypeError("on_delete must be callable.")
 
@@ -1043,6 +1048,8 @@ class ForeignKey(ForeignObject):
             kwargs["db_index"] = False
         if self.db_constraint is not True:
             kwargs["db_constraint"] = self.db_constraint
+        if hasattr(self, 'db_collation') and self.db_collation:
+            kwargs['db_collation'] = self.db_collation
         # Rel needs more work.
         to_meta = getattr(self.remote_field.model, "_meta", None)
         if self.remote_field.field_name and (
diff --git a/tests/collation_tests.py b/tests/collation_tests.py
new file mode 100644
index 0000000000..a44573e2fe
--- /dev/null
+++ b/tests/collation_tests.py
@@ -0,0 +1,33 @@
+
+from django.db import models
+from django.test import TestCase
+
+class Account(models.Model):
+    id = models.CharField(primary_key=True, max_length=22, db_collation='utf8_bin')
+    
+    class Meta:
+        app_label = 'collation_tests'
+    
+class Address(models.Model):
+    account = models.ForeignKey(Account, on_delete=models.CASCADE)
+    
+    class Meta:
+        app_label = 'collation_tests'
+    
+class Profile(models.Model):
+    account = models.ForeignKey(Account, on_delete=models.CASCADE)
+    
+    class Meta:
+        app_label = 'collation_tests'
+
+class CollationPropagationTests(TestCase):
+    def test_foreign_key_inherits_collation(self):
+        # Verify Address.account inherits collation from Account.id
+        account_field = Account._meta.get_field('id')
+        address_field = Address._meta.get_field('account')
+        self.assertEqual(address_field.db_collation, account_field.db_collation)
+        
+    def test_explicit_collation_preserved(self):
+        # Verify Profile.account keeps its explicit collation
+        profile_field = Profile._meta.get_field('account')
+        self.assertEqual(profile_field.db_collation, 'utf8_general_ci')
--------
2025-06-26 16:04:56,414 - INFO - Using instance container image: swebench/sweb.eval.x86_64.pydata_1776_xarray-4695:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 16:04:56,414 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 16:04:56,415 - INFO - Logging LLM completions for instance pydata__xarray-4695 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/pydata__xarray-4695
