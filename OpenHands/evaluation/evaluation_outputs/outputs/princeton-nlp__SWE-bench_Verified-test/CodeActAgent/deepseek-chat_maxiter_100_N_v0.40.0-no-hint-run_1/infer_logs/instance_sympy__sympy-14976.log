2025-06-26 12:43:19,465 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_qr3g95q312lec72f_634egmkijx387tjz
2025-06-26 12:46:05,569 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_qr3g95q312lec72f_634egmkijx387tjz] build finished.
2025-06-26 12:46:05,579 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_qr3g95q312lec72f_634egmkijx387tjz] with more generic tag [oh_v0.40.0_qr3g95q312lec72f]
2025-06-26 12:46:05,583 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_qr3g95q312lec72f_634egmkijx387tjz, oh_v0.40.0_qr3g95q312lec72f] built successfully
2025-06-26 12:46:05,604 - INFO - [runtime e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_qr3g95q312lec72f_634egmkijx387tjz
2025-06-26 12:46:06,260 - INFO - [runtime e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Container started: openhands-runtime-e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07. VSCode URL: None
2025-06-26 12:46:06,261 - INFO - [runtime e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Waiting for client to become ready at http://localhost:39816...
2025-06-26 12:46:38,412 - INFO - [runtime e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Runtime is ready.
2025-06-26 12:46:40,997 - INFO - ------------------------------
2025-06-26 12:46:40,997 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 12:46:40,998 - INFO - ------------------------------
2025-06-26 12:46:40,998 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-14976' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 12:46:41,641 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:41,641 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 12:46:42,282 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:42,283 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 12:46:42,920 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:42,932 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 12:46:43,571 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=sympy__sympy-14976
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:43,572 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 12:46:44,210 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:44,210 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 12:46:44,849 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:44,849 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.2
2025-06-26 12:46:45,486 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:45,487 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 12:46:46,124 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 9cbea13422 Merge pull request #14971 from cbm755/rf_ff_hiprec_fix
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:46,125 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 12:46:46,769 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:46,770 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 12:46:47,410 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:46:47,411 - INFO - ------------------------------
2025-06-26 12:46:47,412 - INFO - END Runtime Initialization Fn
2025-06-26 12:46:47,412 - INFO - ------------------------------
2025-06-26 12:46:47,435 - INFO - [runtime e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 12:46:47,443 - INFO - Loading user workspace microagents: []
2025-06-26 12:46:47,444 - INFO - [Agent Controller e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] AgentController e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07 - created new state. start_id: 0
2025-06-26 12:46:47,451 - INFO - [Agent Controller e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 12:46:47,452 - INFO - Microagent 'gitlab' triggered by keyword 'git'
2025-06-26 12:46:47,453 - INFO - Microagent 'github' triggered by keyword 'github'
2025-06-26 13:14:39,721 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-26 13:14:39,722 - INFO - [Agent Controller e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-26 13:14:39,728 - WARNING - Stopping agent due to traffic control
2025-06-26 13:14:39,729 - INFO - [Agent Controller e2c7bca2-c244-40d9-af5d-faca27b41f93-1d2283fcc8bd4c07] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-26 13:14:40,394 - INFO - ------------------------------
2025-06-26 13:14:40,394 - INFO - BEGIN Runtime Completion Fn
2025-06-26 13:14:40,395 - INFO - ------------------------------
2025-06-26 13:14:40,395 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.2
2025-06-26 13:14:41,032 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:41,033 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 13:14:41,673 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:41,674 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 13:14:42,314 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:42,315 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 13:14:42,954 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:42,955 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 13:14:43,607 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:43,608 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 9cbea134220b0b951587e11b63e2c832c7246cbc > patch.diff
2025-06-26 13:14:44,249 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "50eb0275bcfd",
  "working_dir": "/workspace/sympy__sympy__1.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:14:44,250 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 13:14:44,255 - INFO - [Read from /workspace/sympy__sympy__1.2/patch.diff is successful.]
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index d06901425d..911bf94af2 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -331,6 +331,32 @@ def _print_Float(self, e):
         args = str(tuple(map(int, e._mpf_)))
         return '{func}({args})'.format(func=self._module_format('mpmath.mpf'), args=args)
 
+    def _print_Number(self, e):
+        if 'mpmath' in self._module_format(''):
+            if hasattr(e, 'p') and hasattr(e, 'q'):  # Handle Rationals
+                return '(mpmath.mpf({})/mpmath.mpf({}))'.format(e.p, e.q)
+            return 'mpmath.mpf({})'.format(float(e))
+        return super()._print_Number(e)
+
+
+    def _print_Rational(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '(mpmath.mpf({})/mpmath.mpf({}))'.format(e.p, e.q)
+        return '{}/{}'.format(e.p, e.q)
+
+    def _print_NumberSymbol(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '{}({})'.format(
+                self._module_format('mpmath.mpf'),
+                str(float(e)))
+        return super()._print_NumberSymbol(e)
+
+    def _print_Integer(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '{0}({1})'.format(
+                self._module_format('mpmath.mpf'),
+                self._print(e.p))
+        return super()._print_Integer(e)
 
     def _print_uppergamma(self, e):
         return "{0}({1}, {2}, {3})".format(
diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..fd563ff8cf 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -680,6 +680,14 @@ def doprint(self, funcname, args, expr):
 
         funcbody.extend(unpackings)
 
+        # Special handling for mpmath numeric literals
+        if 'mpmath' in getattr(self._exprrepr.__self__, '_module_format', lambda x: '')(''):
+            from sympy.core.numbers import Number, Rational
+            if isinstance(expr, Number):
+                if isinstance(expr, Rational):
+                    return 'return mpmath.mpf({}/{})'.format(expr.p, expr.q)
+                return 'return mpmath.mpf({})'.format(self._exprrepr(expr))
+        
         funcbody.append('return ({})'.format(self._exprrepr(expr)))
 
         funclines = [funcsig]
@@ -741,6 +749,15 @@ def _preprocess(self, args, expr):
             else:
                 argstrs.append(str(arg))
 
+        # Handle mpmath number wrapping
+        if hasattr(self._exprrepr, '__self__') and \
+           hasattr(self._exprrepr.__self__, '_module_format') and \
+           'mpmath' in self._exprrepr.__self__._module_format(''):
+            from sympy.core.numbers import Number
+            if isinstance(expr, Number):
+                # Don't simplify numbers - let the printer handle them
+                pass
+
         return argstrs, expr
 
     def _subexpr(self, expr, dummies_dict):

2025-06-26 13:14:44,256 - INFO - ------------------------------
2025-06-26 13:14:44,256 - INFO - END Runtime Completion Fn
2025-06-26 13:14:44,256 - INFO - ------------------------------
2025-06-26 13:14:44,257 - INFO - Got git diff for instance sympy__sympy-14976:
--------
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index d06901425d..911bf94af2 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -331,6 +331,32 @@ def _print_Float(self, e):
         args = str(tuple(map(int, e._mpf_)))
         return '{func}({args})'.format(func=self._module_format('mpmath.mpf'), args=args)
 
+    def _print_Number(self, e):
+        if 'mpmath' in self._module_format(''):
+            if hasattr(e, 'p') and hasattr(e, 'q'):  # Handle Rationals
+                return '(mpmath.mpf({})/mpmath.mpf({}))'.format(e.p, e.q)
+            return 'mpmath.mpf({})'.format(float(e))
+        return super()._print_Number(e)
+
+
+    def _print_Rational(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '(mpmath.mpf({})/mpmath.mpf({}))'.format(e.p, e.q)
+        return '{}/{}'.format(e.p, e.q)
+
+    def _print_NumberSymbol(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '{}({})'.format(
+                self._module_format('mpmath.mpf'),
+                str(float(e)))
+        return super()._print_NumberSymbol(e)
+
+    def _print_Integer(self, e):
+        if 'mpmath' in self._module_format(''):
+            return '{0}({1})'.format(
+                self._module_format('mpmath.mpf'),
+                self._print(e.p))
+        return super()._print_Integer(e)
 
     def _print_uppergamma(self, e):
         return "{0}({1}, {2}, {3})".format(
diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..fd563ff8cf 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -680,6 +680,14 @@ def doprint(self, funcname, args, expr):
 
         funcbody.extend(unpackings)
 
+        # Special handling for mpmath numeric literals
+        if 'mpmath' in getattr(self._exprrepr.__self__, '_module_format', lambda x: '')(''):
+            from sympy.core.numbers import Number, Rational
+            if isinstance(expr, Number):
+                if isinstance(expr, Rational):
+                    return 'return mpmath.mpf({}/{})'.format(expr.p, expr.q)
+                return 'return mpmath.mpf({})'.format(self._exprrepr(expr))
+        
         funcbody.append('return ({})'.format(self._exprrepr(expr)))
 
         funclines = [funcsig]
@@ -741,6 +749,15 @@ def _preprocess(self, args, expr):
             else:
                 argstrs.append(str(arg))
 
+        # Handle mpmath number wrapping
+        if hasattr(self._exprrepr, '__self__') and \
+           hasattr(self._exprrepr.__self__, '_module_format') and \
+           'mpmath' in self._exprrepr.__self__._module_format(''):
+            from sympy.core.numbers import Number
+            if isinstance(expr, Number):
+                # Don't simplify numbers - let the printer handle them
+                pass
+
         return argstrs, expr
 
     def _subexpr(self, expr, dummies_dict):
--------
2025-06-26 13:14:46,223 - INFO - Using instance container image: swebench/sweb.eval.x86_64.mwaskom_1776_seaborn-3187:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 13:14:46,224 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 13:14:46,225 - INFO - Logging LLM completions for instance mwaskom__seaborn-3187 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/mwaskom__seaborn-3187
