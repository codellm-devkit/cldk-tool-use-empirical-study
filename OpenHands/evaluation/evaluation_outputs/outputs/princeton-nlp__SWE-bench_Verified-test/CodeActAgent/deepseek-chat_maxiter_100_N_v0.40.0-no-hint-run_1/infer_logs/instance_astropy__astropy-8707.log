2025-06-26 21:24:12,857 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_npjsox9ttyg9gqb4_634egmkijx387tjz
2025-06-26 21:27:35,415 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_npjsox9ttyg9gqb4_634egmkijx387tjz] build finished.
2025-06-26 21:27:35,424 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_npjsox9ttyg9gqb4_634egmkijx387tjz] with more generic tag [oh_v0.40.0_npjsox9ttyg9gqb4]
2025-06-26 21:27:35,428 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_npjsox9ttyg9gqb4_634egmkijx387tjz, oh_v0.40.0_npjsox9ttyg9gqb4] built successfully
2025-06-26 21:27:35,448 - INFO - [runtime dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_npjsox9ttyg9gqb4_634egmkijx387tjz
2025-06-26 21:27:36,021 - INFO - [runtime dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Container started: openhands-runtime-dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a. VSCode URL: None
2025-06-26 21:27:36,021 - INFO - [runtime dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Waiting for client to become ready at http://localhost:34031...
2025-06-26 21:28:10,149 - INFO - [runtime dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Runtime is ready.
2025-06-26 21:28:12,730 - INFO - ------------------------------
2025-06-26 21:28:12,731 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 21:28:12,731 - INFO - ------------------------------
2025-06-26 21:28:12,732 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=astropy__astropy-8707' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 21:28:13,379 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:13,380 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 21:28:14,020 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:14,021 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 21:28:14,662 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:14,677 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 21:28:15,317 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=astropy__astropy-8707
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:15,318 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 21:28:15,958 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:15,959 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 21:28:17,103 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: astropy__astropy__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:17,103 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/astropy__astropy__3.1
2025-06-26 21:28:17,742 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:17,743 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 21:28:18,386 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at a85a0747c5 Merge pull request #8693 from taldcroft/whatsnew-aldcroft
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:18,387 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 21:28:19,020 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:19,021 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 21:28:19,659 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:28:19,659 - INFO - ------------------------------
2025-06-26 21:28:19,660 - INFO - END Runtime Initialization Fn
2025-06-26 21:28:19,661 - INFO - ------------------------------
2025-06-26 21:28:19,683 - INFO - [runtime dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 21:28:19,687 - INFO - Loading user workspace microagents: []
2025-06-26 21:28:19,688 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] AgentController dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a - created new state. start_id: 0
2025-06-26 21:28:19,695 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 21:30:25,930 - WARNING - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Pending action active for 82.23s: CmdRunAction (id=13)
2025-06-26 21:30:25,930 - WARNING - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Pending action active for 82.24s: CmdRunAction (id=13)
2025-06-26 21:44:02,174 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 21:44:02,177 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 21:47:14,867 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 21:47:14,870 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 21:47:30,869 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 21:47:30,875 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 21:47:31,560 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Context window exceeded. Keeping events with IDs: {0, 1, 2, 128, 4, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 149, 150, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127}
2025-06-26 21:47:52,115 - INFO - [Agent Controller dc7ae5b4-a4ca-45b2-8c79-08b403204117-1345db3a4b5ae17a] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-26 21:47:53,001 - INFO - ------------------------------
2025-06-26 21:47:53,001 - INFO - BEGIN Runtime Completion Fn
2025-06-26 21:47:53,002 - INFO - ------------------------------
2025-06-26 21:47:53,002 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/astropy__astropy__3.1
2025-06-26 21:47:53,641 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:53,642 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 21:47:54,281 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:54,281 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 21:47:54,922 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:54,923 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 21:47:55,563 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:55,563 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 21:47:56,216 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:56,217 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached a85a0747c54bac75e9c3b2fe436b105ea029d6cf > patch.diff
2025-06-26 21:47:56,857 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "37ab0cef4413",
  "working_dir": "/workspace/astropy__astropy__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:47:56,858 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 21:47:56,864 - INFO - [Read from /workspace/astropy__astropy__3.1/patch.diff is successful.]
diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 8c1ac5d738..8abdc7129f 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -547,12 +547,20 @@ class Card(_Verify):
     @classmethod
     def fromstring(cls, image):
         """
-        Construct a `Card` object from a (raw) string. It will pad the string
+        Construct a `Card` object from a (raw) string or bytes. It will pad the string
         if it is not the length of a card image (80 columns).  If the card
         image is longer than 80 columns, assume it contains ``CONTINUE``
         card(s).
+
+        Parameters
+        ----------
+        image : str or bytes
+            The card image as a string or bytes
         """
 
+        if isinstance(image, bytes):
+            image = image.decode('ascii')
+
         card = cls()
         card._image = _pad(image)
         card._verified = False
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..af5523c5ca 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -58,6 +58,13 @@ class Header:
 
     The header may also be indexed by card number::
 
+    @classmethod
+    def _ensure_ascii(cls, input_data):
+        """Ensure input is ASCII string, converting bytes if needed"""
+        if isinstance(input_data, bytes):
+            return input_data.decode('ascii')
+        return str(input_data)
+
         >>> header[0]  # Return the value of the first card in the header
         'T'
 
@@ -329,15 +336,15 @@ class Header:
     @classmethod
     def fromstring(cls, data, sep=''):
         """
-        Creates an HDU header from a byte string containing the entire header
+        Creates an HDU header from a string or bytes containing the entire header
         data.
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
-        sep : str, optional
+        sep : str or bytes, optional
             The string separating cards from each other, such as a newline.  By
             default there is no card separator (as is the case in a raw FITS
             file).
@@ -347,8 +354,26 @@ class Header:
         header
             A new `Header` instance.
         """
+        if isinstance(data, bytes):
+            data = data.decode('ascii')
+        if isinstance(sep, bytes):
+            sep = sep.decode('ascii')
 
         cards = []
+        if sep:
+            data = data.split(sep)
+        else:
+            # If no separator, split into 80-character chunks
+            data = [data[i:i+80] for i in range(0, len(data), 80)]
+
+        for image in data:
+            # Convert to string if needed
+            if isinstance(image, bytes):
+                image = image.decode('ascii')
+            # Clean and normalize to exactly 80 ASCII chars
+            image = str(image).strip()
+            image = image.ljust(80)[:80]
+            cards.append(Card.fromstring(image))
 
         # If the card separator contains characters that may validly appear in
         # a card, the only way to unambiguously distinguish between cards is to

2025-06-26 21:47:56,865 - INFO - ------------------------------
2025-06-26 21:47:56,865 - INFO - END Runtime Completion Fn
2025-06-26 21:47:56,866 - INFO - ------------------------------
2025-06-26 21:47:56,866 - INFO - Got git diff for instance astropy__astropy-8707:
--------
diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 8c1ac5d738..8abdc7129f 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -547,12 +547,20 @@ class Card(_Verify):
     @classmethod
     def fromstring(cls, image):
         """
-        Construct a `Card` object from a (raw) string. It will pad the string
+        Construct a `Card` object from a (raw) string or bytes. It will pad the string
         if it is not the length of a card image (80 columns).  If the card
         image is longer than 80 columns, assume it contains ``CONTINUE``
         card(s).
+
+        Parameters
+        ----------
+        image : str or bytes
+            The card image as a string or bytes
         """
 
+        if isinstance(image, bytes):
+            image = image.decode('ascii')
+
         card = cls()
         card._image = _pad(image)
         card._verified = False
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..af5523c5ca 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -58,6 +58,13 @@ class Header:
 
     The header may also be indexed by card number::
 
+    @classmethod
+    def _ensure_ascii(cls, input_data):
+        """Ensure input is ASCII string, converting bytes if needed"""
+        if isinstance(input_data, bytes):
+            return input_data.decode('ascii')
+        return str(input_data)
+
         >>> header[0]  # Return the value of the first card in the header
         'T'
 
@@ -329,15 +336,15 @@ class Header:
     @classmethod
     def fromstring(cls, data, sep=''):
         """
-        Creates an HDU header from a byte string containing the entire header
+        Creates an HDU header from a string or bytes containing the entire header
         data.
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
-        sep : str, optional
+        sep : str or bytes, optional
             The string separating cards from each other, such as a newline.  By
             default there is no card separator (as is the case in a raw FITS
             file).
@@ -347,8 +354,26 @@ class Header:
         header
             A new `Header` instance.
         """
+        if isinstance(data, bytes):
+            data = data.decode('ascii')
+        if isinstance(sep, bytes):
+            sep = sep.decode('ascii')
 
         cards = []
+        if sep:
+            data = data.split(sep)
+        else:
+            # If no separator, split into 80-character chunks
+            data = [data[i:i+80] for i in range(0, len(data), 80)]
+
+        for image in data:
+            # Convert to string if needed
+            if isinstance(image, bytes):
+                image = image.decode('ascii')
+            # Clean and normalize to exactly 80 ASCII chars
+            image = str(image).strip()
+            image = image.ljust(80)[:80]
+            cards.append(Card.fromstring(image))
 
         # If the card separator contains characters that may validly appear in
         # a card, the only way to unambiguously distinguish between cards is to
--------
2025-06-26 21:47:58,911 - INFO - Using instance container image: swebench/sweb.eval.x86_64.django_1776_django-13195:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 21:47:58,912 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 21:47:58,912 - INFO - Logging LLM completions for instance django__django-13195 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/django__django-13195
