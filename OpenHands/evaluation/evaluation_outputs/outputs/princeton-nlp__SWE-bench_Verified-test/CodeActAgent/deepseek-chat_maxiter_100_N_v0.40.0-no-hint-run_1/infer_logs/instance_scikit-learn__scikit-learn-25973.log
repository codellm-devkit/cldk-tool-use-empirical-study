2025-06-20 14:11:25,726 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0kqi6zhyr5lhlret_634egmkijx387tjz
2025-06-20 14:14:13,674 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0kqi6zhyr5lhlret_634egmkijx387tjz] build finished.
2025-06-20 14:14:13,682 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0kqi6zhyr5lhlret_634egmkijx387tjz] with more generic tag [oh_v0.40.0_0kqi6zhyr5lhlret]
2025-06-20 14:14:13,685 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_0kqi6zhyr5lhlret_634egmkijx387tjz, oh_v0.40.0_0kqi6zhyr5lhlret] built successfully
2025-06-20 14:14:13,695 - INFO - [runtime a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0kqi6zhyr5lhlret_634egmkijx387tjz
2025-06-20 14:14:15,200 - INFO - [runtime a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Container started: openhands-runtime-a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604. VSCode URL: None
2025-06-20 14:14:15,200 - INFO - [runtime a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Waiting for client to become ready at http://localhost:32019...
2025-06-20 14:14:47,313 - INFO - [runtime a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Runtime is ready.
2025-06-20 14:14:49,894 - INFO - ------------------------------
2025-06-20 14:14:49,895 - INFO - BEGIN Runtime Initialization Fn
2025-06-20 14:14:49,895 - INFO - ------------------------------
2025-06-20 14:14:49,896 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=scikit-learn__scikit-learn-25973' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-20 14:14:50,535 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:50,536 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-20 14:14:51,180 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:51,181 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-20 14:14:51,818 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:51,832 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-20 14:14:52,468 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=scikit-learn__scikit-learn-25973
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:52,469 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-20 14:14:53,110 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:53,111 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-20 14:14:54,256 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: scikit-learn__scikit-learn__1.3
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:54,256 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/scikit-learn__scikit-learn__1.3
2025-06-20 14:14:54,391 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:54,392 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-20 14:14:55,031 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 10dbc142b MAINT Parameters validation for datasets.make_moons (#25971)
[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:55,032 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-20 14:14:55,676 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:55,676 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-20 14:14:56,315 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:14:56,316 - INFO - ------------------------------
2025-06-20 14:14:56,316 - INFO - END Runtime Initialization Fn
2025-06-20 14:14:56,317 - INFO - ------------------------------
2025-06-20 14:14:56,340 - INFO - [runtime a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-20 14:14:56,347 - INFO - Loading user workspace microagents: []
2025-06-20 14:14:56,348 - INFO - [Agent Controller a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] AgentController a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604 - created new state. start_id: 0
2025-06-20 14:14:56,356 - INFO - [Agent Controller a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-20 14:37:45,202 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-20 14:37:45,203 - INFO - [Agent Controller a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-20 14:37:45,205 - WARNING - Stopping agent due to traffic control
2025-06-20 14:37:45,206 - INFO - [Agent Controller a24789ec-913c-463c-b1ee-6cf048e1f0ac-292cc7d2d7ecf604] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-20 14:37:45,865 - INFO - ------------------------------
2025-06-20 14:37:45,865 - INFO - BEGIN Runtime Completion Fn
2025-06-20 14:37:45,865 - INFO - ------------------------------
2025-06-20 14:37:45,865 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/scikit-learn__scikit-learn__1.3
2025-06-20 14:37:46,501 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:46,502 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-20 14:37:47,139 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:47,140 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-20 14:37:47,779 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:47,780 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-20 14:37:48,419 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:48,420 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-20 14:37:49,073 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:49,074 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 10dbc142bd17ccf7bd38eec2ac04b52ce0d1009e > patch.diff
2025-06-20 14:37:49,715 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "bb8266ccf964",
  "working_dir": "/workspace/scikit-learn__scikit-learn__1.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/scikit-learn__scikit-learn__1.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-20 14:37:49,715 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-20 14:37:49,721 - INFO - [Read from /workspace/scikit-learn__scikit-learn__1.3/patch.diff is successful.]
diff --git a/sklearn/feature_selection/_sequential.py b/sklearn/feature_selection/_sequential.py
index e983c55de..d9b0eed9f 100644
--- a/sklearn/feature_selection/_sequential.py
+++ b/sklearn/feature_selection/_sequential.py
@@ -186,7 +186,7 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
         self.cv = cv
         self.n_jobs = n_jobs
 
-    def fit(self, X, y=None):
+    def fit(self, X, y=None, **kwargs):
         """Learn the features to select from X.
 
         Parameters
@@ -205,6 +205,35 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
             Returns the instance itself.
         """
         self._validate_params()
+        
+        # Store original CV object
+        self._cv = self.cv
+        
+        # Handle groups parameter if provided
+        self._groups = kwargs.get('groups')
+        
+        # Pre-compute and store CV splits
+        if hasattr(self.cv, 'split'):
+            try:
+                if self._groups is not None:
+                    self._cv_splits = list(self.cv.split(X, y, groups=self._groups))
+                else:
+                    self._cv_splits = list(self.cv.split(X, y))
+            except TypeError as e:
+                if 'groups' in str(e):
+                    raise ValueError(
+                        "CV splitting failed. The groups parameter is required "
+                        f"for this CV strategy. Error details: {str(e)}"
+                    ) from e
+                raise ValueError(
+                    "CV splitting failed. Please check your input data."
+                ) from e
+        else:
+            self._cv_splits = None
+            
+        # Validate we have splits if needed
+        if hasattr(self.cv, 'split') and (self._cv_splits is None or len(self._cv_splits) == 0):
+            raise ValueError("No valid CV splits generated")
 
         # FIXME: to be removed in 1.3
         if self.n_features_to_select in ("warn", None):
@@ -305,11 +334,25 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
             if self.direction == "backward":
                 candidate_mask = ~candidate_mask
             X_new = X[:, candidate_mask]
+            # Handle CV splits with validation
+            if hasattr(self, '_cv_splits') and self._cv_splits is not None:
+                cv = self._cv_splits
+            elif hasattr(self._cv, 'split'):
+                try:
+                    cv = list(self._cv.split(X, y, groups=self._groups))
+                except TypeError:
+                    cv = list(self._cv.split(X, y))
+            else:
+                cv = self._cv
+            
+            if not cv:
+                raise ValueError("No valid CV splits were generated")
+            
             scores[feature_idx] = cross_val_score(
                 estimator,
                 X_new,
                 y,
-                cv=self.cv,
+                cv=cv,
                 scoring=self.scoring,
                 n_jobs=self.n_jobs,
             ).mean()

2025-06-20 14:37:49,722 - INFO - ------------------------------
2025-06-20 14:37:49,722 - INFO - END Runtime Completion Fn
2025-06-20 14:37:49,723 - INFO - ------------------------------
2025-06-20 14:37:49,723 - INFO - Got git diff for instance scikit-learn__scikit-learn-25973:
--------
diff --git a/sklearn/feature_selection/_sequential.py b/sklearn/feature_selection/_sequential.py
index e983c55de..d9b0eed9f 100644
--- a/sklearn/feature_selection/_sequential.py
+++ b/sklearn/feature_selection/_sequential.py
@@ -186,7 +186,7 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
         self.cv = cv
         self.n_jobs = n_jobs
 
-    def fit(self, X, y=None):
+    def fit(self, X, y=None, **kwargs):
         """Learn the features to select from X.
 
         Parameters
@@ -205,6 +205,35 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
             Returns the instance itself.
         """
         self._validate_params()
+        
+        # Store original CV object
+        self._cv = self.cv
+        
+        # Handle groups parameter if provided
+        self._groups = kwargs.get('groups')
+        
+        # Pre-compute and store CV splits
+        if hasattr(self.cv, 'split'):
+            try:
+                if self._groups is not None:
+                    self._cv_splits = list(self.cv.split(X, y, groups=self._groups))
+                else:
+                    self._cv_splits = list(self.cv.split(X, y))
+            except TypeError as e:
+                if 'groups' in str(e):
+                    raise ValueError(
+                        "CV splitting failed. The groups parameter is required "
+                        f"for this CV strategy. Error details: {str(e)}"
+                    ) from e
+                raise ValueError(
+                    "CV splitting failed. Please check your input data."
+                ) from e
+        else:
+            self._cv_splits = None
+            
+        # Validate we have splits if needed
+        if hasattr(self.cv, 'split') and (self._cv_splits is None or len(self._cv_splits) == 0):
+            raise ValueError("No valid CV splits generated")
 
         # FIXME: to be removed in 1.3
         if self.n_features_to_select in ("warn", None):
@@ -305,11 +334,25 @@ class SequentialFeatureSelector(SelectorMixin, MetaEstimatorMixin, BaseEstimator
             if self.direction == "backward":
                 candidate_mask = ~candidate_mask
             X_new = X[:, candidate_mask]
+            # Handle CV splits with validation
+            if hasattr(self, '_cv_splits') and self._cv_splits is not None:
+                cv = self._cv_splits
+            elif hasattr(self._cv, 'split'):
+                try:
+                    cv = list(self._cv.split(X, y, groups=self._groups))
+                except TypeError:
+                    cv = list(self._cv.split(X, y))
+            else:
+                cv = self._cv
+            
+            if not cv:
+                raise ValueError("No valid CV splits were generated")
+            
             scores[feature_idx] = cross_val_score(
                 estimator,
                 X_new,
                 y,
-                cv=self.cv,
+                cv=cv,
                 scoring=self.scoring,
                 n_jobs=self.n_jobs,
             ).mean()
--------
2025-06-20 14:37:53,107 - INFO - Using instance container image: swebench/sweb.eval.x86_64.sphinx-doc_1776_sphinx-8551:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-20 14:37:53,107 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-20 14:37:53,107 - INFO - Logging LLM completions for instance sphinx-doc__sphinx-8551 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/sphinx-doc__sphinx-8551
