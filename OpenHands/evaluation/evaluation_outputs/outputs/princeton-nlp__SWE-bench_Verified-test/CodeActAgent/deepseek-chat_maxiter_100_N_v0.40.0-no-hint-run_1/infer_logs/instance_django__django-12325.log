2025-06-25 21:26:20,848 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_7dzwg5752ia1xnb3_634egmkijx387tjz
2025-06-25 21:29:29,854 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_7dzwg5752ia1xnb3_634egmkijx387tjz] build finished.
2025-06-25 21:29:30,172 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_7dzwg5752ia1xnb3_634egmkijx387tjz] with more generic tag [oh_v0.40.0_7dzwg5752ia1xnb3]
2025-06-25 21:29:30,175 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_7dzwg5752ia1xnb3_634egmkijx387tjz, oh_v0.40.0_7dzwg5752ia1xnb3] built successfully
2025-06-25 21:29:30,183 - INFO - [runtime d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_7dzwg5752ia1xnb3_634egmkijx387tjz
2025-06-25 21:29:30,695 - INFO - [runtime d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Container started: openhands-runtime-d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68. VSCode URL: None
2025-06-25 21:29:30,696 - INFO - [runtime d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Waiting for client to become ready at http://localhost:39703...
2025-06-25 21:30:02,816 - INFO - [runtime d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Runtime is ready.
2025-06-25 21:30:05,410 - INFO - ------------------------------
2025-06-25 21:30:05,411 - INFO - BEGIN Runtime Initialization Fn
2025-06-25 21:30:05,411 - INFO - ------------------------------
2025-06-25 21:30:05,412 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-12325' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-25 21:30:06,057 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:06,058 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-25 21:30:06,700 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:06,701 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-25 21:30:07,341 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:07,354 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-25 21:30:07,993 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=django__django-12325
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:07,994 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-25 21:30:08,631 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:08,631 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-25 21:30:09,774 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:09,774 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__3.1
2025-06-25 21:30:10,417 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:10,418 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-25 21:30:11,561 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 29c126bb34 Fixed #31124 -- Fixed setting of get_FOO_display() when overriding inherited choices.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:11,562 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-25 21:30:12,207 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:12,209 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-25 21:30:12,848 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:30:12,848 - INFO - ------------------------------
2025-06-25 21:30:12,849 - INFO - END Runtime Initialization Fn
2025-06-25 21:30:12,849 - INFO - ------------------------------
2025-06-25 21:30:12,858 - INFO - [runtime d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-25 21:30:12,863 - INFO - Loading user workspace microagents: []
2025-06-25 21:30:12,864 - INFO - [Agent Controller d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] AgentController d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68 - created new state. start_id: 0
2025-06-25 21:30:12,869 - INFO - [Agent Controller d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-25 21:32:12,910 - INFO - [Agent Controller d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-25 21:32:12,916 - INFO - [Agent Controller d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-25 21:36:14,752 - INFO - [Agent Controller d438c38c-0671-467e-ad09-acbe8137bebf-5d9a08088c5acb68] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-25 21:36:15,262 - INFO - ------------------------------
2025-06-25 21:36:15,262 - INFO - BEGIN Runtime Completion Fn
2025-06-25 21:36:15,262 - INFO - ------------------------------
2025-06-25 21:36:15,263 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__3.1
2025-06-25 21:36:15,901 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:15,902 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-25 21:36:16,542 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:16,542 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-25 21:36:17,183 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:17,183 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-25 21:36:17,822 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:17,823 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-25 21:36:18,475 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:18,476 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 29c126bb349526b5f1cd78facbe9f25906f18563 > patch.diff
2025-06-25 21:36:19,117 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ca1849ec00ad",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-25 21:36:19,117 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-25 21:36:19,123 - INFO - [Read from /workspace/django__django__3.1/patch.diff is successful.]
diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..93ac12e90d 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -2,6 +2,7 @@ import bisect
 import copy
 import inspect
 from collections import defaultdict
+from itertools import chain
 
 from django.apps import apps
 from django.conf import settings
@@ -240,20 +241,34 @@ class Options:
 
         if self.pk is None:
             if self.parents:
-                # Promote the first parent link in lieu of adding yet another
-                # field.
-                field = next(iter(self.parents.values()))
-                # Look for a local field with the same name as the
-                # first parent link. If a local field has already been
-                # created, use it instead of promoting the parent
-                already_created = [fld for fld in self.local_fields if fld.name == field.name]
-                if already_created:
-                    field = already_created[0]
+                # First check all local fields for parent_link
+                parent_link_fields = [f for f in self.local_fields 
+                                    if getattr(f.remote_field, 'parent_link', False)]
+                # Then check parent fields if no local parent_link found
+                if not parent_link_fields:
+                    parent_link_fields = [f for f in self.parents.values()
+                                       if getattr(f.remote_field, 'parent_link', False)]
+                
+                if parent_link_fields:
+                    field = parent_link_fields[0]
+                    # Ensure we have the local field instance
+                    if field not in self.local_fields:
+                        field = next((f for f in self.local_fields if f.name == field.name), field)
+                else:
+                    # Fall back to first parent field if no parent_link found
+                    field = next(iter(self.parents.values()))
+                    # Get local field instance if it exists
+                    already_created = [fld for fld in self.local_fields if fld.name == field.name]
+                    if already_created:
+                        field = already_created[0]
+                
                 field.primary_key = True
                 self.setup_pk(field)
-                if not field.remote_field.parent_link:
+                
+                if not any(getattr(f.remote_field, 'parent_link', False) 
+                         for f in chain(self.local_fields, self.parents.values())):
                     raise ImproperlyConfigured(
-                        'Add parent_link=True to %s.' % field,
+                        'Add parent_link=True to a OneToOneField to serve as parent link.'
                     )
             else:
                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..902dd233b1
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,13 @@
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+SECRET_KEY = 'test-key'
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests.model_inheritance',
+]
diff --git a/tests/model_inheritance/test_parent_link_order.py b/tests/model_inheritance/test_parent_link_order.py
new file mode 100644
index 0000000000..ff02307ea7
--- /dev/null
+++ b/tests/model_inheritance/test_parent_link_order.py
@@ -0,0 +1,40 @@
+
+from django.db import models
+from django.test import TestCase
+
+class Document(models.Model):
+    pass
+
+class PickingWorkingOrder(Document):
+    document_ptr = models.OneToOneField(
+        Document, 
+        on_delete=models.CASCADE, 
+        parent_link=True, 
+        related_name='+'
+    )
+    origin = models.OneToOneField(
+        Document, 
+        related_name='working_order_origin', 
+        on_delete=models.PROTECT
+    )
+
+class PickingOriginalOrder(Document):
+    origin = models.OneToOneField(
+        Document, 
+        related_name='original_order_origin', 
+        on_delete=models.PROTECT
+    )
+    document_ptr = models.OneToOneField(
+        Document, 
+        on_delete=models.CASCADE, 
+        parent_link=True, 
+        related_name='+'
+    )
+
+class ParentLinkOrderTest(TestCase):
+    def test_both_orderings_work(self):
+        """Test that parent_link works regardless of field order"""
+        # Both models should create successfully
+        doc = Document.objects.create()
+        PickingWorkingOrder.objects.create(document_ptr=doc, origin=doc)
+        PickingOriginalOrder.objects.create(document_ptr=doc, origin=doc)

2025-06-25 21:36:19,124 - INFO - ------------------------------
2025-06-25 21:36:19,124 - INFO - END Runtime Completion Fn
2025-06-25 21:36:19,125 - INFO - ------------------------------
2025-06-25 21:36:19,125 - INFO - Got git diff for instance django__django-12325:
--------
diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..93ac12e90d 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -2,6 +2,7 @@ import bisect
 import copy
 import inspect
 from collections import defaultdict
+from itertools import chain
 
 from django.apps import apps
 from django.conf import settings
@@ -240,20 +241,34 @@ class Options:
 
         if self.pk is None:
             if self.parents:
-                # Promote the first parent link in lieu of adding yet another
-                # field.
-                field = next(iter(self.parents.values()))
-                # Look for a local field with the same name as the
-                # first parent link. If a local field has already been
-                # created, use it instead of promoting the parent
-                already_created = [fld for fld in self.local_fields if fld.name == field.name]
-                if already_created:
-                    field = already_created[0]
+                # First check all local fields for parent_link
+                parent_link_fields = [f for f in self.local_fields 
+                                    if getattr(f.remote_field, 'parent_link', False)]
+                # Then check parent fields if no local parent_link found
+                if not parent_link_fields:
+                    parent_link_fields = [f for f in self.parents.values()
+                                       if getattr(f.remote_field, 'parent_link', False)]
+                
+                if parent_link_fields:
+                    field = parent_link_fields[0]
+                    # Ensure we have the local field instance
+                    if field not in self.local_fields:
+                        field = next((f for f in self.local_fields if f.name == field.name), field)
+                else:
+                    # Fall back to first parent field if no parent_link found
+                    field = next(iter(self.parents.values()))
+                    # Get local field instance if it exists
+                    already_created = [fld for fld in self.local_fields if fld.name == field.name]
+                    if already_created:
+                        field = already_created[0]
+                
                 field.primary_key = True
                 self.setup_pk(field)
-                if not field.remote_field.parent_link:
+                
+                if not any(getattr(f.remote_field, 'parent_link', False) 
+                         for f in chain(self.local_fields, self.parents.values())):
                     raise ImproperlyConfigured(
-                        'Add parent_link=True to %s.' % field,
+                        'Add parent_link=True to a OneToOneField to serve as parent link.'
                     )
             else:
                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..902dd233b1
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,13 @@
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+SECRET_KEY = 'test-key'
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests.model_inheritance',
+]
diff --git a/tests/model_inheritance/test_parent_link_order.py b/tests/model_inheritance/test_parent_link_order.py
new file mode 100644
index 0000000000..ff02307ea7
--- /dev/null
+++ b/tests/model_inheritance/test_parent_link_order.py
@@ -0,0 +1,40 @@
+
+from django.db import models
+from django.test import TestCase
+
+class Document(models.Model):
+    pass
+
+class PickingWorkingOrder(Document):
+    document_ptr = models.OneToOneField(
+        Document, 
+        on_delete=models.CASCADE, 
+        parent_link=True, 
+        related_name='+'
+    )
+    origin = models.OneToOneField(
+        Document, 
+        related_name='working_order_origin', 
+        on_delete=models.PROTECT
+    )
+
+class PickingOriginalOrder(Document):
+    origin = models.OneToOneField(
+        Document, 
+        related_name='original_order_origin', 
+        on_delete=models.PROTECT
+    )
+    document_ptr = models.OneToOneField(
+        Document, 
+        on_delete=models.CASCADE, 
+        parent_link=True, 
+        related_name='+'
+    )
+
+class ParentLinkOrderTest(TestCase):
+    def test_both_orderings_work(self):
+        """Test that parent_link works regardless of field order"""
+        # Both models should create successfully
+        doc = Document.objects.create()
+        PickingWorkingOrder.objects.create(document_ptr=doc, origin=doc)
+        PickingOriginalOrder.objects.create(document_ptr=doc, origin=doc)
--------
2025-06-25 21:36:21,648 - INFO - Using instance container image: swebench/sweb.eval.x86_64.sympy_1776_sympy-19346:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-25 21:36:21,649 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-25 21:36:21,649 - INFO - Logging LLM completions for instance sympy__sympy-19346 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/sympy__sympy-19346
