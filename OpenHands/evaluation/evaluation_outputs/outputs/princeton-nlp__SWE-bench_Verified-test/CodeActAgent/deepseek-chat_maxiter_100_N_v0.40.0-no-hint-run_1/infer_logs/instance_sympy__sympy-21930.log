2025-06-26 11:01:26,015 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0t4wxkwobgkfrvgr_634egmkijx387tjz
2025-06-26 11:04:35,847 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0t4wxkwobgkfrvgr_634egmkijx387tjz] build finished.
2025-06-26 11:04:35,857 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0t4wxkwobgkfrvgr_634egmkijx387tjz] with more generic tag [oh_v0.40.0_0t4wxkwobgkfrvgr]
2025-06-26 11:04:35,861 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_0t4wxkwobgkfrvgr_634egmkijx387tjz, oh_v0.40.0_0t4wxkwobgkfrvgr] built successfully
2025-06-26 11:04:35,881 - INFO - [runtime a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_0t4wxkwobgkfrvgr_634egmkijx387tjz
2025-06-26 11:04:36,468 - INFO - [runtime a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Container started: openhands-runtime-a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca. VSCode URL: None
2025-06-26 11:04:36,469 - INFO - [runtime a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Waiting for client to become ready at http://localhost:30540...
2025-06-26 11:05:06,577 - INFO - [runtime a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Runtime is ready.
2025-06-26 11:05:09,159 - INFO - ------------------------------
2025-06-26 11:05:09,160 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 11:05:09,160 - INFO - ------------------------------
2025-06-26 11:05:09,160 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-21930' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 11:05:09,805 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:09,805 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 11:05:10,446 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:10,447 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 11:05:11,085 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:11,099 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 11:05:11,738 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=sympy__sympy-21930
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:11,739 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 11:05:12,378 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:12,379 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 11:05:13,017 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.9
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:13,018 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.9
2025-06-26 11:05:13,657 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:13,658 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 11:05:14,297 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at de446c6d85 Merge pull request #21926 from ayushk7102/fix_deprecated_numpy_types
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:14,298 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 11:05:14,940 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:14,941 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 11:05:15,581 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:05:15,581 - INFO - ------------------------------
2025-06-26 11:05:15,582 - INFO - END Runtime Initialization Fn
2025-06-26 11:05:15,582 - INFO - ------------------------------
2025-06-26 11:05:15,602 - INFO - [runtime a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 11:05:15,610 - INFO - Loading user workspace microagents: []
2025-06-26 11:05:15,611 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] AgentController a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca - created new state. start_id: 0
2025-06-26 11:05:15,618 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 11:09:14,243 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 11:09:14,245 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 11:28:37,218 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-26 11:28:37,218 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-26 11:28:37,224 - WARNING - Stopping agent due to traffic control
2025-06-26 11:28:37,225 - INFO - [Agent Controller a64ae45b-0988-4f27-9824-bf3a430fb891-0f9b79c445c682ca] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-26 11:28:38,154 - INFO - ------------------------------
2025-06-26 11:28:38,154 - INFO - BEGIN Runtime Completion Fn
2025-06-26 11:28:38,154 - INFO - ------------------------------
2025-06-26 11:28:38,154 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.9
2025-06-26 11:28:38,793 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:38,793 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 11:28:39,432 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:39,433 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 11:28:40,073 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:40,074 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 11:28:40,713 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:40,713 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 11:28:41,365 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:41,366 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached de446c6d85f633271dfec1452f6f28ea783e293f > patch.diff
2025-06-26 11:28:42,006 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5c2143750437",
  "working_dir": "/workspace/sympy__sympy__1.9",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.9]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 11:28:42,007 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 11:28:42,013 - INFO - [Read from /workspace/sympy__sympy__1.9/patch.diff is successful.]
diff --git a/sympy/physics/secondquant.py b/sympy/physics/secondquant.py
index d19ee2fc63..6557f66533 100644
--- a/sympy/physics/secondquant.py
+++ b/sympy/physics/secondquant.py
@@ -478,7 +478,26 @@ def __repr__(self):
         return "CreateBoson(%s)" % self.state
 
     def _latex(self, printer):
-        return "b^\\dagger_{%s}" % self.state.name
+        from sympy import Pow
+        base = r"b^\dagger_{%s}" % self.state.name
+        if isinstance(self, Pow):
+            return r"{%s}^{%s}" % (base, printer._print(self.exp))
+        return base
+
+    def _eval_power(self, exp):
+        from sympy import Pow
+        # Create a custom Pow that forces brace wrapping
+        p = Pow(self, exp, evaluate=False)
+        p._latex = lambda printer: "{%s}^{%s}" % (
+            printer._print(self),
+            printer._print(exp)
+        )
+        return p
+
+    @property
+    def _needs_brackets(self):
+        """Flag indicating this operator needs brackets when used in exponents"""
+        return True
 
 B = AnnihilateBoson
 Bd = CreateBoson
@@ -1670,11 +1689,11 @@ class Commutator(Function):
     -Commutator(A, B)
 
     Evaluate the commutator with .doit()
+    """
 
-    >>> comm = Commutator(A,B); comm
-    Commutator(A, B)
-    >>> comm.doit()
-    A*B - B*A
+    def _latex(self, printer):
+        a, b = self.args
+        return r"\left[%s,%s\right]" % (printer._print(a), printer._print(b))
 
 
     For two second quantization operators the commutator is evaluated
diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 64d3207d09..ae371c0bb4 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -611,10 +611,15 @@ def convert_args(args):
         return tex
 
     def _print_Pow(self, expr):
+        # Check for operators that need brackets
+        if hasattr(expr.base, '_needs_brackets') and expr.base._needs_brackets:
+            base = r"{%s}" % self._print(expr.base)
+        else:
+            base = self._print(expr.base)
+
         # Treat x**Rational(1,n) as special case
         if expr.exp.is_Rational and abs(expr.exp.p) == 1 and expr.exp.q != 1 \
                 and self._settings['root_notation']:
-            base = self._print(expr.base)
             expq = expr.exp.q
 
             if expq == 2:

2025-06-26 11:28:42,014 - INFO - ------------------------------
2025-06-26 11:28:42,014 - INFO - END Runtime Completion Fn
2025-06-26 11:28:42,014 - INFO - ------------------------------
2025-06-26 11:28:42,015 - INFO - Got git diff for instance sympy__sympy-21930:
--------
diff --git a/sympy/physics/secondquant.py b/sympy/physics/secondquant.py
index d19ee2fc63..6557f66533 100644
--- a/sympy/physics/secondquant.py
+++ b/sympy/physics/secondquant.py
@@ -478,7 +478,26 @@ def __repr__(self):
         return "CreateBoson(%s)" % self.state
 
     def _latex(self, printer):
-        return "b^\\dagger_{%s}" % self.state.name
+        from sympy import Pow
+        base = r"b^\dagger_{%s}" % self.state.name
+        if isinstance(self, Pow):
+            return r"{%s}^{%s}" % (base, printer._print(self.exp))
+        return base
+
+    def _eval_power(self, exp):
+        from sympy import Pow
+        # Create a custom Pow that forces brace wrapping
+        p = Pow(self, exp, evaluate=False)
+        p._latex = lambda printer: "{%s}^{%s}" % (
+            printer._print(self),
+            printer._print(exp)
+        )
+        return p
+
+    @property
+    def _needs_brackets(self):
+        """Flag indicating this operator needs brackets when used in exponents"""
+        return True
 
 B = AnnihilateBoson
 Bd = CreateBoson
@@ -1670,11 +1689,11 @@ class Commutator(Function):
     -Commutator(A, B)
 
     Evaluate the commutator with .doit()
+    """
 
-    >>> comm = Commutator(A,B); comm
-    Commutator(A, B)
-    >>> comm.doit()
-    A*B - B*A
+    def _latex(self, printer):
+        a, b = self.args
+        return r"\left[%s,%s\right]" % (printer._print(a), printer._print(b))
 
 
     For two second quantization operators the commutator is evaluated
diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 64d3207d09..ae371c0bb4 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -611,10 +611,15 @@ def convert_args(args):
         return tex
 
     def _print_Pow(self, expr):
+        # Check for operators that need brackets
+        if hasattr(expr.base, '_needs_brackets') and expr.base._needs_brackets:
+            base = r"{%s}" % self._print(expr.base)
+        else:
+            base = self._print(expr.base)
+
         # Treat x**Rational(1,n) as special case
         if expr.exp.is_Rational and abs(expr.exp.p) == 1 and expr.exp.q != 1 \
                 and self._settings['root_notation']:
-            base = self._print(expr.base)
             expq = expr.exp.q
 
             if expq == 2:
--------
2025-06-26 11:28:44,269 - INFO - Using instance container image: swebench/sweb.eval.x86_64.django_1776_django-15814:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 11:28:44,269 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 11:28:44,269 - INFO - Logging LLM completions for instance django__django-15814 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/django__django-15814
