2025-06-26 13:33:35,723 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_8vw0cchtcfe3yz7n_634egmkijx387tjz
2025-06-26 13:36:39,603 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_8vw0cchtcfe3yz7n_634egmkijx387tjz] build finished.
2025-06-26 13:36:39,614 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_8vw0cchtcfe3yz7n_634egmkijx387tjz] with more generic tag [oh_v0.40.0_8vw0cchtcfe3yz7n]
2025-06-26 13:36:39,617 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_8vw0cchtcfe3yz7n_634egmkijx387tjz, oh_v0.40.0_8vw0cchtcfe3yz7n] built successfully
2025-06-26 13:36:39,627 - INFO - [runtime 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_8vw0cchtcfe3yz7n_634egmkijx387tjz
2025-06-26 13:36:40,103 - INFO - [runtime 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Container started: openhands-runtime-1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395. VSCode URL: None
2025-06-26 13:36:40,103 - INFO - [runtime 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Waiting for client to become ready at http://localhost:35105...
2025-06-26 13:37:12,229 - INFO - [runtime 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Runtime is ready.
2025-06-26 13:37:14,817 - INFO - ------------------------------
2025-06-26 13:37:14,817 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 13:37:14,818 - INFO - ------------------------------
2025-06-26 13:37:14,818 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=astropy__astropy-14182' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 13:37:15,464 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:15,465 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 13:37:16,106 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:16,107 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 13:37:16,746 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:16,759 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 13:37:17,397 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=astropy__astropy-14182
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:17,398 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 13:37:18,039 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:18,039 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 13:37:18,673 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: astropy__astropy__5.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:18,674 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/astropy__astropy__5.1
2025-06-26 13:37:19,314 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:19,315 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 13:37:19,953 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at a5917978be Merge pull request #14172 from astropy/pre-commit-ci-update-config
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:19,954 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 13:37:20,593 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:20,594 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 13:37:21,234 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 13:37:21,235 - INFO - ------------------------------
2025-06-26 13:37:21,235 - INFO - END Runtime Initialization Fn
2025-06-26 13:37:21,236 - INFO - ------------------------------
2025-06-26 13:37:21,271 - INFO - [runtime 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 13:37:21,280 - INFO - Loading user workspace microagents: []
2025-06-26 13:37:21,281 - INFO - [Agent Controller 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] AgentController 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395 - created new state. start_id: 0
2025-06-26 13:37:21,289 - INFO - [Agent Controller 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 14:11:29,953 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-26 14:11:29,954 - INFO - [Agent Controller 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-26 14:11:29,960 - WARNING - Stopping agent due to traffic control
2025-06-26 14:11:29,961 - INFO - [Agent Controller 1bee8b9f-bcfc-43be-b91f-3b6683adbfa8-e34faf3afe603395] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-26 14:11:30,583 - INFO - ------------------------------
2025-06-26 14:11:30,583 - INFO - BEGIN Runtime Completion Fn
2025-06-26 14:11:30,583 - INFO - ------------------------------
2025-06-26 14:11:30,584 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/astropy__astropy__5.1
2025-06-26 14:11:31,222 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:31,223 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 14:11:31,863 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:31,863 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 14:11:32,504 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:32,504 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 14:11:33,144 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:33,145 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 14:11:33,794 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:33,794 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached a5917978be39d13cd90b517e1de4e7a539ffaa48 > patch.diff
2025-06-26 14:11:34,435 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "47dfecdafee9",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 14:11:34,436 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 14:11:34,443 - INFO - [Read from /workspace/astropy__astropy__5.1/patch.diff is successful.]
diff --git a/astropy/io/ascii/connect.py b/astropy/io/ascii/connect.py
index 1501e45035..c53303f1f7 100644
--- a/astropy/io/ascii/connect.py
+++ b/astropy/io/ascii/connect.py
@@ -21,10 +21,18 @@ def io_read(format, filename, **kwargs):
 
 def io_write(format, table, filename, **kwargs):
     from .ui import write
+    from .rst import RST
 
     if format != "ascii":
         format = re.sub(r"^ascii\.", "", format)
         kwargs["format"] = format
+    
+    # Special handling for RST header_rows
+    if format == "rst" and "header_rows" in kwargs:
+        writer = RST()
+        writer.header.header_rows = kwargs.pop("header_rows")
+        kwargs["Writer"] = writer
+        
     return write(table, filename, **kwargs)
 
 
diff --git a/astropy/io/ascii/core.py b/astropy/io/ascii/core.py
index 381b5b13db..ce4528a1d1 100644
--- a/astropy/io/ascii/core.py
+++ b/astropy/io/ascii/core.py
@@ -1811,6 +1811,9 @@ def _get_writer(Writer, fast_writer, **kwargs):
         kwargs["fast_writer"] = fast_writer
         return FAST_CLASSES[f"fast_{Writer._format_name}"](**kwargs)
 
+    # Special handling for RST header_rows
+    if Writer._format_name == 'rst' and 'header_rows' in kwargs:
+        extra_writer_pars = extra_writer_pars - {'header_rows'}
     writer_kwargs = {k: v for k, v in kwargs.items() if k not in extra_writer_pars}
     writer = Writer(**writer_kwargs)
 
diff --git a/astropy/io/ascii/fixedwidth.py b/astropy/io/ascii/fixedwidth.py
index fdadbbc050..b32b7e1a8c 100644
--- a/astropy/io/ascii/fixedwidth.py
+++ b/astropy/io/ascii/fixedwidth.py
@@ -72,6 +72,11 @@ class FixedWidthHeader(basic.BasicHeader):
     position_line = None  # secondary header line position
     """ row index of line that specifies position (default = 1) """
     set_of_position_line_characters = set(r'`~!#$%^&*-_+=\|":' + "'")
+    header_rows = ["name"]  # Default header rows configuration
+
+    def __init__(self, **kwargs):
+        self.header_rows = kwargs.pop('header_rows', ["name"])
+        super().__init__(**kwargs)
 
     def get_line(self, lines, index):
         for i, line in enumerate(self.process_lines(lines)):
diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..c9d148d255 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -18,13 +18,24 @@ class SimpleRSTHeader(FixedWidthHeader):
     start_line = 1
     splitter_class = DefaultSplitter
     position_char = "="
-
+    
     def get_fixedwidth_params(self, line):
         vals, starts, ends = super().get_fixedwidth_params(line)
         # The right hand column can be unbounded
         ends[-1] = None
         return vals, starts, ends
 
+    def process_lines(self, lines):
+        if len(self.header_rows) > 1:
+            # Handle multiple header rows
+            header_lines = [lines[0]] + [self._format_header_line(lines[0])]
+            return header_lines + lines[1:]
+        return super().process_lines(lines)
+
+    def _format_header_line(self, line):
+        """Format additional header lines (e.g. units)"""
+        return " ".join([f"{'='*len(col)}" for col in line.split()])
+
 
 class SimpleRSTData(FixedWidthData):
     start_line = 3
@@ -57,10 +68,16 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader
 
-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
+    def __init__(self, **kwargs):
+        self._header_rows = kwargs.pop('header_rows', None)
+        super().__init__(delimiter_pad=None, bookend=False, **kwargs)
+        if self._header_rows is not None:
+            self.header.header_rows = self._header_rows
 
     def write(self, lines):
         lines = super().write(lines)
-        lines = [lines[1]] + lines + [lines[1]]
+        # For RST format, we want to duplicate the separator line
+        # at both top and bottom of the table
+        separator_idx = len(self.header.header_rows)  # Index of separator line
+        lines = [lines[separator_idx]] + lines + [lines[separator_idx]]
         return lines

2025-06-26 14:11:34,443 - INFO - ------------------------------
2025-06-26 14:11:34,444 - INFO - END Runtime Completion Fn
2025-06-26 14:11:34,444 - INFO - ------------------------------
2025-06-26 14:11:34,445 - INFO - Got git diff for instance astropy__astropy-14182:
--------
diff --git a/astropy/io/ascii/connect.py b/astropy/io/ascii/connect.py
index 1501e45035..c53303f1f7 100644
--- a/astropy/io/ascii/connect.py
+++ b/astropy/io/ascii/connect.py
@@ -21,10 +21,18 @@ def io_read(format, filename, **kwargs):
 
 def io_write(format, table, filename, **kwargs):
     from .ui import write
+    from .rst import RST
 
     if format != "ascii":
         format = re.sub(r"^ascii\.", "", format)
         kwargs["format"] = format
+    
+    # Special handling for RST header_rows
+    if format == "rst" and "header_rows" in kwargs:
+        writer = RST()
+        writer.header.header_rows = kwargs.pop("header_rows")
+        kwargs["Writer"] = writer
+        
     return write(table, filename, **kwargs)
 
 
diff --git a/astropy/io/ascii/core.py b/astropy/io/ascii/core.py
index 381b5b13db..ce4528a1d1 100644
--- a/astropy/io/ascii/core.py
+++ b/astropy/io/ascii/core.py
@@ -1811,6 +1811,9 @@ def _get_writer(Writer, fast_writer, **kwargs):
         kwargs["fast_writer"] = fast_writer
         return FAST_CLASSES[f"fast_{Writer._format_name}"](**kwargs)
 
+    # Special handling for RST header_rows
+    if Writer._format_name == 'rst' and 'header_rows' in kwargs:
+        extra_writer_pars = extra_writer_pars - {'header_rows'}
     writer_kwargs = {k: v for k, v in kwargs.items() if k not in extra_writer_pars}
     writer = Writer(**writer_kwargs)
 
diff --git a/astropy/io/ascii/fixedwidth.py b/astropy/io/ascii/fixedwidth.py
index fdadbbc050..b32b7e1a8c 100644
--- a/astropy/io/ascii/fixedwidth.py
+++ b/astropy/io/ascii/fixedwidth.py
@@ -72,6 +72,11 @@ class FixedWidthHeader(basic.BasicHeader):
     position_line = None  # secondary header line position
     """ row index of line that specifies position (default = 1) """
     set_of_position_line_characters = set(r'`~!#$%^&*-_+=\|":' + "'")
+    header_rows = ["name"]  # Default header rows configuration
+
+    def __init__(self, **kwargs):
+        self.header_rows = kwargs.pop('header_rows', ["name"])
+        super().__init__(**kwargs)
 
     def get_line(self, lines, index):
         for i, line in enumerate(self.process_lines(lines)):
diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..c9d148d255 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -18,13 +18,24 @@ class SimpleRSTHeader(FixedWidthHeader):
     start_line = 1
     splitter_class = DefaultSplitter
     position_char = "="
-
+    
     def get_fixedwidth_params(self, line):
         vals, starts, ends = super().get_fixedwidth_params(line)
         # The right hand column can be unbounded
         ends[-1] = None
         return vals, starts, ends
 
+    def process_lines(self, lines):
+        if len(self.header_rows) > 1:
+            # Handle multiple header rows
+            header_lines = [lines[0]] + [self._format_header_line(lines[0])]
+            return header_lines + lines[1:]
+        return super().process_lines(lines)
+
+    def _format_header_line(self, line):
+        """Format additional header lines (e.g. units)"""
+        return " ".join([f"{'='*len(col)}" for col in line.split()])
+
 
 class SimpleRSTData(FixedWidthData):
     start_line = 3
@@ -57,10 +68,16 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader
 
-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
+    def __init__(self, **kwargs):
+        self._header_rows = kwargs.pop('header_rows', None)
+        super().__init__(delimiter_pad=None, bookend=False, **kwargs)
+        if self._header_rows is not None:
+            self.header.header_rows = self._header_rows
 
     def write(self, lines):
         lines = super().write(lines)
-        lines = [lines[1]] + lines + [lines[1]]
+        # For RST format, we want to duplicate the separator line
+        # at both top and bottom of the table
+        separator_idx = len(self.header.header_rows)  # Index of separator line
+        lines = [lines[separator_idx]] + lines + [lines[separator_idx]]
         return lines
--------
2025-06-26 14:11:36,938 - INFO - Using instance container image: swebench/sweb.eval.x86_64.django_1776_django-11211:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 14:11:36,938 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 14:11:36,939 - INFO - Logging LLM completions for instance django__django-11211 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/django__django-11211
