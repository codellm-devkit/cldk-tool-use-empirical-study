2025-06-23 19:37:24,584 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_2g36gctufj9ti8y0_634egmkijx387tjz
2025-06-23 19:40:11,333 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_2g36gctufj9ti8y0_634egmkijx387tjz] build finished.
2025-06-23 19:40:11,343 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_2g36gctufj9ti8y0_634egmkijx387tjz] with more generic tag [oh_v0.40.0_2g36gctufj9ti8y0]
2025-06-23 19:40:11,347 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_2g36gctufj9ti8y0_634egmkijx387tjz, oh_v0.40.0_2g36gctufj9ti8y0] built successfully
2025-06-23 19:40:11,372 - INFO - [runtime 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_2g36gctufj9ti8y0_634egmkijx387tjz
2025-06-23 19:40:11,871 - INFO - [runtime 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Container started: openhands-runtime-2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e. VSCode URL: None
2025-06-23 19:40:11,871 - INFO - [runtime 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Waiting for client to become ready at http://localhost:30875...
2025-06-23 19:40:41,996 - INFO - [runtime 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Runtime is ready.
2025-06-23 19:40:44,577 - INFO - ------------------------------
2025-06-23 19:40:44,577 - INFO - BEGIN Runtime Initialization Fn
2025-06-23 19:40:44,578 - INFO - ------------------------------
2025-06-23 19:40:44,578 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pytest-dev__pytest-5787' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-23 19:40:45,222 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:45,223 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-23 19:40:45,863 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:45,864 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-23 19:40:46,502 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:46,516 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-23 19:40:47,154 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=pytest-dev__pytest-5787
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:47,155 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-23 19:40:47,795 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:47,795 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-23 19:40:48,434 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pytest-dev__pytest__5.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:48,435 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__5.1
2025-06-23 19:40:49,073 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:49,074 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-23 19:40:49,712 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 955e54221 Merge pull request #5792 from dynatrace-oss-contrib/bugfix/badcase
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:49,713 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-23 19:40:50,354 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:50,355 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-23 19:40:50,993 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:40:50,994 - INFO - ------------------------------
2025-06-23 19:40:50,994 - INFO - END Runtime Initialization Fn
2025-06-23 19:40:50,994 - INFO - ------------------------------
2025-06-23 19:40:51,015 - INFO - [runtime 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-23 19:40:51,020 - INFO - Loading user workspace microagents: []
2025-06-23 19:40:51,021 - INFO - [Agent Controller 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] AgentController 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e - created new state. start_id: 0
2025-06-23 19:40:51,044 - INFO - [Agent Controller 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-23 19:45:05,210 - INFO - [Agent Controller 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-23 19:45:05,214 - INFO - [Agent Controller 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-23 19:45:45,215 - INFO - [Agent Controller 2a0afb91-3f0f-4f4e-b44b-ac9517b58415-0d1fad6d6940764e] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-23 19:45:45,383 - INFO - ------------------------------
2025-06-23 19:45:45,384 - INFO - BEGIN Runtime Completion Fn
2025-06-23 19:45:45,384 - INFO - ------------------------------
2025-06-23 19:45:45,384 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__5.1
2025-06-23 19:45:46,024 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:46,025 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-23 19:45:46,664 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:46,665 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-23 19:45:47,305 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:47,305 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-23 19:45:47,943 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:47,944 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-23 19:45:48,596 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:48,597 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 955e54221008aba577ecbaefa15679f6777d3bf8 > patch.diff
2025-06-23 19:45:49,237 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "8840af90d7b3",
  "working_dir": "/workspace/pytest-dev__pytest__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-23 19:45:49,238 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-23 19:45:49,243 - INFO - [Read from /workspace/pytest-dev__pytest__5.1/patch.diff is successful.]
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index a0f4d15ce..2c5949b4b 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -396,6 +396,41 @@ class ExceptionInfo(Generic[_E]):
     _striptext = attr.ib(type=str, default="")
     _traceback = attr.ib(type=Optional[Traceback], default=None)
 
+    def __reduce__(self):
+        """Custom serialization that preserves exception chains."""
+        if self._excinfo is None:
+            return (self.__class__.for_later, ())
+        
+        type_, value, tb = self._excinfo
+        # Get chain information
+        chain = []
+        if hasattr(value, '__cause__') and value.__cause__ is not None:
+            chain.append(('cause', value.__cause__))
+        if hasattr(value, '__context__') and value.__context__ is not None and not value.__suppress_context__:
+            chain.append(('context', value.__context__))
+            
+        return (
+            self.__class__._reconstruct,
+            (type_, value, tb, self._striptext, chain)
+        )
+
+    @classmethod
+    def _reconstruct(cls, type_, value, tb, striptext, chain):
+        """Reconstruct exception with chain information."""
+        # Rebuild main exception
+        exc_info = (type_, value, tb)
+        instance = cls(exc_info, striptext)
+        
+        # Rebuild chain
+        if chain:
+            for link_type, link_exc in chain:
+                if link_type == 'cause':
+                    value.__cause__ = link_exc
+                else:
+                    value.__context__ = link_exc
+                    
+        return instance
+
     @classmethod
     def from_exc_info(
         cls,
diff --git a/testing/test_exception_chains.py b/testing/test_exception_chains.py
new file mode 100644
index 000000000..a595db6e8
--- /dev/null
+++ b/testing/test_exception_chains.py
@@ -0,0 +1,20 @@
+
+import pytest
+
+def test_chained_exception_with_from():
+    try:
+        try:
+            raise ValueError(11)
+        except Exception as e1:
+            raise ValueError(12) from e1
+    except Exception as e2:
+        raise ValueError(13) from e2
+
+def test_chained_exception_without_from():
+    try:
+        try:
+            raise ValueError(21)
+        except Exception:
+            raise ValueError(22)
+    except Exception:
+        raise ValueError(23)

2025-06-23 19:45:49,244 - INFO - ------------------------------
2025-06-23 19:45:49,244 - INFO - END Runtime Completion Fn
2025-06-23 19:45:49,244 - INFO - ------------------------------
2025-06-23 19:45:49,245 - INFO - Got git diff for instance pytest-dev__pytest-5787:
--------
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index a0f4d15ce..2c5949b4b 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -396,6 +396,41 @@ class ExceptionInfo(Generic[_E]):
     _striptext = attr.ib(type=str, default="")
     _traceback = attr.ib(type=Optional[Traceback], default=None)
 
+    def __reduce__(self):
+        """Custom serialization that preserves exception chains."""
+        if self._excinfo is None:
+            return (self.__class__.for_later, ())
+        
+        type_, value, tb = self._excinfo
+        # Get chain information
+        chain = []
+        if hasattr(value, '__cause__') and value.__cause__ is not None:
+            chain.append(('cause', value.__cause__))
+        if hasattr(value, '__context__') and value.__context__ is not None and not value.__suppress_context__:
+            chain.append(('context', value.__context__))
+            
+        return (
+            self.__class__._reconstruct,
+            (type_, value, tb, self._striptext, chain)
+        )
+
+    @classmethod
+    def _reconstruct(cls, type_, value, tb, striptext, chain):
+        """Reconstruct exception with chain information."""
+        # Rebuild main exception
+        exc_info = (type_, value, tb)
+        instance = cls(exc_info, striptext)
+        
+        # Rebuild chain
+        if chain:
+            for link_type, link_exc in chain:
+                if link_type == 'cause':
+                    value.__cause__ = link_exc
+                else:
+                    value.__context__ = link_exc
+                    
+        return instance
+
     @classmethod
     def from_exc_info(
         cls,
diff --git a/testing/test_exception_chains.py b/testing/test_exception_chains.py
new file mode 100644
index 000000000..a595db6e8
--- /dev/null
+++ b/testing/test_exception_chains.py
@@ -0,0 +1,20 @@
+
+import pytest
+
+def test_chained_exception_with_from():
+    try:
+        try:
+            raise ValueError(11)
+        except Exception as e1:
+            raise ValueError(12) from e1
+    except Exception as e2:
+        raise ValueError(13) from e2
+
+def test_chained_exception_without_from():
+    try:
+        try:
+            raise ValueError(21)
+        except Exception:
+            raise ValueError(22)
+    except Exception:
+        raise ValueError(23)
--------
2025-06-23 19:45:51,096 - INFO - Using instance container image: swebench/sweb.eval.x86_64.django_1776_django-10914:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-23 19:45:51,097 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-23 19:45:51,097 - INFO - Logging LLM completions for instance django__django-10914 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/django__django-10914
