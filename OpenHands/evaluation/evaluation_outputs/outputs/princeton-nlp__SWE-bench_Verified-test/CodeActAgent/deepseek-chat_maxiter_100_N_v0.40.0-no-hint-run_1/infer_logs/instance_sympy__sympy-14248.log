2025-06-26 19:47:32,844 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_w0jvic4ey4ln63ap_634egmkijx387tjz
2025-06-26 19:50:22,137 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_w0jvic4ey4ln63ap_634egmkijx387tjz] build finished.
2025-06-26 19:50:22,148 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_w0jvic4ey4ln63ap_634egmkijx387tjz] with more generic tag [oh_v0.40.0_w0jvic4ey4ln63ap]
2025-06-26 19:50:22,152 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_w0jvic4ey4ln63ap_634egmkijx387tjz, oh_v0.40.0_w0jvic4ey4ln63ap] built successfully
2025-06-26 19:50:22,177 - INFO - [runtime bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_w0jvic4ey4ln63ap_634egmkijx387tjz
2025-06-26 19:50:22,668 - INFO - [runtime bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Container started: openhands-runtime-bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922. VSCode URL: None
2025-06-26 19:50:22,668 - INFO - [runtime bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Waiting for client to become ready at http://localhost:30546...
2025-06-26 19:50:54,792 - INFO - [runtime bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Runtime is ready.
2025-06-26 19:50:56,873 - INFO - ------------------------------
2025-06-26 19:50:56,874 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 19:50:56,874 - INFO - ------------------------------
2025-06-26 19:50:56,875 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-14248' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 19:50:57,516 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:50:57,517 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 19:50:58,156 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:50:58,157 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 19:50:58,797 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:50:58,811 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 19:50:59,447 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=sympy__sympy-14248
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:50:59,448 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 19:51:00,083 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:00,084 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 19:51:01,219 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:01,220 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.1
2025-06-26 19:51:01,857 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:01,857 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 19:51:02,496 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 9986b38181 Merge pull request #14254 from akash9712/prob_cond
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:02,496 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 19:51:03,137 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:03,138 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 19:51:03,775 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 19:51:03,776 - INFO - ------------------------------
2025-06-26 19:51:03,776 - INFO - END Runtime Initialization Fn
2025-06-26 19:51:03,776 - INFO - ------------------------------
2025-06-26 19:51:03,798 - INFO - [runtime bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 19:51:03,805 - INFO - Loading user workspace microagents: []
2025-06-26 19:51:03,805 - INFO - [Agent Controller bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] AgentController bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922 - created new state. start_id: 0
2025-06-26 19:51:03,812 - INFO - [Agent Controller bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 20:12:44,717 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-26 20:12:44,718 - INFO - [Agent Controller bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-26 20:12:44,725 - WARNING - Stopping agent due to traffic control
2025-06-26 20:12:44,726 - INFO - [Agent Controller bf034ee5-626c-4425-b379-9842bc299574-95705c8e939bb922] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-26 20:12:45,601 - INFO - ------------------------------
2025-06-26 20:12:45,602 - INFO - BEGIN Runtime Completion Fn
2025-06-26 20:12:45,602 - INFO - ------------------------------
2025-06-26 20:12:45,602 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sympy__sympy__1.1
2025-06-26 20:12:46,240 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:46,241 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 20:12:46,880 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:46,881 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 20:12:47,520 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:47,521 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 20:12:48,160 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:48,161 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 20:12:48,812 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:48,813 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 9986b38181cdd556a3f3411e553864f11912244e > patch.diff
2025-06-26 20:12:49,452 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "26ed3c50a870",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 20:12:49,453 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 20:12:49,458 - INFO - [Read from /workspace/sympy__sympy__1.1/patch.diff is successful.]
diff --git a/sympy/matrices/expressions/matadd.py b/sympy/matrices/expressions/matadd.py
index bef8e1e9ea..209a7435d2 100644
--- a/sympy/matrices/expressions/matadd.py
+++ b/sympy/matrices/expressions/matadd.py
@@ -28,12 +28,25 @@ class MatAdd(MatrixExpr, AssocOp):
     is_MatAdd = True
 
     def __new__(cls, *args, **kwargs):
-        args = list(map(sympify, args))
+        from sympy.core.mul import Mul
+        from sympy.core.numbers import NegativeOne
+        
+        # Process arguments while preserving subtraction forms
+        processed_args = []
+        for arg in args:
+            arg = sympify(arg)
+            if (isinstance(arg, Mul) and 
+                len(arg.args) == 2 and 
+                arg.args[0] is NegativeOne and
+                isinstance(arg.args[1], MatrixExpr)):
+                processed_args.append(-arg.args[1])
+            else:
+                processed_args.append(arg)
+        
         check = kwargs.get('check', True)
-
-        obj = Basic.__new__(cls, *args)
+        obj = Basic.__new__(cls, *processed_args)
         if check:
-            validate(*args)
+            validate(*processed_args)
         return obj
 
     @property
@@ -49,6 +62,59 @@ def _eval_transpose(self):
     def _eval_adjoint(self):
         return MatAdd(*[adjoint(arg) for arg in self.args]).doit()
 
+    def _sympystr(self, printer):
+        from sympy.core.exprtools import factor_terms
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(' - ' + printer._print(-coeff*term))
+                else:
+                    terms.append('-' + printer._print(-coeff*term))
+            else:
+                if terms:
+                    terms.append(' + ' + printer._print(term))
+                else:
+                    terms.append(printer._print(term))
+        return ''.join(terms)
+
+    def _pretty(self, printer):
+        from sympy.core.exprtools import factor_terms
+        from sympy.printing.pretty.stringpict import prettyForm
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(prettyForm(' - '))
+                    terms.append(printer._print(-coeff*term))
+                else:
+                    terms.append(prettyForm('-'))
+                    terms.append(printer._print(-coeff*term))
+            else:
+                if terms:
+                    terms.append(prettyForm(' + '))
+                terms.append(printer._print(term))
+        return prettyForm(*terms)
+
+    def _latex(self, printer):
+        from sympy.core.exprtools import factor_terms
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(' - ' + printer._print(-coeff*term, mode='plain'))
+                else:
+                    terms.append('-' + printer._print(-coeff*term, mode='plain'))
+            else:
+                if terms:
+                    terms.append(' + ' + printer._print(term, mode='plain'))
+                else:
+                    terms.append(printer._print(term, mode='plain'))
+        return ''.join(terms)
+
     def _eval_trace(self):
         from .trace import trace
         return Add(*[trace(arg) for arg in self.args]).doit()
diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py
index 07dd23549b..af7f59ece4 100644
--- a/sympy/matrices/expressions/matexpr.py
+++ b/sympy/matrices/expressions/matexpr.py
@@ -89,15 +89,17 @@ def __abs__(self):
     def __add__(self, other):
         return MatAdd(self, other).doit()
 
+    @_sympifyit('other', NotImplemented)
+    @call_highest_priority('__rsub__')
+    def __sub__(self, other):
+        from sympy.matrices.expressions.matadd import MatAdd
+        return MatAdd(self, -other, evaluate=False)
+
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__add__')
     def __radd__(self, other):
         return MatAdd(other, self).doit()
 
-    @_sympifyit('other', NotImplemented)
-    @call_highest_priority('__rsub__')
-    def __sub__(self, other):
-        return MatAdd(self, -other).doit()
 
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__sub__')
@@ -648,6 +650,20 @@ class MatrixSymbol(MatrixExpr):
     is_commutative = False
     _diff_wrt = True
 
+    def _sympystr(self, printer):
+        return self.name
+
+    def _pretty(self, printer):
+        from sympy.printing.pretty.stringpict import prettyForm
+        return prettyForm(self.name)
+
+    def _latex(self, printer):
+        return self.name
+
+    def __neg__(self):
+        from sympy.matrices.expressions.matadd import MatAdd
+        return MatAdd(-1, self, evaluate=False)
+
     def __new__(cls, name, n, m):
         n, m = sympify(n), sympify(m)
         obj = Basic.__new__(cls, name, n, m)
diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 0baefe0f7f..e06eb3f796 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -312,8 +312,26 @@ def _print_HadamardProduct(self, expr):
             for arg in expr.args])
 
     def _print_MatAdd(self, expr):
-        return ' + '.join([self.parenthesize(arg, precedence(expr))
-            for arg in expr.args])
+        from sympy.core.mul import Mul
+        terms = []
+        for term in expr.args:
+            # Handle all negative terms (matrix and scalar)
+            if isinstance(term, Mul):
+                coeff, rest = term.as_coeff_mul()
+                if coeff == -1:
+                    term_str = self.parenthesize(Mul(*rest), precedence(expr))
+                    if terms:
+                        terms.append(' - ' + term_str)
+                    else:
+                        terms.append('-' + term_str)
+                    continue
+            # Default case
+            term_str = self.parenthesize(term, precedence(expr))
+            if terms:
+                terms.append(' + ' + term_str)
+            else:
+                terms.append(term_str)
+        return ''.join(terms)
 
     def _print_NaN(self, expr):
         return 'nan'

2025-06-26 20:12:49,459 - INFO - ------------------------------
2025-06-26 20:12:49,460 - INFO - END Runtime Completion Fn
2025-06-26 20:12:49,460 - INFO - ------------------------------
2025-06-26 20:12:49,460 - INFO - Got git diff for instance sympy__sympy-14248:
--------
diff --git a/sympy/matrices/expressions/matadd.py b/sympy/matrices/expressions/matadd.py
index bef8e1e9ea..209a7435d2 100644
--- a/sympy/matrices/expressions/matadd.py
+++ b/sympy/matrices/expressions/matadd.py
@@ -28,12 +28,25 @@ class MatAdd(MatrixExpr, AssocOp):
     is_MatAdd = True
 
     def __new__(cls, *args, **kwargs):
-        args = list(map(sympify, args))
+        from sympy.core.mul import Mul
+        from sympy.core.numbers import NegativeOne
+        
+        # Process arguments while preserving subtraction forms
+        processed_args = []
+        for arg in args:
+            arg = sympify(arg)
+            if (isinstance(arg, Mul) and 
+                len(arg.args) == 2 and 
+                arg.args[0] is NegativeOne and
+                isinstance(arg.args[1], MatrixExpr)):
+                processed_args.append(-arg.args[1])
+            else:
+                processed_args.append(arg)
+        
         check = kwargs.get('check', True)
-
-        obj = Basic.__new__(cls, *args)
+        obj = Basic.__new__(cls, *processed_args)
         if check:
-            validate(*args)
+            validate(*processed_args)
         return obj
 
     @property
@@ -49,6 +62,59 @@ def _eval_transpose(self):
     def _eval_adjoint(self):
         return MatAdd(*[adjoint(arg) for arg in self.args]).doit()
 
+    def _sympystr(self, printer):
+        from sympy.core.exprtools import factor_terms
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(' - ' + printer._print(-coeff*term))
+                else:
+                    terms.append('-' + printer._print(-coeff*term))
+            else:
+                if terms:
+                    terms.append(' + ' + printer._print(term))
+                else:
+                    terms.append(printer._print(term))
+        return ''.join(terms)
+
+    def _pretty(self, printer):
+        from sympy.core.exprtools import factor_terms
+        from sympy.printing.pretty.stringpict import prettyForm
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(prettyForm(' - '))
+                    terms.append(printer._print(-coeff*term))
+                else:
+                    terms.append(prettyForm('-'))
+                    terms.append(printer._print(-coeff*term))
+            else:
+                if terms:
+                    terms.append(prettyForm(' + '))
+                terms.append(printer._print(term))
+        return prettyForm(*terms)
+
+    def _latex(self, printer):
+        from sympy.core.exprtools import factor_terms
+        terms = []
+        for term in self.args:
+            coeff, term = factor_terms(term).as_coeff_Mul()
+            if coeff.is_negative:
+                if terms:
+                    terms.append(' - ' + printer._print(-coeff*term, mode='plain'))
+                else:
+                    terms.append('-' + printer._print(-coeff*term, mode='plain'))
+            else:
+                if terms:
+                    terms.append(' + ' + printer._print(term, mode='plain'))
+                else:
+                    terms.append(printer._print(term, mode='plain'))
+        return ''.join(terms)
+
     def _eval_trace(self):
         from .trace import trace
         return Add(*[trace(arg) for arg in self.args]).doit()
diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py
index 07dd23549b..af7f59ece4 100644
--- a/sympy/matrices/expressions/matexpr.py
+++ b/sympy/matrices/expressions/matexpr.py
@@ -89,15 +89,17 @@ def __abs__(self):
     def __add__(self, other):
         return MatAdd(self, other).doit()
 
+    @_sympifyit('other', NotImplemented)
+    @call_highest_priority('__rsub__')
+    def __sub__(self, other):
+        from sympy.matrices.expressions.matadd import MatAdd
+        return MatAdd(self, -other, evaluate=False)
+
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__add__')
     def __radd__(self, other):
         return MatAdd(other, self).doit()
 
-    @_sympifyit('other', NotImplemented)
-    @call_highest_priority('__rsub__')
-    def __sub__(self, other):
-        return MatAdd(self, -other).doit()
 
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__sub__')
@@ -648,6 +650,20 @@ class MatrixSymbol(MatrixExpr):
     is_commutative = False
     _diff_wrt = True
 
+    def _sympystr(self, printer):
+        return self.name
+
+    def _pretty(self, printer):
+        from sympy.printing.pretty.stringpict import prettyForm
+        return prettyForm(self.name)
+
+    def _latex(self, printer):
+        return self.name
+
+    def __neg__(self):
+        from sympy.matrices.expressions.matadd import MatAdd
+        return MatAdd(-1, self, evaluate=False)
+
     def __new__(cls, name, n, m):
         n, m = sympify(n), sympify(m)
         obj = Basic.__new__(cls, name, n, m)
diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 0baefe0f7f..e06eb3f796 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -312,8 +312,26 @@ def _print_HadamardProduct(self, expr):
             for arg in expr.args])
 
     def _print_MatAdd(self, expr):
-        return ' + '.join([self.parenthesize(arg, precedence(expr))
-            for arg in expr.args])
+        from sympy.core.mul import Mul
+        terms = []
+        for term in expr.args:
+            # Handle all negative terms (matrix and scalar)
+            if isinstance(term, Mul):
+                coeff, rest = term.as_coeff_mul()
+                if coeff == -1:
+                    term_str = self.parenthesize(Mul(*rest), precedence(expr))
+                    if terms:
+                        terms.append(' - ' + term_str)
+                    else:
+                        terms.append('-' + term_str)
+                    continue
+            # Default case
+            term_str = self.parenthesize(term, precedence(expr))
+            if terms:
+                terms.append(' + ' + term_str)
+            else:
+                terms.append(term_str)
+        return ''.join(terms)
 
     def _print_NaN(self, expr):
         return 'nan'
--------
2025-06-26 20:12:51,484 - INFO - Using instance container image: swebench/sweb.eval.x86_64.matplotlib_1776_matplotlib-20826:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 20:12:51,484 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 20:12:51,484 - INFO - Logging LLM completions for instance matplotlib__matplotlib-20826 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/matplotlib__matplotlib-20826
