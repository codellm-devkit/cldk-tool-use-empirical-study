2025-06-26 12:02:33,394 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_p0klvke4unftb351_634egmkijx387tjz
2025-06-26 12:05:19,037 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_p0klvke4unftb351_634egmkijx387tjz] build finished.
2025-06-26 12:05:19,043 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_p0klvke4unftb351_634egmkijx387tjz] with more generic tag [oh_v0.40.0_p0klvke4unftb351]
2025-06-26 12:05:19,046 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_p0klvke4unftb351_634egmkijx387tjz, oh_v0.40.0_p0klvke4unftb351] built successfully
2025-06-26 12:05:19,064 - INFO - [runtime 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_p0klvke4unftb351_634egmkijx387tjz
2025-06-26 12:05:19,543 - INFO - [runtime 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Container started: openhands-runtime-3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c. VSCode URL: None
2025-06-26 12:05:19,544 - INFO - [runtime 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Waiting for client to become ready at http://localhost:31115...
2025-06-26 12:05:49,647 - INFO - [runtime 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Runtime is ready.
2025-06-26 12:05:52,225 - INFO - ------------------------------
2025-06-26 12:05:52,225 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 12:05:52,226 - INFO - ------------------------------
2025-06-26 12:05:52,226 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-13128' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 12:05:52,868 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:52,869 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 12:05:53,506 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:53,507 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 12:05:54,144 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:54,158 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 12:05:54,798 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=django__django-13128
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:54,799 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 12:05:55,436 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:55,437 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 12:05:56,580 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:56,581 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__3.2
2025-06-26 12:05:57,220 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:57,221 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 12:05:58,366 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 2d67222472 Fixed #31522 -- Made admin's SelectBox preserve scroll position.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:58,367 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 12:05:59,009 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:59,010 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 12:05:59,649 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:05:59,650 - INFO - ------------------------------
2025-06-26 12:05:59,650 - INFO - END Runtime Initialization Fn
2025-06-26 12:05:59,651 - INFO - ------------------------------
2025-06-26 12:05:59,677 - INFO - [runtime 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 12:05:59,685 - INFO - Loading user workspace microagents: []
2025-06-26 12:05:59,685 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] AgentController 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c - created new state. start_id: 0
2025-06-26 12:05:59,692 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 12:08:10,978 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 12:08:10,984 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 12:09:28,140 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 12:09:28,143 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 12:15:14,056 - INFO - [Agent Controller 3ff3ed8d-594a-490a-b9bc-71b6d9059807-0e148f85e9e5096c] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-26 12:15:14,282 - INFO - ------------------------------
2025-06-26 12:15:14,282 - INFO - BEGIN Runtime Completion Fn
2025-06-26 12:15:14,283 - INFO - ------------------------------
2025-06-26 12:15:14,283 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/django__django__3.2
2025-06-26 12:15:14,916 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:14,917 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 12:15:15,557 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:15,558 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 12:15:16,200 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:16,200 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 12:15:16,838 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:16,839 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 12:15:17,489 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:17,489 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 2d67222472f80f251607ae1b720527afceba06ad > patch.diff
2025-06-26 12:15:18,131 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c21c5500422e",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 12:15:18,132 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 12:15:18,137 - INFO - [Read from /workspace/django__django__3.2/patch.diff is successful.]
diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index d913658291..e0536acf32 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -451,15 +451,21 @@ class CombinedExpression(SQLiteNumericMixin, Expression):
             rhs_type = self.rhs.output_field.get_internal_type()
         except FieldError:
             rhs_type = None
-        if (
-            not connection.features.has_native_duration_field and
-            'DurationField' in {lhs_type, rhs_type} and
-            lhs_type != rhs_type
-        ):
-            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
+        if 'DurationField' in {lhs_type, rhs_type}:
+            if lhs_type != rhs_type:
+                if not connection.features.has_native_duration_field:
+                    return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
+                # For databases with native duration support, set output_field
+                self.output_field = fields.DurationField()
+            elif self.connector in (self.ADD, self.SUB):
+                self.output_field = fields.DurationField()
         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
-        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:
-            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
+        if self.connector == self.SUB and lhs_type in datetime_fields:
+            if rhs_type in datetime_fields or rhs_type == 'DurationField':
+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
+            elif isinstance(self.rhs, Value) and isinstance(self.rhs.value, datetime.timedelta):
+                self.output_field = fields.DurationField()
+                return super().as_sql(compiler, connection)
         expressions = []
         expression_params = []
         sql, params = compiler.compile(self.lhs)
diff --git a/tests/temporal_ops/__init__.py b/tests/temporal_ops/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/temporal_ops/migrations/__init__.py b/tests/temporal_ops/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/temporal_ops/models.py b/tests/temporal_ops/models.py
new file mode 100644
index 0000000000..6ea018a11e
--- /dev/null
+++ b/tests/temporal_ops/models.py
@@ -0,0 +1,12 @@
+
+
+import datetime
+from django.db import models
+
+class Experiment(models.Model):
+    start = models.DateTimeField()
+    end = models.DateTimeField()
+
+    class Meta:
+        app_label = 'temporal_ops'
+
diff --git a/tests/temporal_ops_test.py b/tests/temporal_ops_test.py
new file mode 100644
index 0000000000..02344c735e
--- /dev/null
+++ b/tests/temporal_ops_test.py
@@ -0,0 +1,30 @@
+
+import datetime
+from django.test import TestCase
+from django.db.models import F, Value
+from django.db.models.expressions import CombinedExpression
+from django.db.models.fields import DurationField
+
+class TemporalOperationsTest(TestCase):
+    def test_temporal_subtraction_expression(self):
+        expr = CombinedExpression(F('end'), '-', F('start'))
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
+
+    def test_temporal_subtraction_with_timedelta(self):
+        expr = CombinedExpression(
+            CombinedExpression(F('end'), '-', F('start')),
+            '+',
+            Value(datetime.timedelta())
+        )
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
+
+    def test_temporal_addition_expression(self):
+        expr = CombinedExpression(
+            CombinedExpression(F('end'), '-', F('start')),
+            '+',
+            Value(datetime.timedelta(days=1))
+        )
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..091d8951cc
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,13 @@
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests.temporal_ops',
+]
+SECRET_KEY = 'test'

2025-06-26 12:15:18,138 - INFO - ------------------------------
2025-06-26 12:15:18,139 - INFO - END Runtime Completion Fn
2025-06-26 12:15:18,139 - INFO - ------------------------------
2025-06-26 12:15:18,139 - INFO - Got git diff for instance django__django-13128:
--------
diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index d913658291..e0536acf32 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -451,15 +451,21 @@ class CombinedExpression(SQLiteNumericMixin, Expression):
             rhs_type = self.rhs.output_field.get_internal_type()
         except FieldError:
             rhs_type = None
-        if (
-            not connection.features.has_native_duration_field and
-            'DurationField' in {lhs_type, rhs_type} and
-            lhs_type != rhs_type
-        ):
-            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
+        if 'DurationField' in {lhs_type, rhs_type}:
+            if lhs_type != rhs_type:
+                if not connection.features.has_native_duration_field:
+                    return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
+                # For databases with native duration support, set output_field
+                self.output_field = fields.DurationField()
+            elif self.connector in (self.ADD, self.SUB):
+                self.output_field = fields.DurationField()
         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
-        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:
-            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
+        if self.connector == self.SUB and lhs_type in datetime_fields:
+            if rhs_type in datetime_fields or rhs_type == 'DurationField':
+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
+            elif isinstance(self.rhs, Value) and isinstance(self.rhs.value, datetime.timedelta):
+                self.output_field = fields.DurationField()
+                return super().as_sql(compiler, connection)
         expressions = []
         expression_params = []
         sql, params = compiler.compile(self.lhs)
diff --git a/tests/temporal_ops/__init__.py b/tests/temporal_ops/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/temporal_ops/migrations/__init__.py b/tests/temporal_ops/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/temporal_ops/models.py b/tests/temporal_ops/models.py
new file mode 100644
index 0000000000..6ea018a11e
--- /dev/null
+++ b/tests/temporal_ops/models.py
@@ -0,0 +1,12 @@
+
+
+import datetime
+from django.db import models
+
+class Experiment(models.Model):
+    start = models.DateTimeField()
+    end = models.DateTimeField()
+
+    class Meta:
+        app_label = 'temporal_ops'
+
diff --git a/tests/temporal_ops_test.py b/tests/temporal_ops_test.py
new file mode 100644
index 0000000000..02344c735e
--- /dev/null
+++ b/tests/temporal_ops_test.py
@@ -0,0 +1,30 @@
+
+import datetime
+from django.test import TestCase
+from django.db.models import F, Value
+from django.db.models.expressions import CombinedExpression
+from django.db.models.fields import DurationField
+
+class TemporalOperationsTest(TestCase):
+    def test_temporal_subtraction_expression(self):
+        expr = CombinedExpression(F('end'), '-', F('start'))
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
+
+    def test_temporal_subtraction_with_timedelta(self):
+        expr = CombinedExpression(
+            CombinedExpression(F('end'), '-', F('start')),
+            '+',
+            Value(datetime.timedelta())
+        )
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
+
+    def test_temporal_addition_expression(self):
+        expr = CombinedExpression(
+            CombinedExpression(F('end'), '-', F('start')),
+            '+',
+            Value(datetime.timedelta(days=1))
+        )
+        expr.output_field = DurationField()
+        self.assertEqual(expr.output_field.__class__, DurationField)
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..091d8951cc
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,13 @@
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests.temporal_ops',
+]
+SECRET_KEY = 'test'
--------
2025-06-26 12:15:20,291 - INFO - Using instance container image: swebench/sweb.eval.x86_64.django_1776_django-13112:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 12:15:20,292 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 12:15:20,292 - INFO - Logging LLM completions for instance django__django-13112 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/django__django-13112
