2025-06-26 21:37:07,512 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_klg1ldbe0bb2et28_634egmkijx387tjz
2025-06-26 21:40:04,995 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_klg1ldbe0bb2et28_634egmkijx387tjz] build finished.
2025-06-26 21:40:05,004 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_klg1ldbe0bb2et28_634egmkijx387tjz] with more generic tag [oh_v0.40.0_klg1ldbe0bb2et28]
2025-06-26 21:40:05,008 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_klg1ldbe0bb2et28_634egmkijx387tjz, oh_v0.40.0_klg1ldbe0bb2et28] built successfully
2025-06-26 21:40:05,030 - INFO - [runtime 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_klg1ldbe0bb2et28_634egmkijx387tjz
2025-06-26 21:40:05,520 - INFO - [runtime 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Container started: openhands-runtime-902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed. VSCode URL: None
2025-06-26 21:40:05,520 - INFO - [runtime 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Waiting for client to become ready at http://localhost:38820...
2025-06-26 21:40:35,635 - INFO - [runtime 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Runtime is ready.
2025-06-26 21:40:38,220 - INFO - ------------------------------
2025-06-26 21:40:38,221 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 21:40:38,221 - INFO - ------------------------------
2025-06-26 21:40:38,222 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pytest-dev__pytest-8399' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 21:40:38,866 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:38,867 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 21:40:39,507 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:39,508 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 21:40:40,147 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:40,159 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 21:40:40,799 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=pytest-dev__pytest-8399
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:40,799 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 21:40:41,443 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:41,443 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 21:40:42,083 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pytest-dev__pytest__6.3
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:42,084 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__6.3
2025-06-26 21:40:42,723 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:42,723 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 21:40:43,363 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 6e7dc8bac Merge pull request #8357 from matthewhughes934/remove-tmpdir-from-tests
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:43,363 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 21:40:44,006 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:44,007 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 21:40:44,646 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 21:40:44,647 - INFO - ------------------------------
2025-06-26 21:40:44,647 - INFO - END Runtime Initialization Fn
2025-06-26 21:40:44,648 - INFO - ------------------------------
2025-06-26 21:40:44,673 - INFO - [runtime 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 21:40:44,682 - INFO - Loading user workspace microagents: []
2025-06-26 21:40:44,682 - INFO - [Agent Controller 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] AgentController 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed - created new state. start_id: 0
2025-06-26 21:40:44,689 - INFO - [Agent Controller 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 22:01:56,720 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 100, max iteration: 100
2025-06-26 22:01:56,721 - INFO - [Agent Controller 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-26 22:01:56,728 - WARNING - Stopping agent due to traffic control
2025-06-26 22:01:56,729 - INFO - [Agent Controller 902479ad-b13e-43fa-864f-a706a3d2a94a-aed85fd028bc96ed] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-06-26 22:01:57,148 - INFO - ------------------------------
2025-06-26 22:01:57,149 - INFO - BEGIN Runtime Completion Fn
2025-06-26 22:01:57,149 - INFO - ------------------------------
2025-06-26 22:01:57,150 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/pytest-dev__pytest__6.3
2025-06-26 22:01:57,791 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:01:57,792 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 22:01:58,431 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:01:58,431 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 22:01:59,072 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:01:59,073 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 22:01:59,712 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:01:59,712 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 22:02:00,365 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:02:00,365 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 6e7dc8bac831cd8cf7a53b08efa366bd84f0c0fe > patch.diff
2025-06-26 22:02:01,005 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "c7ab30309358",
  "working_dir": "/workspace/pytest-dev__pytest__6.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 22:02:01,006 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 22:02:01,012 - INFO - [Read from /workspace/pytest-dev__pytest__6.3/patch.diff is successful.]
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 40116ab9c..9c9d19837 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -1486,6 +1486,17 @@ def _showfixtures_main(config: Config, session: Session) -> None:
         if not fixturedefs:
             continue
         for fixturedef in fixturedefs:
+            # Skip all unittest fixtures unless in verbose mode
+            is_unittest_fixture = ('unittest_' in argname or 
+                                 '_unittest_' in argname or 
+                                 '__unittest_' in argname)
+            if is_unittest_fixture and not verbose:
+                continue
+            # Skip other hidden fixtures unless in verbose mode
+            is_hidden = (hasattr(fixturedef, '_pytestfixturefunction') and
+                        getattr(fixturedef._pytestfixturefunction, 'hidden', False))
+            if is_hidden and not verbose:
+                continue
             loc = getlocation(fixturedef.func, str(curdir))
             if (fixturedef.argname, loc) in seen:
                 continue
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 719eb4e88..8d3630484 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -140,13 +140,17 @@ def _make_xunit_fixture(
         def cleanup(*args):
             pass
 
+    # Create truly hidden unittest fixture
+    fixture_name = f"__unittest_{setup_name}_fixture_{obj.__qualname__}"
+    
     @pytest.fixture(
         scope=scope,
         autouse=True,
-        # Use a unique name to speed up lookup.
-        name=f"unittest_{setup_name}_fixture_{obj.__qualname__}",
+        name=f"_{fixture_name.lstrip('_')}",
+        _pytestfixturefunction=type('', (), {'hidden': True}),
     )
     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:
+        """Internal unittest fixture (hidden by default)"""
         if _is_skipped(self):
             reason = self.__unittest_skip_why__
             raise pytest.skip.Exception(reason, _use_item_location=True)
diff --git a/testing/inspect_fixtures.py b/testing/inspect_fixtures.py
new file mode 100644
index 000000000..45140220c
--- /dev/null
+++ b/testing/inspect_fixtures.py
@@ -0,0 +1,11 @@
+
+import pytest
+from _pytest.fixtures import FixtureManager
+
+def test_inspect_fixtures(request):
+    fm = request.session._fixturemanager
+    for name, fixturedefs in fm._arg2fixturedefs.items():
+        if 'unittest' in name.lower():
+            print(f"Found unittest fixture: {name}")
+            return
+    pytest.fail("No unittest fixtures found")
diff --git a/testing/test_fixture_visibility.py b/testing/test_fixture_visibility.py
new file mode 100644
index 000000000..3c82dcf36
--- /dev/null
+++ b/testing/test_fixture_visibility.py
@@ -0,0 +1,10 @@
+
+import unittest
+
+class TestFixtureVisibility(unittest.TestCase):
+    @classmethod
+    def setUpClass(cls):
+        pass
+
+    def test_example(self):
+        pass
diff --git a/testing/unittest_example.py b/testing/unittest_example.py
new file mode 100644
index 000000000..f0ed42938
--- /dev/null
+++ b/testing/unittest_example.py
@@ -0,0 +1,12 @@
+
+
+import unittest
+
+class ExampleTest(unittest.TestCase):
+    @classmethod
+    def setUpClass(cls):
+        pass
+
+    def test_example(self):
+        pass
+

2025-06-26 22:02:01,012 - INFO - ------------------------------
2025-06-26 22:02:01,013 - INFO - END Runtime Completion Fn
2025-06-26 22:02:01,013 - INFO - ------------------------------
2025-06-26 22:02:01,014 - INFO - Got git diff for instance pytest-dev__pytest-8399:
--------
diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 40116ab9c..9c9d19837 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -1486,6 +1486,17 @@ def _showfixtures_main(config: Config, session: Session) -> None:
         if not fixturedefs:
             continue
         for fixturedef in fixturedefs:
+            # Skip all unittest fixtures unless in verbose mode
+            is_unittest_fixture = ('unittest_' in argname or 
+                                 '_unittest_' in argname or 
+                                 '__unittest_' in argname)
+            if is_unittest_fixture and not verbose:
+                continue
+            # Skip other hidden fixtures unless in verbose mode
+            is_hidden = (hasattr(fixturedef, '_pytestfixturefunction') and
+                        getattr(fixturedef._pytestfixturefunction, 'hidden', False))
+            if is_hidden and not verbose:
+                continue
             loc = getlocation(fixturedef.func, str(curdir))
             if (fixturedef.argname, loc) in seen:
                 continue
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 719eb4e88..8d3630484 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -140,13 +140,17 @@ def _make_xunit_fixture(
         def cleanup(*args):
             pass
 
+    # Create truly hidden unittest fixture
+    fixture_name = f"__unittest_{setup_name}_fixture_{obj.__qualname__}"
+    
     @pytest.fixture(
         scope=scope,
         autouse=True,
-        # Use a unique name to speed up lookup.
-        name=f"unittest_{setup_name}_fixture_{obj.__qualname__}",
+        name=f"_{fixture_name.lstrip('_')}",
+        _pytestfixturefunction=type('', (), {'hidden': True}),
     )
     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:
+        """Internal unittest fixture (hidden by default)"""
         if _is_skipped(self):
             reason = self.__unittest_skip_why__
             raise pytest.skip.Exception(reason, _use_item_location=True)
diff --git a/testing/inspect_fixtures.py b/testing/inspect_fixtures.py
new file mode 100644
index 000000000..45140220c
--- /dev/null
+++ b/testing/inspect_fixtures.py
@@ -0,0 +1,11 @@
+
+import pytest
+from _pytest.fixtures import FixtureManager
+
+def test_inspect_fixtures(request):
+    fm = request.session._fixturemanager
+    for name, fixturedefs in fm._arg2fixturedefs.items():
+        if 'unittest' in name.lower():
+            print(f"Found unittest fixture: {name}")
+            return
+    pytest.fail("No unittest fixtures found")
diff --git a/testing/test_fixture_visibility.py b/testing/test_fixture_visibility.py
new file mode 100644
index 000000000..3c82dcf36
--- /dev/null
+++ b/testing/test_fixture_visibility.py
@@ -0,0 +1,10 @@
+
+import unittest
+
+class TestFixtureVisibility(unittest.TestCase):
+    @classmethod
+    def setUpClass(cls):
+        pass
+
+    def test_example(self):
+        pass
diff --git a/testing/unittest_example.py b/testing/unittest_example.py
new file mode 100644
index 000000000..f0ed42938
--- /dev/null
+++ b/testing/unittest_example.py
@@ -0,0 +1,12 @@
+
+
+import unittest
+
+class ExampleTest(unittest.TestCase):
+    @classmethod
+    def setUpClass(cls):
+        pass
+
+    def test_example(self):
+        pass
+
--------
