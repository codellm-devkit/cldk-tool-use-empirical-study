2025-06-26 16:51:47,433 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_5jpawstspjh4lje3_634egmkijx387tjz
2025-06-26 16:54:23,669 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_5jpawstspjh4lje3_634egmkijx387tjz] build finished.
2025-06-26 16:54:23,675 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.40.0_5jpawstspjh4lje3_634egmkijx387tjz] with more generic tag [oh_v0.40.0_5jpawstspjh4lje3]
2025-06-26 16:54:23,677 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.40.0_5jpawstspjh4lje3_634egmkijx387tjz, oh_v0.40.0_5jpawstspjh4lje3] built successfully
2025-06-26 16:54:23,691 - INFO - [runtime 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.40.0_5jpawstspjh4lje3_634egmkijx387tjz
2025-06-26 16:54:24,163 - INFO - [runtime 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Container started: openhands-runtime-0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113. VSCode URL: None
2025-06-26 16:54:24,163 - INFO - [runtime 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Waiting for client to become ready at http://localhost:38606...
2025-06-26 16:54:56,293 - INFO - [runtime 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Runtime is ready.
2025-06-26 16:54:58,879 - INFO - ------------------------------
2025-06-26 16:54:58,880 - INFO - BEGIN Runtime Initialization Fn
2025-06-26 16:54:58,880 - INFO - ------------------------------
2025-06-26 16:54:58,881 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sphinx-doc__sphinx-9591' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc && git config --global core.pager "" && git config --global diff.binary false
2025-06-26 16:54:59,526 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:54:59,527 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-06-26 16:55:00,168 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:00,168 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-06-26 16:55:00,807 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:00,821 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cat ~/.bashrc
2025-06-26 16:55:01,459 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed

. "/openhands/bin/env"
export ENABLE_AUTO_LINT=true
export NO_CHANGE_TIMEOUT_SECONDS=30
export SWE_INSTANCE_ID=sphinx-doc__sphinx-9591
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:01,460 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source ~/.bashrc
2025-06-26 16:55:02,102 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:02,102 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-06-26 16:55:02,741 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sphinx-doc__sphinx__4.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:02,742 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.2
2025-06-26 16:55:03,380 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:03,381 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git reset --hard
2025-06-26 16:55:04,020 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 9ed054279 Merge pull request #9549 from tk0miya/9524_SphinxTestApp_outdir
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:04,020 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-06-26 16:55:04,663 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:04,663 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
which python
2025-06-26 16:55:05,302 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 16:55:05,303 - INFO - ------------------------------
2025-06-26 16:55:05,303 - INFO - END Runtime Initialization Fn
2025-06-26 16:55:05,304 - INFO - ------------------------------
2025-06-26 16:55:05,324 - INFO - [runtime 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-06-26 16:55:05,330 - INFO - Loading user workspace microagents: []
2025-06-26 16:55:05,331 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] AgentController 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113 - created new state. start_id: 0
2025-06-26 16:55:05,337 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-26 16:55:05,338 - INFO - Microagent 'gitlab' triggered by keyword 'git'
2025-06-26 16:55:05,339 - INFO - Microagent 'github' triggered by keyword 'github'
2025-06-26 17:07:38,826 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Context window exceeded. Keeping events with IDs: {0, 1, 2, 4, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106}
2025-06-26 17:09:11,812 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-06-26 17:09:11,816 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-06-26 17:09:28,124 - INFO - [Agent Controller 0021f0a1-7304-4156-a24f-d52956cba78e-7cf8ab5e6d4b0113] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-06-26 17:09:28,289 - INFO - ------------------------------
2025-06-26 17:09:28,289 - INFO - BEGIN Runtime Completion Fn
2025-06-26 17:09:28,289 - INFO - ------------------------------
2025-06-26 17:09:28,289 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.2
2025-06-26 17:09:28,927 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:28,928 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git config --global core.pager ""
2025-06-26 17:09:29,567 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:29,568 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
find . -type d -name .git -not -path "./.git"
2025-06-26 17:09:30,207 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:30,208 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git add -A
2025-06-26 17:09:30,848 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:30,848 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
for file in $(git status --porcelain | grep -E "^(M| M|\?\?|A| A)" | cut -c4-); do
        if [ -f "$file" ] && (file "$file" | grep -q "executable" || git check-attr binary "$file" | grep -q "binary: set"); then
            git rm -f "$file" 2>/dev/null || rm -f "$file"
            echo "Removed: $file"
        fi
    done
2025-06-26 17:09:31,500 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
bash: file: command not found
bash: file: command not found
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:31,501 - INFO - **CmdRunAction (source=None, is_input=False)**
COMMAND:
git diff --no-color --cached 9ed054279aeffd5b1d0642e2d24a8800389de29f > patch.diff
2025-06-26 17:09:32,141 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b5d3306dae3b",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
[Command finished with exit code 0]
--END AGENT OBSERVATION--
2025-06-26 17:09:32,141 - INFO - FileReadAction(path='patch.diff', start=0, end=-1, thought='', action=<ActionType.READ: 'read'>, security_risk=None, impl_source=<FileReadSource.DEFAULT: 'default'>, view_range=None)
2025-06-26 17:09:32,147 - INFO - [Read from /workspace/sphinx-doc__sphinx__4.2/patch.diff is successful.]
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 938f976cd..6db542bbb 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -2723,19 +2723,33 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #
         else:
             func = None
 
-        if func and self.config.autodoc_typehints != 'none':
+        if self.config.autodoc_typehints != 'none':
+            # First try to get type from class annotations
             try:
-                signature = inspect.signature(func,
-                                              type_aliases=self.config.autodoc_type_aliases)
-                if signature.return_annotation is not Parameter.empty:
-                    objrepr = stringify_typehint(signature.return_annotation)
+                annotations = get_type_hints(self.parent, None,
+                                             self.config.autodoc_type_aliases)
+                if self.objpath[-1] in annotations:
+                    annotation = annotations[self.objpath[-1]]
+                    objrepr = restify(annotation)
                     self.add_line('   :type: ' + objrepr, sourcename)
-            except TypeError as exc:
-                logger.warning(__("Failed to get a function signature for %s: %s"),
-                               self.fullname, exc)
-                return None
-            except ValueError:
-                return None
+                    return
+            except (TypeError, NameError) as exc:
+                logger.debug(f"Failed to get type hints: {exc}")
+                pass
+            
+            # Fall back to signature inspection for properties
+            if func:
+                try:
+                    signature = inspect.signature(func,
+                                                type_aliases=self.config.autodoc_type_aliases)
+                    if signature.return_annotation is not Parameter.empty:
+                        objrepr = restify(signature.return_annotation)
+                        self.add_line('   :type: ' + objrepr, sourcename)
+                except TypeError as exc:
+                    logger.warning(__("Failed to get a function signature for %s: %s"),
+                                   self.fullname, exc)
+                except ValueError:
+                    pass
 
 
 class NewTypeAttributeDocumenter(AttributeDocumenter):
diff --git a/tests/test_ext_autodoc_property_typehints.py b/tests/test_ext_autodoc_property_typehints.py
new file mode 100644
index 000000000..ec87f3592
--- /dev/null
+++ b/tests/test_ext_autodoc_property_typehints.py
@@ -0,0 +1,52 @@
+
+import pytest
+from sphinx.testing.util import SphinxTestApp
+from textwrap import dedent
+
+@pytest.mark.sphinx('html', testroot='ext-autodoc')
+def test_property_typehints(app: SphinxTestApp, status, warning):
+    """Test that property type annotations are properly cross-referenced."""
+    # Create test source files
+    with open(app.srcdir / 'module.py', 'w') as f:
+        f.write(dedent('''
+            from typing import Optional
+
+            class Point:
+                """A class representing a point."""
+                x: int
+                y: int
+
+            class Square:
+                """A class representing a square."""
+                @property
+                def end(self) -> Point:
+                    """Square's end position."""
+                    return Point()
+        '''))
+
+    with open(app.srcdir / 'index.rst', 'w') as f:
+        f.write(dedent('''
+            .. automodule:: module
+                :members:
+        '''))
+
+    app.build()
+    content = (app.outdir / 'index.html').read_text()
+    
+    # Debug output
+    print("\n=== Generated Documentation ===\n")
+    print(content)
+    print("\n=============================\n")
+    
+    # Verify property documentation structure
+    assert '<dl class="py property">' in content, "Property documentation not found"
+    assert 'id="module.Square.end"' in content, "Property documentation not found"
+    assert ':class:`module.Point`' in content, "Point type reference not found"
+    # Check for docstring with either straight or curly quotes
+    assert ('Square\'s end position' in content or 
+            'Square’s end position' in content), "Property docstring missing"
+    
+    # Debug output
+    print("\n=== Property Documentation ===")
+    print(content.split('id="module.Square.end"')[1].split('</dl>')[0])
+    print("=============================")

2025-06-26 17:09:32,148 - INFO - ------------------------------
2025-06-26 17:09:32,148 - INFO - END Runtime Completion Fn
2025-06-26 17:09:32,148 - INFO - ------------------------------
2025-06-26 17:09:32,148 - INFO - Got git diff for instance sphinx-doc__sphinx-9591:
--------
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 938f976cd..6db542bbb 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -2723,19 +2723,33 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #
         else:
             func = None
 
-        if func and self.config.autodoc_typehints != 'none':
+        if self.config.autodoc_typehints != 'none':
+            # First try to get type from class annotations
             try:
-                signature = inspect.signature(func,
-                                              type_aliases=self.config.autodoc_type_aliases)
-                if signature.return_annotation is not Parameter.empty:
-                    objrepr = stringify_typehint(signature.return_annotation)
+                annotations = get_type_hints(self.parent, None,
+                                             self.config.autodoc_type_aliases)
+                if self.objpath[-1] in annotations:
+                    annotation = annotations[self.objpath[-1]]
+                    objrepr = restify(annotation)
                     self.add_line('   :type: ' + objrepr, sourcename)
-            except TypeError as exc:
-                logger.warning(__("Failed to get a function signature for %s: %s"),
-                               self.fullname, exc)
-                return None
-            except ValueError:
-                return None
+                    return
+            except (TypeError, NameError) as exc:
+                logger.debug(f"Failed to get type hints: {exc}")
+                pass
+            
+            # Fall back to signature inspection for properties
+            if func:
+                try:
+                    signature = inspect.signature(func,
+                                                type_aliases=self.config.autodoc_type_aliases)
+                    if signature.return_annotation is not Parameter.empty:
+                        objrepr = restify(signature.return_annotation)
+                        self.add_line('   :type: ' + objrepr, sourcename)
+                except TypeError as exc:
+                    logger.warning(__("Failed to get a function signature for %s: %s"),
+                                   self.fullname, exc)
+                except ValueError:
+                    pass
 
 
 class NewTypeAttributeDocumenter(AttributeDocumenter):
diff --git a/tests/test_ext_autodoc_property_typehints.py b/tests/test_ext_autodoc_property_typehints.py
new file mode 100644
index 000000000..ec87f3592
--- /dev/null
+++ b/tests/test_ext_autodoc_property_typehints.py
@@ -0,0 +1,52 @@
+
+import pytest
+from sphinx.testing.util import SphinxTestApp
+from textwrap import dedent
+
+@pytest.mark.sphinx('html', testroot='ext-autodoc')
+def test_property_typehints(app: SphinxTestApp, status, warning):
+    """Test that property type annotations are properly cross-referenced."""
+    # Create test source files
+    with open(app.srcdir / 'module.py', 'w') as f:
+        f.write(dedent('''
+            from typing import Optional
+
+            class Point:
+                """A class representing a point."""
+                x: int
+                y: int
+
+            class Square:
+                """A class representing a square."""
+                @property
+                def end(self) -> Point:
+                    """Square's end position."""
+                    return Point()
+        '''))
+
+    with open(app.srcdir / 'index.rst', 'w') as f:
+        f.write(dedent('''
+            .. automodule:: module
+                :members:
+        '''))
+
+    app.build()
+    content = (app.outdir / 'index.html').read_text()
+    
+    # Debug output
+    print("\n=== Generated Documentation ===\n")
+    print(content)
+    print("\n=============================\n")
+    
+    # Verify property documentation structure
+    assert '<dl class="py property">' in content, "Property documentation not found"
+    assert 'id="module.Square.end"' in content, "Property documentation not found"
+    assert ':class:`module.Point`' in content, "Point type reference not found"
+    # Check for docstring with either straight or curly quotes
+    assert ('Square\'s end position' in content or 
+            'Square’s end position' in content), "Property docstring missing"
+    
+    # Debug output
+    print("\n=== Property Documentation ===")
+    print(content.split('id="module.Square.end"')[1].split('</dl>')[0])
+    print("=============================")
--------
2025-06-26 17:09:34,304 - INFO - Using instance container image: swebench/sweb.eval.x86_64.sympy_1776_sympy-12419:latest. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-06-26 17:09:34,304 - INFO - Resource mapping for princeton-nlp__SWE-bench_Verified-test not found.
2025-06-26 17:09:34,305 - INFO - Logging LLM completions for instance sympy__sympy-12419 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_100_N_v0.40.0-no-hint-run_1/llm_completions/sympy__sympy-12419
